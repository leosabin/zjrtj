Index: app/src/main/res/anim/slide_in_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/anim/slide_in_up.xml	(revision )
+++ app/src/main/res/anim/slide_in_up.xml	(revision )
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromYDelta="100%p" android:toYDelta="0%p"
+    android:duration="@android:integer/config_longAnimTime"/>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_average_team_info.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_average_team_info.xml	(revision )
+++ app/src/main/res/layout/fragment_average_team_info.xml	(revision )
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v4.widget.NestedScrollView android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    app:layout_behavior="android.support.design.widget.AppBarLayout$ScrollingViewBehavior"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <TextView
+                android:id="@+id/info_average_lastUpdated"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="8dp"
+                android:text="Last Updated"
+                android:textAppearance="@style/TextAppearance.AppCompat.Subhead"
+                android:textSize="20sp" />
+
+        </LinearLayout>
+
+        <include layout="@layout/layout_info_average_auto" />
+
+        <include layout="@layout/layout_info_average_teleop" />
+
+        <include layout="@layout/layout_info_average_summary" />
+
+    </LinearLayout>
+
+</android.support.v4.widget.NestedScrollView>
\ No newline at end of file
Index: app/src/main/res/values-v21/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-v21/styles.xml	(revision )
+++ app/src/main/res/values-v21/styles.xml	(revision )
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <style name="ThunderScout.BaseTheme" parent="Theme.AppCompat.NoActionBar">
+        <item name="colorPrimary">@color/primary</item>
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <item name="colorAccent">@color/accent</item>
+    </style>
+
+    <style name="ThunderScout.BaseTheme.ActionBar" parent="Theme.AppCompat">
+        <item name="colorPrimary">@color/primary</item>
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <item name="colorAccent">@color/accent</item>
+    </style>
+
+    <style name="ThunderScout.BaseTheme.Translucent" parent="ThunderScout.BaseTheme">
+        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
+        <item name="android:statusBarColor">@android:color/transparent</item>
+    </style>
+
+    <style name="ThunderScout.BaseTheme.NavigationPane" parent="ThunderScout.BaseTheme">
+        <item name="android:statusBarColor">@android:color/transparent</item>
+    </style>
+
+</resources>
\ No newline at end of file
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in C:\Users\Luke\AppData\Local\Android\sdk5/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: app/src/main/java/com/team980/thunderscout/integrations/sheets/task/SheetsUpdateTask2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/integrations/sheets/task/SheetsUpdateTask2.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/integrations/sheets/task/SheetsUpdateTask2.java	(revision )
@@ -0,0 +1,175 @@
+package com.team980.thunderscout.integrations.sheets.task;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.os.AsyncTask;
+import android.preference.PreferenceManager;
+
+import com.google.api.client.extensions.android.http.AndroidHttp;
+import com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential;
+import com.google.api.client.http.HttpTransport;
+import com.google.api.client.json.JsonFactory;
+import com.google.api.client.json.jackson2.JacksonFactory;
+import com.google.api.client.util.ExponentialBackOff;
+import com.google.api.services.sheets.v4.Sheets;
+import com.google.api.services.sheets.v4.SheetsScopes;
+import com.google.api.services.sheets.v4.model.BatchUpdateValuesRequest;
+import com.google.api.services.sheets.v4.model.CellData;
+import com.google.api.services.sheets.v4.model.ExtendedValue;
+import com.google.api.services.sheets.v4.model.GridData;
+import com.google.api.services.sheets.v4.model.RowData;
+import com.google.api.services.sheets.v4.model.Sheet;
+import com.google.api.services.sheets.v4.model.Spreadsheet;
+import com.google.api.services.sheets.v4.model.ValueRange;
+import com.team980.thunderscout.ThunderScout;
+import com.team980.thunderscout.data.ScoutData;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+@Deprecated
+/**
+ * use SheetsUpdateTask instead, this is just for reference
+ */
+public class SheetsUpdateTask2 extends AsyncTask<ScoutData, Void, Void> {
+
+    private Context context;
+
+    private Sheets sheetsService = null;
+
+    private static final String[] ACCOUNT_SCOPES = {SheetsScopes.SPREADSHEETS, SheetsScopes.DRIVE};
+
+    String spreadsheetId;
+
+    public SheetsUpdateTask2(Context context) {
+        this.context = context;
+
+        GoogleAccountCredential credential = GoogleAccountCredential.usingOAuth2(
+                context, Arrays.asList(ACCOUNT_SCOPES))
+                .setBackOff(new ExponentialBackOff());
+
+        SharedPreferences settings =
+                PreferenceManager.getDefaultSharedPreferences(context);
+
+        credential.setSelectedAccountName(settings.getString("google_account_name", null));
+
+        HttpTransport transport = AndroidHttp.newCompatibleTransport();
+        JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
+        sheetsService = new Sheets.Builder(
+                transport, jsonFactory, credential)
+                .setApplicationName("ThunderScout")
+                .build();
+    }
+
+    @Override
+    protected void onPreExecute() {
+        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
+
+        spreadsheetId = preferences.getString("linked_spreadsheet_id", null);
+    }
+
+    @Override
+    protected Void doInBackground(ScoutData... dataList) {
+        Spreadsheet spreadsheet;
+
+        try {
+            spreadsheet = sheetsService.spreadsheets().get(spreadsheetId).execute(); //spreadsheet which contains workbooks
+
+            for (ScoutData data : dataList) { //loop for each data object... there should only be 1 but who cares
+
+                List<Sheet> sheets = spreadsheet.getSheets();
+                Sheet teamSheet = null; //workbook for team
+
+                for (Sheet s : sheets) {
+                    if (s.getProperties().getTitle() == data.getTeamNumber()) {
+                        teamSheet = s;
+                        break;
+                    } else if (!ThunderScout.isInteger(s.getProperties().getTitle())) {
+                        sheets.remove(s); //removes that pesky default sheet
+                    }
+                }
+
+                if (teamSheet == null) {
+                    teamSheet = new Sheet();
+                    teamSheet.getProperties().setTitle(data.getTeamNumber());
+                    spreadsheet.getSheets().add(teamSheet);
+                    insertInitData(teamSheet);
+                }
+
+                insertIntoSheet(teamSheet, data);
+
+            }
+
+            //TODO push changes / build proper request format
+            //sheetsService.spreadsheets().values().batchUpdate(spreadsheetId, )
+            //OR sheetsService.spreadsheets().values().update()
+
+            //TODO is it this?
+            //DimensionRange range1 = new DimensionRange();
+            //range1.setSheetId()
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+        return null;
+    }
+
+    @Deprecated
+    private void insertInitData(Sheet sheet) {
+
+    }
+
+    @Deprecated
+    private BatchUpdateValuesRequest initUpdateRequest(ScoutData data) {
+        BatchUpdateValuesRequest updateRequest = new BatchUpdateValuesRequest();
+
+        ArrayList<ValueRange> valueRanges = new ArrayList<>();
+        ValueRange range = new ValueRange();
+        range.setMajorDimension("COLUMNS");
+        valueRanges.add(range);
+
+        updateRequest.setData(valueRanges);
+        return updateRequest;
+    }
+
+    @Deprecated
+    private void insertIntoSheet(Sheet sheet, ScoutData scoutData) {
+        ArrayList<RowData> rows = new ArrayList<>();
+        ArrayList<CellData> cells = new ArrayList<>();
+
+        // Init a CellData object for each data cell
+        CellData name = new CellData();
+        name.setUserEnteredValue(
+                new ExtendedValue().setStringValue(scoutData.getComments()));
+        cells.add(name);
+
+        CellData email = new CellData();
+        email.setUserEnteredValue(
+                new ExtendedValue().setStringValue(scoutData.getComments()));
+        cells.add(email);
+
+        CellData phoneNumber = new CellData();
+        phoneNumber.setUserEnteredValue(
+                new ExtendedValue().setStringValue(scoutData.getComments()));
+        cells.add(phoneNumber);
+
+        CellData grade = new CellData();
+        grade.setUserEnteredValue(
+                new ExtendedValue().setNumberValue((double) scoutData.getDateAdded()));
+        cells.add(grade);
+
+
+        // Add data column to sheet (looks hacky, ik)
+        rows.add(new RowData().setValues(cells));
+
+        GridData gridData = new GridData();
+        gridData.setRowData(rows);
+
+        ArrayList<GridData> gridList = new ArrayList<>();
+        gridList.add(gridData);
+
+        sheet.setData(gridList);
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/data/AverageScoutData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/AverageScoutData.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/AverageScoutData.java	(revision )
@@ -0,0 +1,181 @@
+package com.team980.thunderscout.data;
+
+import com.team980.thunderscout.data.enumeration.ClimbingStats;
+import com.team980.thunderscout.data.enumeration.FuelDumpAmount;
+
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.EnumMap;
+import java.util.List;
+
+/**
+ * Class to manage averaging of values and objects.
+ * Created by TeamWrapper.
+ */
+
+public class AverageScoutData implements Serializable {
+
+    private List<ScoutData> dataList;
+
+    public AverageScoutData(List<ScoutData> d) {
+        dataList = d;
+    }
+
+    //INIT
+
+    public String getTeamNumber() {
+        return dataList.get(0).getTeamNumber();
+    }
+
+    public long getLastUpdated() {
+        return dataList.get(0).getDateAdded(); //dateAdded of newest match
+    }
+
+    public int getNumberOfMatches() {
+        return dataList.size();
+    }
+
+    //AUTO
+
+    public float getAverageAutoGearsDelivered() {
+        float i = 0;
+        for (ScoutData data : dataList) {
+            i += data.getAutoGearsDelivered();
+        }
+
+        return i / dataList.size();
+    }
+
+    //Averages the ordinal
+    public FuelDumpAmount getAverageAutoLowGoalDumpAmount() {
+        float i = 0;
+        for (ScoutData data : dataList) {
+            i += data.getAutoLowGoalDumpAmount().ordinal();
+        }
+
+        int average = (int) (i / dataList.size());
+
+        return FuelDumpAmount.values()[average];
+    }
+
+    public float getAverageAutoHighGoals() {
+        float i = 0;
+        for (ScoutData data : dataList) {
+            i += data.getAutoHighGoals();
+        }
+
+        return i / dataList.size();
+    }
+
+    public float getAverageAutoMissedHighGoals() {
+        float i = 0;
+        for (ScoutData data : dataList) {
+            i += data.getAutoMissedHighGoals();
+        }
+
+        return i / dataList.size();
+    }
+
+    public double getCrossedBaselinePercentage() {
+        double i = 0;
+        for (ScoutData data : dataList) {
+            if (data.hasCrossedBaseline()) {
+                i++;
+            }
+        }
+
+        return (i / dataList.size()) * 100;
+    }
+
+    //TELEOP
+
+    public float getAverageTeleopGearsDelivered() {
+        float i = 0;
+        for (ScoutData data : dataList) {
+            i += data.getTeleopGearsDelivered();
+        }
+
+        return i / dataList.size();
+    }
+
+    public float getAverageTeleopDumpFrequency() {
+        float i = 0;
+        for (ScoutData data : dataList) {
+            i += data.getTeleopLowGoalDumps().size();
+        }
+
+        return i / dataList.size();
+    }
+
+    //Uses ordinal
+    public FuelDumpAmount getAverageTeleopLowGoalDumpAmount() {
+        float i = 0;
+        for (ScoutData data : dataList) {
+            for (FuelDumpAmount amount : data.getTeleopLowGoalDumps()) {
+                i += amount.ordinal();
+            }
+        }
+
+        int average = (int) (i / dataList.size());
+
+        if (average >= FuelDumpAmount.values().length) {
+            average = FuelDumpAmount.values().length - 1;
+        }
+
+        return FuelDumpAmount.values()[average];
+    }
+
+    public float getAverageTeleopHighGoals() {
+        float i = 0;
+        for (ScoutData data : dataList) {
+            i += data.getTeleopHighGoals();
+        }
+
+        return i / dataList.size();
+    }
+
+    public float getAverageTeleopMissedHighGoals() {
+        float i = 0;
+        for (ScoutData data : dataList) {
+            i += data.getTeleopMissedHighGoals();
+        }
+
+        return i / dataList.size();
+    }
+
+    public double getClimbingStatsPercentage(ClimbingStats stat) {
+        double i = 0;
+        for (ScoutData data : dataList) {
+            if (data.getClimbingStats() == stat) {
+                i++;
+            }
+        }
+
+        return (i / dataList.size()) * 100;
+    }
+
+    //SUMMARY
+
+    public List<String> getTroublesList() {
+        List<String> troublesList = new ArrayList<>();
+
+        for (ScoutData data : dataList) {
+            if (data.getTroubleWith() != null && !data.getTroubleWith().isEmpty()) {
+                troublesList.add(data.getTroubleWith());
+            }
+        }
+
+        return troublesList;
+    }
+
+    public List<String> getCommentsList() {
+        List<String> commentsList = new ArrayList<>();
+
+        for (ScoutData data : dataList) {
+            if (data.getComments() != null && !data.getComments().isEmpty()) {
+                commentsList.add(data.getComments());
+            }
+        }
+        return commentsList;
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/bluetooth/ClientConnectionThread.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/bluetooth/ClientConnectionThread.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/bluetooth/ClientConnectionThread.java	(revision )
@@ -0,0 +1,176 @@
+package com.team980.thunderscout.bluetooth;
+
+import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.BluetoothDevice;
+import android.bluetooth.BluetoothSocket;
+import android.content.Context;
+import android.os.Handler;
+import android.os.Looper;
+import android.widget.Toast;
+
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.match.ScoutingFlowActivity;
+import com.team980.thunderscout.util.TSNotificationBuilder;
+
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.util.UUID;
+
+public class ClientConnectionThread extends Thread { //TODO move to AsyncTask
+    private final BluetoothSocket mmSocket;
+
+    private BluetoothAdapter mBluetoothAdapter;
+
+    private TSNotificationBuilder notificationManager;
+
+    private ScoutData scoutData;
+
+    private Context context;
+
+    private ScoutingFlowActivity activity;
+
+    public ClientConnectionThread(BluetoothDevice device, ScoutData data, Context context) {
+        // Use a temporary object that is later assigned to mmSocket,
+        // because mmSocket is final
+        BluetoothSocket tmp = null;
+
+        mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
+
+        notificationManager = TSNotificationBuilder.getInstance(context);
+
+        // Get a BluetoothSocket to connect with the given BluetoothDevice
+        try {
+            // MY_UUID is the app's UUID string, also used by the server code
+            tmp = device.createRfcommSocketToServiceRecord(UUID.fromString(BluetoothInfo.UUID));
+        } catch (IOException e) {
+        }
+        mmSocket = tmp;
+
+        scoutData = data;
+
+        this.context = context;
+    }
+
+    /**
+     * Version with callback support
+     */
+    public ClientConnectionThread(BluetoothDevice device, ScoutData data, Context context, ScoutingFlowActivity activity) {
+        this(device, data, context);
+
+        this.activity = activity;
+    }
+
+    public void run() {
+        // Cancel discovery because it will slow down the connection
+        mBluetoothAdapter.cancelDiscovery();
+
+        int notificationId = notificationManager.showBtTransferInProgress(mmSocket.getRemoteDevice().getName(), false);
+
+        try {
+            // Connect the device through the socket. This will block
+            // until it succeeds or throws an exception
+            mmSocket.connect();
+        } catch (IOException connectException) {
+            // Unable to connect; close the socket and get out
+            try {
+                mmSocket.close();
+            } catch (IOException closeException) {
+                closeException.printStackTrace();
+            }
+            manageError(notificationId, connectException);
+            return;
+        }
+
+        postToastMessage("Successfully connected to server device");
+
+        scoutData.setDateAdded(System.currentTimeMillis());
+
+        ObjectInputStream ioStream = null;
+        ObjectOutputStream ooStream;
+        try {
+            ioStream = new ObjectInputStream(mmSocket.getInputStream());
+            ooStream = new ObjectOutputStream(mmSocket.getOutputStream());
+            ooStream.flush();
+        } catch (IOException e) {
+            e.printStackTrace();
+            manageError(notificationId, e);
+            return;
+        }
+
+        //TODO add version check
+
+        postToastMessage("Sending data...");
+
+        try {
+            ooStream.writeObject(scoutData);
+            ooStream.flush();
+        } catch (IOException e) {
+            e.printStackTrace();
+            manageError(notificationId, e);
+            return;
+        }
+
+        notificationManager.showBtTransferFinished(notificationId);
+
+        if (activity != null) { //TODO broadcast reciever
+
+            Handler handler = new Handler(Looper.getMainLooper());
+
+            handler.post(new Runnable() {
+
+                @Override
+                public void run() {
+                    activity.dataOutputCallbackSuccess(ScoutingFlowActivity.OPERATION_SEND_BLUETOOTH);
+                }
+            });
+        }
+
+        try {
+            ooStream.close();
+            ioStream.close();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * Will cancel an in-progress connection, and close the socket
+     */
+    public void cancel() {
+        try {
+            mmSocket.close();
+        } catch (IOException ignored) {
+        }
+    }
+
+    //TODO implement
+    private void manageError(int notificationId, final Exception ex) {
+        notificationManager.showBtTransferFinished(notificationId);
+
+        if (activity != null) { //TODO broadcast reciever
+
+            Handler handler = new Handler(Looper.getMainLooper());
+
+            handler.post(new Runnable() {
+
+                @Override
+                public void run() {
+                    activity.dataOutputCallbackFail(ScoutingFlowActivity.OPERATION_SEND_BLUETOOTH, ex);
+                }
+            });
+        }
+    }
+
+    public void postToastMessage(final String message) {
+        Handler handler = new Handler(Looper.getMainLooper());
+
+        handler.post(new Runnable() {
+
+            @Override
+            public void run() {
+                Toast.makeText(context, message, Toast.LENGTH_SHORT).show();
+            }
+        });
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/integrations/IntegrationsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/integrations/IntegrationsActivity.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/integrations/IntegrationsActivity.java	(revision )
@@ -0,0 +1,15 @@
+package com.team980.thunderscout.integrations;
+
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+
+import com.team980.thunderscout.R;
+
+public class IntegrationsActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_integrations);
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/data/enumeration/AllianceColor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/enumeration/AllianceColor.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/enumeration/AllianceColor.java	(revision )
@@ -0,0 +1,30 @@
+package com.team980.thunderscout.data.enumeration;
+
+import com.team980.thunderscout.R;
+
+public enum AllianceColor {
+    ALLIANCE_COLOR_RED("Red Alliance", R.color.alliance_red_primary, R.color.alliance_red_primary_dark),
+    ALLIANCE_COLOR_BLUE("Blue Alliance", R.color.alliance_blue_primary, R.color.alliance_blue_primary_dark);
+
+    String displayString;
+    int colorPrimary;
+    int colorPrimaryDark;
+
+    AllianceColor(String displayString, int colorPrimary, int colorPrimaryDark) {
+        this.displayString = displayString;
+        this.colorPrimary = colorPrimary;
+        this.colorPrimaryDark = colorPrimaryDark;
+    }
+
+    public String toString() {
+        return displayString;
+    }
+
+    public int getColorPrimary() {
+        return colorPrimary;
+    }
+
+    public int getColorPrimaryDark() {
+        return colorPrimaryDark;
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/integrations/sheets/GoogleAuthActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/integrations/sheets/GoogleAuthActivity.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/integrations/sheets/GoogleAuthActivity.java	(revision )
@@ -0,0 +1,73 @@
+package com.team980.thunderscout.integrations.sheets;
+
+import android.accounts.AccountManager;
+import android.app.Activity;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.support.v7.app.AppCompatActivity;
+import android.widget.Toast;
+
+import com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential;
+import com.google.api.client.util.ExponentialBackOff;
+import com.google.api.services.sheets.v4.SheetsScopes;
+
+import java.util.Arrays;
+
+public class GoogleAuthActivity extends AppCompatActivity {
+
+    private GoogleAccountCredential credential;
+    private static final String[] ACCOUNT_SCOPES = {SheetsScopes.SPREADSHEETS, SheetsScopes.DRIVE};
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        credential = GoogleAccountCredential.usingOAuth2(
+                this, Arrays.asList(ACCOUNT_SCOPES))
+                .setBackOff(new ExponentialBackOff());
+
+        selectAccount();
+    }
+
+    protected void selectAccount() {
+        // Start a dialog from which the user can choose an account
+        startActivityForResult(
+                credential.newChooseAccountIntent(),
+                1000);
+
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+
+        switch (requestCode) {
+            case 1000: //REQUEST_ACCOUNT_PICKER
+                if (resultCode == Activity.RESULT_OK && data != null &&
+                        data.getExtras() != null) {
+                    String accountName =
+                            data.getStringExtra(AccountManager.KEY_ACCOUNT_NAME);
+                    SharedPreferences settings =
+                            PreferenceManager.getDefaultSharedPreferences(this);
+                    SharedPreferences.Editor editor = settings.edit();
+                    editor.putString("google_account_name", accountName);
+                    editor.apply();
+                    credential.setSelectedAccountName(accountName);
+                }
+                finish();
+            case 1001: //REQUEST_AUTH
+                if (resultCode == Activity.RESULT_OK) {
+                    SharedPreferences settings =
+                            PreferenceManager.getDefaultSharedPreferences(this);
+
+                    Toast.makeText(this, "1001: Auth complete for " + settings.getString("google_account_name", null), Toast.LENGTH_LONG).show();
+                } else {
+                    startActivityForResult(credential.newChooseAccountIntent(), 1000);
+                }
+                break;
+        }
+
+
+    }
+}
Index: app/src/main/res/drawable/ic_sort_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_sort_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_sort_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M3,18h6v-2L3,16v2zM3,6v2h18L21,6L3,6zM3,13h12v-2L3,11v2z"/>
+</vector>
Index: app/src/main/java/com/team980/thunderscout/data/enumeration/FuelDumpAmount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/enumeration/FuelDumpAmount.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/enumeration/FuelDumpAmount.java	(revision )
@@ -0,0 +1,50 @@
+package com.team980.thunderscout.data.enumeration;
+
+public enum FuelDumpAmount {
+
+    NONE("None", 0, 0),
+    SMALL("Small", 1, 9),
+    MEDIUM("Medium", 10, 29),
+    LARGE("Large", 30, 49),
+    EXTRA_LARGE("Extra Large", 50, 70); //maximum amount low goal can hold
+
+    private String displayString;
+    private int minimumAmount;
+    private int maximumAmount;
+
+    FuelDumpAmount(String par1, int min, int max) {
+        displayString = par1;
+        minimumAmount = min;
+        maximumAmount = max;
+    }
+
+    public int getMinimumAmount() {
+        return minimumAmount;
+    }
+
+    public int getMaximumAmount() {
+        return maximumAmount;
+    }
+
+    public static FuelDumpAmount getByAmount(int amount) {
+        if (amount <= NONE.getMinimumAmount()) {
+            return FuelDumpAmount.NONE;
+        } else if (amount >= SMALL.getMinimumAmount() && amount <= SMALL.getMaximumAmount()) {
+            return FuelDumpAmount.SMALL;
+        } else if (amount >= MEDIUM.getMinimumAmount() && amount <= MEDIUM.getMaximumAmount()) {
+            return FuelDumpAmount.MEDIUM;
+        } else if (amount >= LARGE.getMinimumAmount() && amount <= LARGE.getMaximumAmount()) {
+            return FuelDumpAmount.LARGE;
+        } else if (amount >= EXTRA_LARGE.getMinimumAmount()) {
+            return FuelDumpAmount.EXTRA_LARGE;
+        }
+
+        return FuelDumpAmount.NONE;
+    }
+
+    @Override
+    public String toString() {
+        return displayString;
+    }
+
+}
Index: app/src/main/res/drawable/ic_assignment_turned_in_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_assignment_turned_in_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_assignment_turned_in_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M19,3h-4.18C14.4,1.84 13.3,1 12,1c-1.3,0 -2.4,0.84 -2.82,2L5,3c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2L21,5c0,-1.1 -0.9,-2 -2,-2zM12,3c0.55,0 1,0.45 1,1s-0.45,1 -1,1 -1,-0.45 -1,-1 0.45,-1 1,-1zM10,17l-4,-4 1.41,-1.41L10,14.17l6.59,-6.59L18,9l-8,8z"/>
+</vector>
Index: app/src/main/res/xml/shortcuts.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/xml/shortcuts.xml	(revision )
+++ app/src/main/res/xml/shortcuts.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shortcuts xmlns:android="http://schemas.android.com/apk/res/android">
+    <shortcut
+        android:shortcutId="match_scout"
+        android:enabled="true"
+        android:icon="@drawable/ic_shortcut_send"
+        android:shortcutShortLabel="@string/shortcut_match_scout_short"
+        android:shortcutLongLabel="@string/shortcut_match_scout_long">
+        <intent
+            android:action="android.intent.action.VIEW"
+            android:targetPackage="com.team980.thunderscout"
+            android:targetClass="com.team980.thunderscout.match.ScoutingFlowActivity" />
+    </shortcut>
+    <!-- Specify more shortcuts here. -->
+</shortcuts>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_bluetooth_disabled_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_bluetooth_disabled_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_bluetooth_disabled_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M13,5.83l1.88,1.88 -1.6,1.6 1.41,1.41 3.02,-3.02L12,2h-1v5.03l2,2v-3.2zM5.41,4L4,5.41 10.59,12 5,17.59 6.41,19 11,14.41V22h1l4.29,-4.29 2.3,2.29L20,18.59 5.41,4zM13,18.17v-3.76l1.88,1.88L13,18.17z"/>
+</vector>
Index: app/src/main/res/layout/fragment_trend_team_info.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_trend_team_info.xml	(revision )
+++ app/src/main/res/layout/fragment_trend_team_info.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_link_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_link_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_link_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M3.9,12c0,-1.71 1.39,-3.1 3.1,-3.1h4L11,7L7,7c-2.76,0 -5,2.24 -5,5s2.24,5 5,5h4v-1.9L7,15.1c-1.71,0 -3.1,-1.39 -3.1,-3.1zM8,13h8v-2L8,11v2zM17,7h-4v1.9h4c1.71,0 3.1,1.39 3.1,3.1s-1.39,3.1 -3.1,3.1h-4L13,17h4c2.76,0 5,-2.24 5,-5s-2.24,-5 -5,-5z"/>
+</vector>
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="primary">#9823c1</color>
+    <color name="primary_dark">#9823c1</color>
+
+    <color name="secondary">#757575</color>
+    <color name="secondary_dark">#424242</color>
+
+    <color name="accent">#9823c1</color>
+    <color name="accent_dark">#F57F17</color>
+
+    <color name="alliance_red_primary">#C0161D</color>
+    <color name="alliance_red_primary_dark">#9C1117</color>
+    <color name="alliance_blue_primary">#005291</color>
+    <color name="alliance_blue_primary_dark">#004275</color>
+
+    <!--<color name="primary">#fbc02d</color>
+    <color name="primary_dark">#F9A825</color>
+    <color name="accent">#fdd835</color>-->
+
+    <color name="background_floating">#FF424242</color>
+    <color name="background_floating_light">#FF616161</color>
+    <!--TODO add millions of shades of material blue grey and black -->
+
+    <color name="success">#4CAF50</color>
+    <color name="error">#F44336</color>
+    <!-- TODO deprecate these values-->
+</resources>
Index: app/src/main/res/layout/fragment_this_device.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_this_device.xml	(revision )
+++ app/src/main/res/layout/fragment_this_device.xml	(revision )
@@ -0,0 +1,36 @@
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true">
+
+    <android.support.design.widget.AppBarLayout
+        android:id="@+id/app_bar_layout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            android:elevation="4dp"
+            app:popupTheme="@style/ThemeOverlay.AppCompat.Dark" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <android.support.v4.widget.SwipeRefreshLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:id="@+id/swipeContainer"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="android.support.design.widget.AppBarLayout$ScrollingViewBehavior">
+
+        <android.support.v7.widget.RecyclerView
+            android:id="@+id/dataView"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:scrollbars="vertical" />
+    </android.support.v4.widget.SwipeRefreshLayout>
+
+</android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/values-sw720dp/bools.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-sw720dp/bools.xml	(revision )
+++ app/src/main/res/values-sw720dp/bools.xml	(revision )
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <bool name="preferences_prefer_dual_pane">false</bool> <!-- TODO fix the header glitch -->
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/data/task/ScoutDataReadTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/task/ScoutDataReadTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/task/ScoutDataReadTask.java	(revision )
@@ -0,0 +1,251 @@
+package com.team980.thunderscout.data.task;
+
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteException;
+import android.os.AsyncTask;
+import android.support.v4.widget.SwipeRefreshLayout;
+
+import com.team980.thunderscout.ThunderScout;
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.data.ScoutDataContract.ScoutDataTable;
+import com.team980.thunderscout.data.ScoutDataDbHelper;
+import com.team980.thunderscout.data.enumeration.AllianceColor;
+import com.team980.thunderscout.data.enumeration.ClimbingStats;
+import com.team980.thunderscout.data.enumeration.FuelDumpAmount;
+import com.team980.thunderscout.info.LocalDataAdapter;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.EnumMap;
+
+/**
+ * TODO Rewrite this class to add sorting/filtering parameters
+ */
+public class ScoutDataReadTask extends AsyncTask<Void, ScoutData, Void> {
+
+    private LocalDataAdapter viewAdapter;
+    private Context context;
+
+    private SwipeRefreshLayout swipeLayout;
+
+    public ScoutDataReadTask(LocalDataAdapter adapter, Context context) {
+        viewAdapter = adapter;
+        this.context = context;
+    }
+
+    public ScoutDataReadTask(LocalDataAdapter adapter, Context context, SwipeRefreshLayout refresh) {
+        viewAdapter = adapter;
+        this.context = context;
+
+        swipeLayout = refresh;
+    }
+
+    @Override
+    protected void onPreExecute() {
+        //viewAdapter.clearData();
+
+        if (swipeLayout != null) {
+
+            swipeLayout.post(new Runnable() {
+                @Override
+                public void run() {
+                    swipeLayout.setRefreshing(true);
+                }
+            });
+        }
+
+        super.onPreExecute();
+    }
+
+    @Override
+    public Void doInBackground(Void... params) {
+
+        SQLiteDatabase db = new ScoutDataDbHelper(context).getReadableDatabase();
+
+        // Define a projection that specifies which columns from the database
+        // you will actually use after this query.
+        String[] projection = {
+                ScoutDataTable._ID,
+                ScoutDataTable.COLUMN_NAME_TEAM_NUMBER,
+                ScoutDataTable.COLUMN_NAME_MATCH_NUMBER,
+                ScoutDataTable.COLUMN_NAME_ALLIANCE_COLOR,
+
+                ScoutDataTable.COLUMN_NAME_DATE_ADDED,
+                ScoutDataTable.COLUMN_NAME_DATA_SOURCE,
+
+                ScoutDataTable.COLUMN_NAME_AUTO_GEARS_DELIVERED,
+                ScoutDataTable.COLUMN_NAME_AUTO_LOW_GOAL_DUMP_AMOUNT,
+                ScoutDataTable.COLUMN_NAME_AUTO_HIGH_GOALS,
+                ScoutDataTable.COLUMN_NAME_AUTO_MISSED_HIGH_GOALS,
+                ScoutDataTable.COLUMN_NAME_AUTO_CROSSED_BASELINE,
+
+                ScoutDataTable.COLUMN_NAME_TELEOP_GEARS_DELIVERED,
+                ScoutDataTable.COLUMN_NAME_TELEOP_LOW_GOAL_DUMPS,
+                ScoutDataTable.COLUMN_NAME_TELEOP_HIGH_GOALS,
+                ScoutDataTable.COLUMN_NAME_TELEOP_MISSED_HIGH_GOALS,
+                ScoutDataTable.COLUMN_NAME_CLIMBING_STATS,
+
+                ScoutDataTable.COLUMN_NAME_TROUBLE_WITH,
+                ScoutDataTable.COLUMN_NAME_COMMENTS
+        };
+
+        // How you want the results sorted in the resulting Cursor
+        String sortOrder =
+                ScoutDataTable._ID + " DESC";
+
+        Cursor cursor;
+
+        try {
+            cursor = db.query(
+                    ScoutDataTable.TABLE_NAME,  // The table to query
+                    projection,                               // The columns to return
+                    null,                                // The columns for the WHERE clause
+                    null,                            // The values for the WHERE clause
+                    null,                                     // don't group the rows
+                    null,                                     // don't filter by row groups
+                    sortOrder                                 // The sort order
+            );
+        } catch (SQLiteException e) {
+            e.printStackTrace();
+            return null;
+        }
+
+        if (cursor.moveToFirst()) {
+            initScoutData(cursor);
+        }
+
+        while (cursor.moveToNext()) {
+            initScoutData(cursor);
+        }
+
+        cursor.close();
+        db.close();
+        return null;
+    }
+
+    private void initScoutData(Cursor cursor) {
+        ScoutData data = new ScoutData();
+
+        // Init
+        String teamNumber = cursor.getString(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_TEAM_NUMBER));
+
+        data.setTeamNumber(teamNumber);
+
+        int matchNumber = cursor.getInt(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_MATCH_NUMBER));
+
+        data.setMatchNumber(matchNumber);
+
+        String allianceColor = cursor.getString(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_ALLIANCE_COLOR));
+
+        data.setAllianceColor(AllianceColor.valueOf(allianceColor));
+
+        String dateAdded = cursor.getString(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_DATE_ADDED));
+
+        try {
+            data.setDateAdded(Long.valueOf(dateAdded));
+        } catch (NumberFormatException e) {
+            e.printStackTrace();
+        }
+
+        String dataSource = cursor.getString(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_DATA_SOURCE));
+
+        data.setDataSource(dataSource);
+
+        // Auto
+        int autoGearsDelivered = cursor.getInt(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_AUTO_GEARS_DELIVERED));
+
+        data.setAutoGearsDelivered(autoGearsDelivered);
+
+        String autoLowGoalDumpAmount = cursor.getString(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_AUTO_LOW_GOAL_DUMP_AMOUNT));
+
+        data.setAutoLowGoalDumpAmount(FuelDumpAmount.valueOf(autoLowGoalDumpAmount));
+
+        int autoHighGoals = cursor.getInt(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_AUTO_HIGH_GOALS));
+
+        data.setAutoHighGoals(autoHighGoals);
+
+        int autoMissedHighGoals = cursor.getInt(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_AUTO_MISSED_HIGH_GOALS));
+
+        data.setAutoMissedHighGoals(autoMissedHighGoals);
+
+        int crossedBaseline = cursor.getInt(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_AUTO_CROSSED_BASELINE));
+
+        data.setCrossedBaseline(crossedBaseline != 0); //I2B conversion
+
+        // Teleop
+        int teleopGearsDelivered = cursor.getInt(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_TELEOP_GEARS_DELIVERED));
+
+        data.setTeleopGearsDelivered(teleopGearsDelivered);
+
+        byte[] teleopLowGoalDumps = cursor.getBlob(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_TELEOP_LOW_GOAL_DUMPS));
+
+        data.getTeleopLowGoalDumps().addAll((ArrayList<FuelDumpAmount>) ThunderScout.deserializeObject(teleopLowGoalDumps));
+
+        int teleopHighGoals = cursor.getInt(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_TELEOP_HIGH_GOALS));
+
+        data.setTeleopHighGoals(teleopHighGoals);
+
+        int teleopMissedHighGoals = cursor.getInt(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_TELEOP_MISSED_HIGH_GOALS));
+
+        data.setTeleopMissedHighGoals(teleopMissedHighGoals);
+
+        String climbingStats = cursor.getString(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_CLIMBING_STATS));
+
+        data.setClimbingStats(ClimbingStats.valueOf(climbingStats));
+
+        // Summary
+        String troubleWith = cursor.getString(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_TROUBLE_WITH));
+
+        data.setTroubleWith(troubleWith);
+
+        String comments = cursor.getString(
+                cursor.getColumnIndexOrThrow(ScoutDataTable.COLUMN_NAME_COMMENTS));
+
+        data.setComments(comments);
+
+        publishProgress(data);
+    }
+
+    @Override
+    protected void onProgressUpdate(ScoutData[] values) {
+        //Runs on UI thread when publishProgress() is called
+        viewAdapter.addScoutData(values[0]);
+
+        super.onProgressUpdate(values);
+    }
+
+    @Override
+    protected void onPostExecute(Void o) {
+        //Runs on UI thread after execution
+
+        if (swipeLayout != null) {
+            swipeLayout.post(new Runnable() {
+                @Override
+                public void run() {
+                    swipeLayout.setRefreshing(false);
+                }
+            });
+        }
+
+        super.onPostExecute(o);
+    }
+
+}
Index: app/src/main/res/layout/fuel_dump_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fuel_dump_view.xml	(revision )
+++ app/src/main/res/layout/fuel_dump_view.xml	(revision )
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:orientation="horizontal"
+    android:layout_gravity="center"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <TextView
+        android:id="@+id/value"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="left|center_vertical"
+        android:layout_marginRight="8dp"
+        android:text="NONE"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+        android:textSize="25sp" />
+
+    <TextView
+        android:id="@+id/numericalValue"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="right|center_vertical"
+        android:text="(0 - 0)"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+        android:textSize="20sp" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_about.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_about.xml	(revision )
+++ app/src/main/res/layout/activity_about.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.team980.thunderscout.AboutActivity">
+
+</LinearLayout>
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,9 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="nav_header_vertical_spacing">16dp</dimen>
+    <dimen name="nav_header_height">160dp</dimen>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
+</resources>
Index: app/src/main/res/menu/menu_data_select.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_data_select.xml	(revision )
+++ app/src/main/res/menu/menu_data_select.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_delete_selection"
+        android:icon="@drawable/ic_delete_white_24dp"
+        android:orderInCategory="4"
+        android:title="Delete"
+        app:showAsAction="always" />
+</menu>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/bluetooth/BluetoothServerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/bluetooth/BluetoothServerService.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/bluetooth/BluetoothServerService.java	(revision )
@@ -0,0 +1,175 @@
+package com.team980.thunderscout.bluetooth;
+
+import android.app.Notification;
+import android.app.NotificationManager;
+import android.app.PendingIntent;
+import android.app.Service;
+import android.bluetooth.BluetoothAdapter;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.os.IBinder;
+import android.support.v7.app.NotificationCompat;
+import android.util.Log;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.preferences.SettingsActivity;
+
+public class BluetoothServerService extends Service {
+
+    private ServerListenerThread acceptThread;
+
+    private NotificationManager notificationManager;
+    private NotificationCompat.Builder running;
+    private NotificationCompat.Builder adapterDisabled;
+    private NotificationCompat.Builder adapterMissing;
+    private static int SERVER_NOTIFICATION_ID = 1;
+
+    private BroadcastReceiver receiver;
+
+    public void onCreate() {
+        notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
+
+        initNotifications();
+
+        receiver = new BroadcastReceiver() {
+            @Override
+            public void onReceive(Context context, Intent intent) {
+                final String action = intent.getAction();
+                Log.d("BT", "recieved something");
+
+                if (action.equals(BluetoothAdapter.ACTION_STATE_CHANGED)) {
+                    final int state = intent.getIntExtra(BluetoothAdapter.EXTRA_STATE,
+                            BluetoothAdapter.ERROR);
+
+                    Log.d("BT", state + "");
+                    switch (state) {
+                        case BluetoothAdapter.STATE_TURNING_OFF:
+                            notificationManager.notify(SERVER_NOTIFICATION_ID, adapterDisabled.build());
+
+                            if (acceptThread != null) {
+                                acceptThread.cancel();
+                            }
+                            break;
+                        case BluetoothAdapter.STATE_ON:
+                            notificationManager.notify(SERVER_NOTIFICATION_ID, running.build());
+
+                            acceptThread = new ServerListenerThread(getApplicationContext());
+                            acceptThread.start();
+                            break;
+                    }
+                }
+            }
+        };
+    }
+
+    @Override
+    public int onStartCommand(Intent intent, int flags, int startId) {
+        startForeground(SERVER_NOTIFICATION_ID, running.build());
+        //TODO manage notifications in here; more diverse and explanatory descriptions and states
+
+        registerReceiver(receiver, new IntentFilter(BluetoothAdapter.ACTION_STATE_CHANGED));
+        Log.d("BT", "service starting");
+
+        BluetoothAdapter mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
+        if (mBluetoothAdapter == null) {
+
+            notificationManager.notify(SERVER_NOTIFICATION_ID, adapterMissing.build());
+            Log.d("BT", "bluetooth dead");
+        } else if (!mBluetoothAdapter.isEnabled()) {
+
+            //mBluetoothAdapter.enable(); //Applications should NEVER call this directly
+            notificationManager.notify(SERVER_NOTIFICATION_ID, adapterDisabled.build());
+            Log.d("BT", "bluetooth off, turning on");
+        } else {
+
+            acceptThread = new ServerListenerThread(this);
+            acceptThread.start();
+            Log.d("BT", "bluetooth on, starting server");
+        }
+
+        // If we get killed, after returning from here, restart - TODO is this why it runs twice?
+        return START_STICKY;
+    }
+
+    @Override
+    public IBinder onBind(Intent intent) {
+        // We don't provide binding, so return null
+        return null;
+    }
+
+    @Override
+    public void onDestroy() {
+        stopForeground(true);
+
+        Log.d("BT", "goodbye");
+
+        unregisterReceiver(receiver);
+
+        if (acceptThread != null) {
+            acceptThread.cancel();
+        }
+    }
+
+    public void initNotifications() {
+        running = (NotificationCompat.Builder) new NotificationCompat.Builder(this)
+                .setSmallIcon(R.drawable.ic_bluetooth_searching_white_24dp)
+                .setContentTitle("Bluetooth server is running")
+                .setContentText("Open for scout data to be sent") //todo new icon
+                .setOngoing(true)
+                .setPriority(Notification.PRIORITY_LOW)
+                .setColor(getResources().getColor(R.color.primary))
+                .setShowWhen(false)
+                .setGroup("BT_SERVER");
+
+        adapterDisabled = (NotificationCompat.Builder) new NotificationCompat.Builder(this)
+                .setSmallIcon(R.drawable.ic_warning_white_24dp)
+                .setContentTitle("Bluetooth is disabled")
+                .setContentText("Please enable Bluetooth before using the Bluetooth server")
+                .setOngoing(true)
+                .setColor(getResources().getColor(R.color.error))
+                .setShowWhen(false)
+                .setGroup("BT_SERVER");
+
+        adapterMissing = (NotificationCompat.Builder) new NotificationCompat.Builder(this)
+                .setSmallIcon(R.drawable.ic_warning_white_24dp)
+                .setContentTitle("This device doesn't support Bluetooth")
+                .setContentText("Please disable the Bluetooth server")
+                .setOngoing(true)
+                .setColor(getResources().getColor(R.color.error))
+                .setShowWhen(false)
+                .setGroup("BT_SERVER");
+
+        PendingIntent serverSettingsIntent = PendingIntent.getActivity(this, 1,
+                new Intent(this, SettingsActivity.class),
+                PendingIntent.FLAG_UPDATE_CURRENT);
+
+        running.setContentIntent(serverSettingsIntent);
+        adapterMissing.setContentIntent(serverSettingsIntent);
+
+        NotificationCompat.Action openServerSetting = new NotificationCompat.Action(
+                R.drawable.ic_settings_white_24dp,
+                "MORE OPTIONS",
+                serverSettingsIntent
+        );
+
+        running.addAction(openServerSetting);
+        adapterMissing.addAction(openServerSetting);
+
+        PendingIntent enableBluetoothIntent = PendingIntent.getActivity(this, 1,
+                new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE),
+                PendingIntent.FLAG_UPDATE_CURRENT);
+
+        adapterDisabled.setContentIntent(enableBluetoothIntent);
+
+        NotificationCompat.Action enableBluetoothSetting = new NotificationCompat.Action(
+                R.drawable.ic_settings_bluetooth_white_24dp,
+                "ENABLE BLUETOOTH",
+                enableBluetoothIntent
+        );
+
+        adapterDisabled.addAction(enableBluetoothSetting);
+        adapterDisabled.addAction(openServerSetting);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/ic_people_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_people_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_people_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M16,11c1.66,0 2.99,-1.34 2.99,-3S17.66,5 16,5c-1.66,0 -3,1.34 -3,3s1.34,3 3,3zM8,11c1.66,0 2.99,-1.34 2.99,-3S9.66,5 8,5C6.34,5 5,6.34 5,8s1.34,3 3,3zM8,13c-2.33,0 -7,1.17 -7,3.5L1,19h14v-2.5c0,-2.33 -4.67,-3.5 -7,-3.5zM16,13c-0.29,0 -0.62,0.02 -0.97,0.05 1.16,0.84 1.97,1.97 1.97,3.45L17,19h6v-2.5c0,-2.33 -4.67,-3.5 -7,-3.5z"/>
+</vector>
Index: app/src/main/res/drawable/ic_warning_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_warning_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_warning_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M1,21h22L12,2 1,21zM13,18h-2v-2h2v2zM13,14h-2v-4h2v4z"/>
+</vector>
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/google-services.json	(revision )
+++ app/google-services.json	(revision )
@@ -0,0 +1,71 @@
+{
+  "project_info": {
+    "project_number": "228200318883",
+    "firebase_url": "https://thunderscout-142321.firebaseio.com",
+    "project_id": "thunderscout-142321",
+    "storage_bucket": "thunderscout-142321.appspot.com"
+  },
+  "client": [
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:228200318883:android:0e0cb94114371525",
+        "android_client_info": {
+          "package_name": "com.team980.thunderscout"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "228200318883-7apvelbkc9r1c9c8qnrmbksihp6b6iro.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.team980.thunderscout",
+            "certificate_hash": "440C4CB55C9335F0D28F7BDE83B913BD2561ACBE"
+          }
+        },
+        {
+          "client_id": "228200318883-vqqfrs0u1k59b6lfsne8d3p77hln7se0.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.team980.thunderscout",
+            "certificate_hash": "D79487A9083556E8C799258220DF94BF2054E58D"
+          }
+        },
+        {
+          "client_id": "228200318883-bh7kc8ntt9kvk08un8p090aurp9iugnf.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.team980.thunderscout",
+            "certificate_hash": "FF567CA053949986C3B50BADFD601F64407970E7"
+          }
+        },
+        {
+          "client_id": "228200318883-1g8gu6t2imfro6ica0nlu0uf3nj7vprt.apps.googleusercontent.com",
+          "client_type": 3
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyBM08kCviFe98sdr2CAfm5yOM4nHBUrGLA"
+        }
+      ],
+      "services": {
+        "analytics_service": {
+          "status": 1
+        },
+        "appinvite_service": {
+          "status": 2,
+          "other_platform_oauth_client": [
+            {
+              "client_id": "228200318883-1g8gu6t2imfro6ica0nlu0uf3nj7vprt.apps.googleusercontent.com",
+              "client_type": 3
+            }
+          ]
+        },
+        "ads_service": {
+          "status": 2
+        }
+      }
+    }
+  ],
+  "configuration_version": "1"
+}
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/bluetooth/ServerListenerThread.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/bluetooth/ServerListenerThread.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/bluetooth/ServerListenerThread.java	(revision )
@@ -0,0 +1,83 @@
+package com.team980.thunderscout.bluetooth;
+
+import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.BluetoothServerSocket;
+import android.bluetooth.BluetoothSocket;
+import android.content.Context;
+import android.os.Handler;
+import android.os.Looper;
+import android.widget.Toast;
+
+import java.io.IOException;
+import java.util.UUID;
+
+public class ServerListenerThread extends Thread {
+    private final BluetoothServerSocket mmServerSocket;
+
+    private BluetoothAdapter mBluetoothAdapter;
+
+    private Context context;
+
+    public ServerListenerThread(Context context) {
+        // Use a temporary object that is later assigned to mmServerSocket,
+        // because mmServerSocket is final
+        BluetoothServerSocket tmp = null;
+
+        mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
+
+        try {
+            // MY_UUID is the app's UUID string, also used by the client code
+            tmp = mBluetoothAdapter.listenUsingRfcommWithServiceRecord(BluetoothInfo.SERVICE_NAME, UUID.fromString(BluetoothInfo.UUID));
+        } catch (IOException e) {
+        }
+        mmServerSocket = tmp;
+
+        this.context = context;
+    }
+
+    public void run() {
+        // Keep listening until exception occurs
+        while (true) {
+            final BluetoothSocket socket;
+            try {
+                postToastMessage("Listening for incoming connections");
+                socket = mmServerSocket.accept(); //this is failing why? - needs more testing
+            } catch (IOException e) {
+                e.printStackTrace();
+                break;
+            }
+            // If a connection was accepted
+            if (socket != null) {
+                // Do work to manage the connection (in a separate thread)
+
+                postToastMessage("Connected to " + socket.getRemoteDevice().getName());
+
+                ServerConnectionTask readTask = new ServerConnectionTask(socket, context);
+                readTask.execute();
+            }
+        }
+    }
+
+    /**
+     * Will cancel the listening socket, and cause the thread to finish
+     */
+    public void cancel() {
+        try {
+            mmServerSocket.close();
+        } catch (IOException e) {
+
+        }
+    }
+
+    public void postToastMessage(final String message) {
+        Handler handler = new Handler(Looper.getMainLooper());
+
+        handler.post(new Runnable() {
+
+            @Override
+            public void run() {
+                Toast.makeText(context, message, Toast.LENGTH_SHORT).show();
+            }
+        });
+    }
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,56 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 25
+    buildToolsVersion '25.0.1'
+
+    defaultConfig {
+        applicationId "com.team980.thunderscout"
+        minSdkVersion 16
+        targetSdkVersion 25
+        versionCode 8
+        versionName "1.0-b1"
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    compile('com.google.api-client:google-api-client-android:1.22.0') {
+        exclude group: 'org.apache.httpcomponents'
+    }
+    compile('com.google.apis:google-api-services-sheets:v4-rev15-1.22.0') {
+        exclude group: 'org.apache.httpcomponents'
+    }
+    //compile 'com.android.support.constraint:constraint-layout:1.0.0-beta1'
+    //compile 'com.google.android.gms:play-services-auth:9.8.00'
+    //compile 'com.google.firebase:firebase-core:9.6.1'
+    //compile 'com.google.firebase:firebase-crash:9.6.1'
+    //compile 'com.google.firebase:firebase-messaging:9.6.1'
+    //compile 'com.google.firebase:firebase-config:9.6.1'
+    compile 'com.android.support:support-v4:25.1.1'
+    compile 'com.android.support:design:25.1.1'
+    compile 'com.android.support:appcompat-v7:25.1.1'
+    compile 'com.android.support:cardview-v7:25.1.1'
+    compile 'com.android.support:recyclerview-v7:25.1.1'
+    compile 'com.android.support:gridlayout-v7:25.1.1'
+    compile 'com.bignerdranch.android:expandablerecyclerview:2.1.1'
+    compile 'com.opencsv:opencsv:3.9'
+    compile('com.google.apis:google-api-services-sheets:v4-rev15-1.22.0') {
+        exclude group: 'commons-logging'
+    }
+    androidTestCompile 'junit:junit:4.12'
+}
+
+
+apply plugin: 'com.google.gms.google-services'
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/AboutActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/AboutActivity.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/AboutActivity.java	(revision )
@@ -0,0 +1,13 @@
+package com.team980.thunderscout;
+
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+
+public class AboutActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_about);
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/util/TransitionUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/util/TransitionUtils.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/util/TransitionUtils.java	(revision )
@@ -0,0 +1,92 @@
+package com.team980.thunderscout.util;
+
+import android.animation.ValueAnimator;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
+import android.os.Build;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.match.ScoutingFlowActivity;
+
+public class TransitionUtils {
+
+    //TODO add fromDefault?
+    public static void toolbarAndStatusBarTransitionFromResources(int colorFrom, int colorFromDark, int colorTo, int colorToDark, AppCompatActivity activity) {
+        // Initial colors of each system bar.
+        final int statusBarColor = activity.getResources().getColor(colorFromDark);
+        final int toolbarColor = activity.getResources().getColor(colorFrom);
+
+        // Desired final colors of each bar.
+        final int statusBarToColor = activity.getResources().getColor(colorToDark);
+        final int toolbarToColor = activity.getResources().getColor(colorTo);
+
+        toolbarAndStatusBarTransition(toolbarColor, statusBarColor, toolbarToColor, statusBarToColor, activity);
+    }
+
+    public static void toolbarAndStatusBarTransition(final int toolbarColor, final int statusBarColor, final int toolbarToColor, final int statusBarToColor, final AppCompatActivity activity) {
+        ValueAnimator anim = ValueAnimator.ofFloat(0, 1);
+        anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            @Override
+            public void onAnimationUpdate(ValueAnimator animation) {
+                // Use animation position to blend colors.
+                float position = animation.getAnimatedFraction();
+
+                // Apply blended color to the status bar.
+                int blended = blendColors(statusBarColor, statusBarToColor, position);
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+                    activity.getWindow().setStatusBarColor(blended);
+                }
+
+                // Apply blended color to the ActionBar.
+                blended = blendColors(toolbarColor, toolbarToColor, position);
+                ColorDrawable background = new ColorDrawable(blended);
+                activity.getSupportActionBar().setBackgroundDrawable(background);
+
+                if (activity instanceof ScoutingFlowActivity) { //we don't want a random null
+                    activity.findViewById(R.id.app_bar_layout).setBackground(background);
+                    activity.findViewById(R.id.tab_layout).setBackground(background);
+                }
+            }
+        });
+        anim.setDuration(350).start();
+
+        //if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) { //tint in Overview
+        //ActivityManager.TaskDescription tDesc = new ActivityManager.TaskDescription(null, null, toolbarToColor);
+        //activity.setTaskDescription(tDesc);
+        //}
+    }
+
+    public static void toolbarTransition(final int toolbarColor, final int toolbarToColor, final Toolbar toolbar) {
+        ValueAnimator anim = ValueAnimator.ofFloat(0, 1);
+        anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            @Override
+            public void onAnimationUpdate(ValueAnimator animation) {
+                // Use animation position to blend colors.
+                float position = animation.getAnimatedFraction();
+
+                // Apply blended color to the ActionBar.
+                int blended = blendColors(toolbarColor, toolbarToColor, position);
+                ColorDrawable background = new ColorDrawable(blended);
+                toolbar.setBackgroundDrawable(background);
+            }
+        });
+        anim.setDuration(350).start();
+
+        //if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) { //tint in Overview
+        //ActivityManager.TaskDescription tDesc = new ActivityManager.TaskDescription(null, null, toolbarToColor);
+        //activity.setTaskDescription(tDesc);
+        //}
+    }
+
+    private static int blendColors(int from, int to, float ratio) {
+        final float inverseRatio = 1f - ratio;
+
+        final float r = Color.red(to) * ratio + Color.red(from) * inverseRatio;
+        final float g = Color.green(to) * ratio + Color.green(from) * inverseRatio;
+        final float b = Color.blue(to) * ratio + Color.blue(from) * inverseRatio;
+
+        return Color.rgb((int) r, (int) g, (int) b);
+    }
+}
Index: app/src/main/res/menu/menu_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_home.xml	(revision )
+++ app/src/main/res/menu/menu_home.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:id="@+id/action_clear"
+        android:orderInCategory="1"
+        android:title="Clear" />
+</menu>
\ No newline at end of file
Index: app/src/main/res/xml/pref_general.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/xml/pref_general.xml	(revision )
+++ app/src/main/res/xml/pref_general.xml	(revision )
@@ -0,0 +1,30 @@
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <!-- TODO parameterize all the keys -->
+
+    <!-- These are examples from the tutorial -->
+    <!-- NOTE: EditTextPreference accepts EditText attributes. -->
+    <!-- NOTE: EditTextPreference's summary should be set to its value by the activity code. -->
+    <!--<EditTextPreference
+        android:capitalize="words"
+        android:defaultValue="@string/pref_default_display_name"
+        android:inputType="textCapWords"
+        android:key="example_text"
+        android:maxLines="1"
+        android:selectAllOnFocus="true"
+        android:singleLine="true"
+        android:title="@string/pref_title_display_name" />-->
+
+    <!-- NOTE: Hide buttons to simplify the UI. Users can touch outside the dialog to
+         dismiss it. -->
+    <!-- NOTE: ListPreference's summary should be set to its value by the activity code. -->
+    <!--<ListPreference
+        android:defaultValue="-1"
+        android:entries="@array/pref_example_list_titles"
+        android:entryValues="@array/pref_example_list_values"
+        android:key="example_list"
+        android:negativeButtonText="@null"
+        android:positiveButtonText="@null"
+        android:title="@string/pref_title_add_friends_to_messages" />-->
+
+</PreferenceScreen>
Index: app/src/main/java/com/team980/thunderscout/feed/FeedEntry.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/feed/FeedEntry.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/feed/FeedEntry.java	(revision )
@@ -0,0 +1,99 @@
+package com.team980.thunderscout.feed;
+
+import android.support.annotation.NonNull;
+
+import com.bignerdranch.expandablerecyclerview.Model.ParentListItem;
+import com.team980.thunderscout.R;
+
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+/**
+ * One entry in the home screen's activity feed.
+ *
+ * Each entry has ONE EntryType representing the initiating action.
+ * It can then have multiple EntryOperationWrappers representing what was done during the action.
+ * Each EntryOperationWrapper has a corresponding EntryOperationStatus representing the result of the operation.
+ */
+public class FeedEntry implements ParentListItem, Comparable<FeedEntry> {
+
+    private EntryType type;
+    private Date timestamp;
+
+    private List<EntryOperationWrapper> operations;
+
+    public FeedEntry(EntryType t, long date) {
+        type = t;
+        timestamp = new Date(date);
+
+        operations = new ArrayList<>();
+    }
+
+    public EntryType getType(){
+        return type;
+    }
+
+    public Date getTimestamp() {
+        return timestamp;
+    }
+
+
+    @Override
+    public List<EntryOperationWrapper> getChildItemList() {
+        return operations;
+    }
+
+    /**
+     * Allows chaining calls
+     */
+    public FeedEntry addOperation(EntryOperationWrapper wrapper) {
+        operations.add(wrapper);
+        return this;
+    }
+
+    @Override
+    public int compareTo(@NonNull FeedEntry other) {
+        return -getTimestamp().compareTo(other.getTimestamp());
+    }
+
+    @Override
+    public boolean isInitiallyExpanded() {
+        return false;
+    }
+
+    public boolean containsFailure() {
+        for (EntryOperationWrapper operation : operations) {
+            if (operation.getStatus() != EntryOperationWrapper.EntryOperationStatus.OPERATION_SUCCESSFUL) {
+                return true;
+            }
+        }
+
+        return false; //no failures found
+    }
+
+    /**
+     * Type of entry
+     */
+    public enum EntryType { //TODO @string values
+        MATCH_SCOUTED("Match scouted", R.drawable.ic_send_white_24dp), //client scouts match
+        SERVER_RECEIVED_MATCH("Data received from server", R.drawable.ic_bluetooth_searching_white_24dp); //server receives match via bluetooth
+
+        private String name;
+        private int icon;
+
+        EntryType(String s, int i) {
+            name = s;
+            icon = i;
+        }
+
+        @Override
+        public String toString() {
+            return name;
+        }
+
+        public int getIcon() {
+            return icon;
+        }
+    }
+}
Index: app/src/main/res/values/attrs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/attrs.xml	(revision )
+++ app/src/main/res/values/attrs.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="CounterCompoundView">
+        <attr name="min" format="float" />
+        <attr name="max" format="float" />
+        <attr name="count" format="float" />
+    </declare-styleable>
+</resources>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_create_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_create_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_create_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M3,17.25V21h3.75L17.81,9.94l-3.75,-3.75L3,17.25zM20.71,7.04c0.39,-0.39 0.39,-1.02 0,-1.41l-2.34,-2.34c-0.39,-0.39 -1.02,-0.39 -1.41,0l-1.83,1.83 3.75,3.75 1.83,-1.83z"/>
+</vector>
Index: app/src/main/res/drawable/ic_send_primary_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_send_primary_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_send_primary_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#78909C"
+        android:pathData="M2.01,21L23,12 2.01,3 2,10l15,2 -15,2z"/>
+</vector>
Index: app/src/main/res/layout/layout_info_average_teleop.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_info_average_teleop.xml	(revision )
+++ app/src/main/res/layout/layout_info_average_teleop.xml	(revision )
@@ -0,0 +1,337 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    android:elevation="2dp"
+    app:cardCornerRadius="2dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="16dp">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:text="Teleop"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textSize="25sp" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating_light"
+            android:orientation="horizontal"
+            android:paddingBottom="8dp"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Delivered an average of "
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="20sp" />
+
+            <TextView
+                android:id="@+id/info_average_teleopGearsDelivered"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="#"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                android:textSize="25sp" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="10dp"
+                android:text=" gears"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="20sp" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating"
+            android:orientation="horizontal"
+            android:paddingBottom="8dp"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Made about "
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="20sp" />
+
+            <TextView
+                android:id="@+id/info_average_teleopFuelDumps"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="#"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                android:textSize="25sp" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="10dp"
+                android:text=" dumps"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="20sp" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginBottom="10dp"
+            android:orientation="vertical">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Average Fuel Dumped"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="20sp" />
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center">
+
+                <TextView
+                    android:id="@+id/info_average_teleopLowGoalDumpAmount"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left|center_vertical"
+                    android:layout_marginRight="8dp"
+                    android:text="NONE"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="25sp" />
+
+                <TextView
+                    android:id="@+id/info_average_teleopLowGoalNumericalDumpAmount"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="right|center_vertical"
+                    android:text="(0 - 0)"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+
+            </LinearLayout>
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:background="@color/background_floating_light"
+            android:orientation="horizontal"
+            android:paddingBottom="8dp"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <FrameLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:paddingLeft="40dp"
+                android:paddingRight="40dp">
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/info_average_teleopHighGoals"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="#"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                        android:textSize="30sp" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="High Goals"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                        android:textSize="15sp" />
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="right"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/info_average_teleopMissedHighGoals"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="#"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Display2"
+                        android:textSize="30sp" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="Missed Shots"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Display1"
+                        android:textSize="15sp" />
+
+                </LinearLayout>
+
+            </FrameLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left|bottom"
+                    android:text="ATTEMPTED TO CLIMB "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="22sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left|bottom"
+                    android:text="the airship in "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:id="@+id/info_average_teleopAttemptedClimbPercentage"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="%"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="25sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=" of matches"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+            </LinearLayout>
+
+            <ProgressBar
+                android:id="@+id/info_average_teleopAttemptedClimbProgressBar"
+                style="@style/Widget.AppCompat.ProgressBar.Horizontal"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="10dp" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left|bottom"
+                    android:text="PRESSED "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="22sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left|bottom"
+                    android:text="the touchpad in "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:id="@+id/info_average_teleopPressedTouchpadPercentage"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="%"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="25sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=" of matches"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+            </LinearLayout>
+
+            <ProgressBar
+                android:id="@+id/info_average_teleopPressedTouchpadProgressBar"
+                style="@style/Widget.AppCompat.ProgressBar.Horizontal"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="10dp" />
+
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+</android.support.v7.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/layout/activity_scouting_flow.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_scouting_flow.xml	(revision )
+++ app/src/main/res/layout/activity_scouting_flow.xml	(revision )
@@ -0,0 +1,54 @@
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/coordinatorLayout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.design.widget.AppBarLayout
+        android:id="@+id/app_bar_layout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:layout_gravity="top|center_horizontal"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/ThemeOverlay.AppCompat.Dark" />
+
+        <android.support.design.widget.TabLayout
+            android:id="@+id/tab_layout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_horizontal"
+            android:background="?attr/colorPrimary"
+            app:tabGravity="fill"
+            app:tabMode="fixed"
+            app:tabPaddingEnd="30dp"
+            app:tabPaddingStart="30dp" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <android.support.v4.view.ViewPager
+        android:id="@+id/view_pager"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:layout_behavior="android.support.design.widget.AppBarLayout$ScrollingViewBehavior" />
+
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_marginBottom="16dp"
+        android:layout_marginRight="16dp"
+        android:scaleType="center"
+        android:src="@drawable/ic_send_white_24dp"
+        android:visibility="invisible"
+        app:fabSize="normal"
+        app:backgroundTint="@color/accent"
+        app:elevation="6dp"
+        app:pressedTranslationZ="12dp" />
+
+</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/java/com/team980/thunderscout/match/ScoutingFlowDialogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/match/ScoutingFlowDialogFragment.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/match/ScoutingFlowDialogFragment.java	(revision )
@@ -0,0 +1,176 @@
+package com.team980.thunderscout.match;
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.content.DialogInterface;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatDialogFragment;
+import android.support.v7.widget.AppCompatButton;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.EditText;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.ThunderScout;
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.data.enumeration.AllianceColor;
+
+public class ScoutingFlowDialogFragment extends AppCompatDialogFragment {
+
+    // Use this instance of the interface to deliver action events
+    private ScoutingFlowDialogFragmentListener mListener;
+
+    private EditText teamNumber;
+    private EditText matchNumber;
+    private AppCompatButton allianceToggle;
+    private AllianceColor allianceColor;
+
+    public static final String EXTRA_DEFAULT_DATA = "com.team980.thunderscout.EXTRA_DEFAULT_DATA";
+
+    @NonNull
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        builder.setCancelable(false);
+
+        View dialogView = getActivity().getLayoutInflater().inflate(R.layout.dialog_scouting_flow, null);
+
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
+
+        final Toolbar toolbar = (Toolbar) dialogView.findViewById(R.id.toolbar);
+        toolbar.setTitle("Match Settings");
+
+        teamNumber = (EditText) dialogView.findViewById(R.id.dialog_editTextTeamNumber);
+        teamNumber.requestFocus();
+
+        matchNumber = (EditText) dialogView.findViewById(R.id.dialog_editTextMatchNumber);
+        matchNumber.setText(String.valueOf(prefs.getInt("last_used_match_number", 0) + 1)); //increment the last match number
+
+        allianceColor = AllianceColor.valueOf(prefs.getString("last_used_alliance_color", AllianceColor.ALLIANCE_COLOR_RED.name()));
+        allianceToggle = (AppCompatButton) dialogView.findViewById(R.id.dialog_allianceToggleButton);
+
+        if (getArguments() != null && getArguments().containsKey(EXTRA_DEFAULT_DATA)) { //Fill the data with previously set values
+            ScoutData fillData = (ScoutData) getArguments().getSerializable(EXTRA_DEFAULT_DATA);
+
+            teamNumber.setText(fillData.getTeamNumber());
+            matchNumber.setText(fillData.getMatchNumber() + "");
+
+            if (fillData.getAllianceColor() == AllianceColor.ALLIANCE_COLOR_RED) {
+                allianceToggle.setSupportBackgroundTintList(ContextCompat.getColorStateList(getContext(), R.color.alliance_red_primary));
+                allianceToggle.setText("Red Alliance");
+                allianceColor = AllianceColor.ALLIANCE_COLOR_RED;
+            } else { //If red, switch to blue, and vice versa
+                allianceToggle.setSupportBackgroundTintList(ContextCompat.getColorStateList(getContext(), R.color.alliance_blue_primary));
+                allianceToggle.setText("Blue Alliance");
+                allianceColor = AllianceColor.ALLIANCE_COLOR_BLUE;
+            }
+        }
+
+        if (allianceColor == AllianceColor.ALLIANCE_COLOR_BLUE) { //Red is default
+            allianceToggle.setSupportBackgroundTintList(ContextCompat.getColorStateList(getContext(), R.color.alliance_blue_primary));
+            allianceToggle.setText("Blue Alliance");
+        }
+
+        allianceToggle.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (allianceColor == AllianceColor.ALLIANCE_COLOR_RED) { //If red, switch to blue, and vice versa
+                    allianceToggle.setSupportBackgroundTintList(ContextCompat.getColorStateList(getContext(), R.color.alliance_blue_primary));
+                    allianceToggle.setText("Blue Alliance");
+                    allianceColor = AllianceColor.ALLIANCE_COLOR_BLUE;
+                } else {
+                    allianceToggle.setSupportBackgroundTintList(ContextCompat.getColorStateList(getContext(), R.color.alliance_red_primary));
+                    allianceToggle.setText("Red Alliance");
+                    allianceColor = AllianceColor.ALLIANCE_COLOR_RED;
+                }
+            }
+        });
+
+        builder.setView(dialogView)
+                // Add action buttons
+                .setPositiveButton("Confirm", new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int id) {
+                        mListener.onDialogPositiveClick(ScoutingFlowDialogFragment.this);
+                    }
+                })
+                .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface dialog, int id) {
+                        mListener.onDialogNegativeClick(ScoutingFlowDialogFragment.this);
+                    }
+                });
+
+        final Dialog dialog = builder.create();
+        dialog.setCanceledOnTouchOutside(false);
+        dialog.setOnShowListener(new DialogInterface.OnShowListener() { //Complex code to override auto dismiss
+
+            @Override
+            public void onShow(DialogInterface d) {
+
+                Button button = ((AlertDialog) dialog).getButton(AlertDialog.BUTTON_POSITIVE);
+                button.setOnClickListener(new View.OnClickListener() {
+
+                    @Override
+                    public void onClick(View view) {
+                        mListener.onDialogPositiveClick(ScoutingFlowDialogFragment.this);
+                    }
+                });
+            }
+        });
+
+        dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
+        return dialog;
+    }
+
+    // Override the Fragment.onAttach() method to instantiate the NoticeDialogListener
+    @Override
+    public void onAttach(Activity activity) {
+        super.onAttach(activity);
+        // Verify that the host activity implements the callback interface
+        try {
+            // Instantiate the ScoutingFlowDialogFragmentListener so we can send events to the host
+            mListener = (ScoutingFlowDialogFragmentListener) activity;
+        } catch (ClassCastException e) {
+            // The activity doesn't implement the interface, throw exception
+            throw new ClassCastException(activity.toString()
+                    + " must implement ScoutingFlowDialogFragmentListener");
+        }
+    }
+
+    public boolean allFieldsComplete() {
+        if (teamNumber.getText().toString().isEmpty()) {
+            return false;
+        }
+
+        if (matchNumber.getText().toString().isEmpty() || !ThunderScout.isInteger(matchNumber.getText().toString())) {
+            return false;
+        }
+
+        return true;
+    }
+
+    public void initScoutData(ScoutData data) {
+        data.setTeamNumber(teamNumber.getText().toString());
+
+        data.setMatchNumber(Integer.valueOf(matchNumber.getText().toString()));
+
+        data.setAllianceColor(allianceColor);
+    }
+
+    /* The activity that creates an instance of this dialog fragment must
+     * implement this interface in order to receive event callbacks.
+     * Each method passes the DialogFragment in case the host needs to query it. */
+    public interface ScoutingFlowDialogFragmentListener {
+        void onDialogPositiveClick(ScoutingFlowDialogFragment dialog);
+
+        void onDialogNegativeClick(ScoutingFlowDialogFragment dialog);
+    }
+
+}
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,19 @@
+<resources>
+    <string name="app_name">ThunderScout</string>
+
+    <string name="app_version">2017 (BETA)</string> <!--This is where we track the version -->
+
+    <string name="build_variant"></string> <!--Nothing will show-->
+
+    <string-array name="climbing_stats_array">
+        <item>Did not climb</item>
+        <item>Attempted climb</item>
+        <item>Pressed touchpad</item>
+    </string-array>
+
+    <string name="navigation_drawer_open">Open navigation drawer</string>
+    <string name="navigation_drawer_close">Close navigation drawer</string>
+
+    <string name="shortcut_match_scout_short">Match scout</string>
+    <string name="shortcut_match_scout_long">Scout a match</string>
+</resources>
Index: app/src/main/res/drawable/ic_settings_bluetooth_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_settings_bluetooth_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_settings_bluetooth_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M11,24h2v-2h-2v2zM7,24h2v-2L7,22v2zM15,24h2v-2h-2v2zM17.71,5.71L12,0h-1v7.59L6.41,3 5,4.41 10.59,10 5,15.59 6.41,17 11,12.41L11,20h1l5.71,-5.71 -4.3,-4.29 4.3,-4.29zM13,3.83l1.88,1.88L13,7.59L13,3.83zM14.88,14.29L13,16.17v-3.76l1.88,1.88z"/>
+</vector>
Index: app/src/main/res/drawable/ic_search_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_search_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_search_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M15.5,14h-0.79l-0.28,-0.27C15.41,12.59 16,11.11 16,9.5 16,5.91 13.09,3 9.5,3S3,5.91 3,9.5 5.91,16 9.5,16c1.61,0 3.09,-0.59 4.23,-1.57l0.27,0.28v0.79l5,4.99L20.49,19l-4.99,-5zM9.5,14C7.01,14 5,11.99 5,9.5S7.01,5 9.5,5 14,7.01 14,9.5 11.99,14 9.5,14z"/>
+</vector>
Index: app/src/main/res/layout/layout_info_average_summary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_info_average_summary.xml	(revision )
+++ app/src/main/res/layout/layout_info_average_summary.xml	(revision )
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    android:elevation="2dp"
+    app:cardCornerRadius="2dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="16dp">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:text="Summary"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textSize="25sp" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:background="@color/background_floating_light"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:text="Trouble With"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                android:textSize="20sp" />
+
+            <android.support.v7.widget.RecyclerView
+                android:id="@+id/info_average_summaryTroubleWith"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="15sp" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:layout_marginTop="16dp"
+                android:text="Comments"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                android:textSize="20sp" />
+
+            <android.support.v7.widget.RecyclerView
+                android:id="@+id/info_average_summaryComments"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="15sp" />
+        </LinearLayout>
+
+    </LinearLayout>
+
+</android.support.v7.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/xml/pref_match_scout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/xml/pref_match_scout.xml	(revision )
+++ app/src/main/res/xml/pref_match_scout.xml	(revision )
@@ -0,0 +1,73 @@
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <SwitchPreference
+        android:defaultValue="true"
+        android:key="enable_match_scout"
+        android:summary="Enable scouting matches from this device"
+        android:title="Enable match scouting" />
+
+    <PreferenceCategory
+        android:title="Output options"
+        android:dependency="enable_match_scout">
+
+        <CheckBoxPreference
+            android:defaultValue="true"
+            android:key="ms_send_to_local_storage"
+            android:title="Save to this device" />
+
+        <CheckBoxPreference
+            android:defaultValue="false"
+            android:key="ms_send_to_bt_server"
+            android:title="Send to Bluetooth server" />
+
+        <!--<CheckBoxPreference
+            android:defaultValue="false"
+            android:key="ms_send_to_linked_sheet"
+            android:title="Send to linked spreadsheet" />-->
+
+    </PreferenceCategory>
+
+    <PreferenceCategory android:title="Bluetooth">
+
+        <!--<ListPreference
+            android:defaultValue="saveLocally"
+            android:key="server_storage_task"
+            android:entries="@array/server_storage_task"
+            android:entryValues="@array/server_storage_task_values"
+            android:summary="Method of storage for data received via bluetooth server"
+            android:title="Server Storage Task" />-->
+
+        <com.team980.thunderscout.preferences.BluetoothDevicePreference
+            android:dialogTitle="Bluetooth Server Device"
+            android:key="ms_bt_server_device"
+            android:dependency="ms_send_to_bt_server"
+            android:title="Bluetooth server device" />
+
+    </PreferenceCategory>
+
+    <!-- These are examples from the tutorial -->
+    <!-- NOTE: EditTextPreference accepts EditText attributes. -->
+    <!-- NOTE: EditTextPreference's summary should be set to its value by the activity code. -->
+    <!--<EditTextPreference
+        android:capitalize="words"
+        android:defaultValue="@string/pref_default_display_name"
+        android:inputType="textCapWords"
+        android:key="example_text"
+        android:maxLines="1"
+        android:selectAllOnFocus="true"
+        android:singleLine="true"
+        android:title="@string/pref_title_display_name" />-->
+
+    <!-- NOTE: Hide buttons to simplify the UI. Users can touch outside the dialog to
+         dismiss it. -->
+    <!-- NOTE: ListPreference's summary should be set to its value by the activity code. -->
+    <!--<ListPreference
+        android:defaultValue="-1"
+        android:entries="@array/pref_example_list_titles"
+        android:entryValues="@array/pref_example_list_values"
+        android:key="example_list"
+        android:negativeButtonText="@null"
+        android:positiveButtonText="@null"
+        android:title="@string/pref_title_add_friends_to_messages" />-->
+
+</PreferenceScreen>
Index: app/src/main/java/com/team980/thunderscout/info/statistics/CommentsAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/info/statistics/CommentsAdapter.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/info/statistics/CommentsAdapter.java	(revision )
@@ -0,0 +1,61 @@
+package com.team980.thunderscout.info.statistics;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.team980.thunderscout.R;
+
+import java.util.List;
+
+public class CommentsAdapter extends RecyclerView.Adapter<CommentsAdapter.CommentViewHolder> {
+
+    private List<String> commentsList;
+
+    public CommentsAdapter(List<String> l) {
+        commentsList = l;
+    }
+
+    @Override
+    public CommentViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        LayoutInflater inflater = LayoutInflater.from(parent.getContext());
+
+        View dataView = inflater.inflate(R.layout.comment_view, parent, false);
+
+        return new CommentViewHolder(dataView);
+    }
+
+    @Override
+    public void onBindViewHolder(CommentViewHolder holder, int i) {
+        String comment = commentsList.get(i);
+
+        holder.bind(comment);
+    }
+
+    @Override
+    public int getItemCount() {
+        return commentsList.size();
+    }
+
+    public void add(String s) {
+        commentsList.add(s);
+        notifyItemInserted(commentsList.size() - 1);
+    }
+
+    public class CommentViewHolder extends RecyclerView.ViewHolder {
+
+        private TextView key;
+
+        public CommentViewHolder(View itemView) {
+            super(itemView);
+
+            key = (TextView) itemView.findViewById(R.id.comment);
+        }
+
+        public void bind(String defText) {
+            key.setText(defText);
+        }
+    }
+}
Index: app/src/main/res/layout/dump_counter_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/dump_counter_view.xml	(revision )
+++ app/src/main/res/layout/dump_counter_view.xml	(revision )
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout android:id="@+id/controls"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:layout_alignParentRight="true"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <ImageButton
+        android:id="@+id/remove"
+        style="?android:attr/buttonStyleSmall"
+        android:layout_width="56dp"
+        android:layout_height="56dp"
+        android:background="?attr/selectableItemBackground"
+        android:src="@drawable/ic_clear_white_24dp"
+        android:tint="@color/accent"/>
+
+    <Button
+        android:id="@+id/minus"
+        style="?android:attr/buttonStyleSmall"
+        android:layout_width="56dp"
+        android:layout_height="56dp"
+        android:background="?attr/selectableItemBackground"
+        android:text="-"
+        android:textColor="@color/accent"
+        android:textSize="20sp" />
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <TextView
+            android:id="@+id/value"
+            android:layout_width="128dp"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:layout_marginBottom="4dp"
+            android:text="State"
+            android:textAppearance="?android:attr/textAppearanceMedium" />
+
+        <TextView
+            android:id="@+id/numericalValue"
+            android:layout_width="128dp"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:layout_marginBottom="4dp"
+            android:text="0 - 0"
+            android:textAppearance="?android:attr/textAppearanceSmall" />
+    </LinearLayout>
+
+    <Button
+        android:id="@+id/plus"
+        style="?android:attr/buttonStyleSmall"
+        android:layout_width="56dp"
+        android:layout_height="56dp"
+        android:background="?attr/selectableItemBackground"
+        android:text="+"
+        android:textColor="@color/accent"
+        android:textSize="20sp" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_cloud_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_cloud_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_cloud_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M19.35,10.04C18.67,6.59 15.64,4 12,4 9.11,4 6.6,5.64 5.35,8.04 2.34,8.36 0,10.91 0,14c0,3.31 2.69,6 6,6h13c2.76,0 5,-2.24 5,-5 0,-2.64 -2.05,-4.78 -4.65,-4.96z"/>
+</vector>
Index: app/src/main/res/layout/layout_info_average_auto.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_info_average_auto.xml	(revision )
+++ app/src/main/res/layout/layout_info_average_auto.xml	(revision )
@@ -0,0 +1,251 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    android:elevation="2dp"
+    app:cardCornerRadius="2dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="16dp">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:text="Auto"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textSize="25sp" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating_light"
+            android:orientation="horizontal"
+            android:paddingBottom="8dp"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Delivered an average of "
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="20sp" />
+
+            <TextView
+                android:id="@+id/info_average_autoGearsDelivered"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="#"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                android:textSize="25sp" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="10dp"
+                android:text=" gears"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="20sp" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating"
+            android:orientation="vertical"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginBottom="10dp"
+                android:orientation="vertical">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Average Fuel Dumped"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center">
+
+                    <TextView
+                        android:id="@+id/info_average_autoLowGoalDumpAmount"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="left|center_vertical"
+                        android:layout_marginRight="8dp"
+                        android:text="NONE"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                        android:textSize="25sp" />
+
+                    <TextView
+                        android:id="@+id/info_average_autoLowGoalNumericalDumpAmount"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="right|center_vertical"
+                        android:text="(0 - 0)"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                        android:textSize="20sp" />
+
+                </LinearLayout>
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:background="@color/background_floating_light"
+            android:orientation="horizontal"
+            android:paddingBottom="8dp"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <FrameLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:paddingLeft="40dp"
+                android:paddingRight="40dp">
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/info_average_autoHighGoals"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="#"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                        android:textSize="30sp" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="High Goals"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                        android:textSize="15sp" />
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="right"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/info_average_autoMissedHighGoals"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="#"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Display2"
+                        android:textSize="30sp" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="Missed Shots"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Display1"
+                        android:textSize="15sp" />
+
+                </LinearLayout>
+
+            </FrameLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left|bottom"
+                    android:text="CROSSED "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="22sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left|bottom"
+                    android:text="the baseline in "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:id="@+id/info_average_autoCrossedBaselinePercentage"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="%"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="25sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=" of matches"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+            </LinearLayout>
+
+            <ProgressBar
+                android:id="@+id/info_average_autoCrossedBaselineProgressBar"
+                style="@style/Widget.AppCompat.ProgressBar.Horizontal"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="10dp" />
+
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+</android.support.v7.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_clear_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_clear_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_clear_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z"/>
+</vector>
Index: app/src/main/res/drawable/ic_delete_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_delete_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_delete_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M6,19c0,1.1 0.9,2 2,2h8c1.1,0 2,-0.9 2,-2V7H6v12zM19,4h-3.5l-1,-1h-5l-1,1H5v2h14V4z"/>
+</vector>
Index: app/src/main/java/com/team980/thunderscout/match/ScoutingFlowViewPagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/match/ScoutingFlowViewPagerAdapter.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/match/ScoutingFlowViewPagerAdapter.java	(revision )
@@ -0,0 +1,36 @@
+package com.team980.thunderscout.match;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentPagerAdapter;
+
+public class ScoutingFlowViewPagerAdapter extends FragmentPagerAdapter {
+
+
+    private String tabTitles[] = new String[]{"Auto", "Teleop", "Summary"};
+    private Fragment tabs[];
+
+    public ScoutingFlowViewPagerAdapter(final FragmentManager fm) {
+        super(fm);
+
+        tabs = new Fragment[]{new AutoFragment(), new TeleopFragment(), new SummaryFragment()};
+    }
+
+    @Override
+    public Fragment getItem(int position) {
+        return tabs[position];
+    }
+
+
+    @Override
+    public int getCount() {
+        return 3;
+    }
+
+    @Override
+    public CharSequence getPageTitle(int position) {
+        // Generate title based on item position
+        return tabTitles[position];
+    }
+}
+
Index: app/src/main/java/com/team980/thunderscout/match/AutoFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/match/AutoFragment.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/match/AutoFragment.java	(revision )
@@ -0,0 +1,93 @@
+package com.team980.thunderscout.match;
+
+import android.content.Context;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.Spinner;
+import android.widget.TextView;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.data.enumeration.FuelDumpAmount;
+
+public class AutoFragment extends Fragment implements View.OnClickListener {
+
+    ScoutingFlowActivity scoutingFlowActivity;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_auto, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        CheckBox crossedBaseline = (CheckBox) view.findViewById(R.id.auto_checkBoxCrossedBaseline);
+        crossedBaseline.setOnClickListener(this);
+
+        Button minus = (Button) view.findViewById(R.id.auto_buttonFuelMinus);
+        Button plus = (Button) view.findViewById(R.id.auto_buttonFuelPlus);
+        minus.setOnClickListener(this);
+        plus.setOnClickListener(this);
+
+        TextView textValue = (TextView) getView().findViewById(R.id.auto_textViewFuelValue);
+        TextView numericalValue = (TextView) getView().findViewById(R.id.auto_textViewFuelNumericalValue);
+        textValue.setText(FuelDumpAmount.NONE.toString());
+        numericalValue.setText(FuelDumpAmount.NONE.getMinimumAmount() + " - " + FuelDumpAmount.NONE.getMaximumAmount());
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+
+        scoutingFlowActivity = (ScoutingFlowActivity) getActivity();
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+    }
+
+    @Override
+    public void onClick(View view) {
+        if (view.getId() == R.id.auto_checkBoxCrossedBaseline) {
+            CheckBox checkBox = (CheckBox) view;
+
+            scoutingFlowActivity.getData().setCrossedBaseline(checkBox.isChecked());
+        } else {
+            FuelDumpAmount value = scoutingFlowActivity.getData().getAutoLowGoalDumpAmount();
+
+            if (view.getId() == R.id.auto_buttonFuelPlus) {
+                int newOrdinal = value.ordinal() + 1;
+
+                if ((FuelDumpAmount.values().length - 1) < newOrdinal) {
+                    value = FuelDumpAmount.values()[FuelDumpAmount.values().length - 1];
+                } else {
+                    value = FuelDumpAmount.values()[newOrdinal];
+                }
+
+            } else if (view.getId() == R.id.auto_buttonFuelMinus) {
+                int newOrdinal = value.ordinal() - 1;
+
+                if (newOrdinal < 0) {
+                    value = FuelDumpAmount.values()[0];
+                } else {
+                    value = FuelDumpAmount.values()[newOrdinal];
+                }
+            }
+
+            scoutingFlowActivity.getData().setAutoLowGoalDumpAmount(value);
+
+            TextView textValue = (TextView) getView().findViewById(R.id.auto_textViewFuelValue);
+            TextView numericalValue = (TextView) getView().findViewById(R.id.auto_textViewFuelNumericalValue);
+            textValue.setText(value.toString());
+            numericalValue.setText(value.getMinimumAmount() + " - " + value.getMaximumAmount());
+        }
+    }
+}
Index: app/src/main/res/color/drawer_text.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/color/drawer_text.xml	(revision )
+++ app/src/main/res/color/drawer_text.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@color/accent" android:state_checked="true" />
+    <item android:color="#FFFFFF" />
+</selector>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/integrations/sheets/task/SheetsCreateTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/integrations/sheets/task/SheetsCreateTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/integrations/sheets/task/SheetsCreateTask.java	(revision )
@@ -0,0 +1,82 @@
+package com.team980.thunderscout.integrations.sheets.task;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.os.AsyncTask;
+import android.preference.PreferenceManager;
+import android.widget.Toast;
+
+import com.google.api.client.extensions.android.http.AndroidHttp;
+import com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential;
+import com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException;
+import com.google.api.client.http.HttpTransport;
+import com.google.api.client.json.JsonFactory;
+import com.google.api.client.json.jackson2.JacksonFactory;
+import com.google.api.client.util.ExponentialBackOff;
+import com.google.api.services.sheets.v4.Sheets;
+import com.google.api.services.sheets.v4.SheetsScopes;
+import com.google.api.services.sheets.v4.model.Spreadsheet;
+import com.google.api.services.sheets.v4.model.SpreadsheetProperties;
+
+import java.io.IOException;
+import java.text.SimpleDateFormat;
+import java.util.Arrays;
+
+public class SheetsCreateTask extends AsyncTask<Void, Void, String> {
+
+    private Context context;
+
+    private Sheets sheetsService = null;
+
+    private static final String[] ACCOUNT_SCOPES = {SheetsScopes.SPREADSHEETS, SheetsScopes.DRIVE};
+
+    public SheetsCreateTask(Context context) {
+        this.context = context;
+
+        SharedPreferences settings =
+                PreferenceManager.getDefaultSharedPreferences(context);
+
+        GoogleAccountCredential credential = GoogleAccountCredential.usingOAuth2(
+                context, Arrays.asList(ACCOUNT_SCOPES))
+                .setBackOff(new ExponentialBackOff());
+
+        String accountName = settings.getString("google_account_name", null);
+
+        credential.setSelectedAccountName(accountName);
+
+        HttpTransport transport = AndroidHttp.newCompatibleTransport();
+        JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
+        sheetsService = new Sheets.Builder(
+                transport, jsonFactory, credential)
+                .setApplicationName("ThunderScout")
+                .build();
+    }
+
+    @Override
+    protected String doInBackground(Void... voids) {
+        Spreadsheet spreadsheet = new Spreadsheet();
+        spreadsheet.setProperties(new SpreadsheetProperties().setTitle("ThunderScout Data: " + SimpleDateFormat.getDateInstance().format(System.currentTimeMillis())));
+        spreadsheet.setSheets(null);
+        try {
+            spreadsheet = sheetsService.spreadsheets().create(spreadsheet).execute();
+
+        } catch (UserRecoverableAuthIOException e) {
+            ((Activity) context).startActivityForResult(e.getIntent(), 1001); //TODO This REALLY should be called somewhere else!
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+        return spreadsheet.getSpreadsheetId();
+    }
+
+    @Override
+    protected void onPostExecute(String result) {
+        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
+
+        preferences.edit().putString("linked_spreadsheet_id", result).apply();
+
+        Toast.makeText(context, result, Toast.LENGTH_LONG).show();
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/bluetooth/BluetoothInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/bluetooth/BluetoothInfo.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/bluetooth/BluetoothInfo.java	(revision )
@@ -0,0 +1,11 @@
+package com.team980.thunderscout.bluetooth;
+
+public class BluetoothInfo {
+
+    /**
+     * Unique to the ThunderScout app
+     */
+    public static final String UUID = "60bec31a-4329-4724-8bee-4d8caab0d5cb";
+
+    public static final String SERVICE_NAME = "ThunderScout";
+}
Index: app/src/main/res/layout/activity_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_settings.xml	(revision )
+++ app/src/main/res/layout/activity_settings.xml	(revision )
@@ -0,0 +1,14 @@
+<!-- layout_main -->
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    android:orientation="vertical">
+
+    <!-- The main content view where fragments are loaded -->
+    <FrameLayout
+        android:id="@+id/contentPanel"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,28 @@
+<resources xmlns:tools="http://schemas.android.com/tools">
+
+    <!-- Base application theme. -->
+    <style name="ThunderScout.BaseTheme" parent="Theme.AppCompat.NoActionBar">
+        <item name="colorPrimary">@color/primary</item>
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <item name="colorAccent">@color/accent</item>
+    </style>
+
+    <style name="ThunderScout.BaseTheme.ActionBar" parent="Theme.AppCompat">
+        <item name="colorPrimary">@color/primary</item>
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <item name="colorAccent">@color/accent</item>
+    </style>
+
+    <style name="ThunderScout.BaseTheme.Translucent" parent="ThunderScout.BaseTheme">
+        <item name="android:windowTranslucentStatus" tools:targetApi="kitkat">true</item>
+    </style>
+
+    <style name="ThunderScout.BaseTheme.NavigationPane" parent="ThunderScout.BaseTheme">
+        <item name="android:windowTranslucentStatus" tools:targetApi="kitkat">true</item>
+    </style>
+
+    <style name="ThunderScout.BaseTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="ThunderScout.BaseTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+
+</resources>
Index: app/src/main/java/com/team980/thunderscout/data/enumeration/ClimbingStats.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/enumeration/ClimbingStats.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/enumeration/ClimbingStats.java	(revision )
@@ -0,0 +1,19 @@
+package com.team980.thunderscout.data.enumeration;
+
+public enum ClimbingStats {
+
+    DID_NOT_CLIMB("Did not climb"),
+    ATTEMPTED_CLIMB("Attempted climb"),
+    PRESSED_TOUCHPAD("Pressed touchpad"); //only option that scores
+
+    private String displayString;
+
+    ClimbingStats(String par1) {
+        displayString = par1;
+    }
+
+    @Override
+    public String toString() {
+        return displayString;
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/match/DumpCounterAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/match/DumpCounterAdapter.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/match/DumpCounterAdapter.java	(revision )
@@ -0,0 +1,136 @@
+package com.team980.thunderscout.match;
+
+import android.os.Bundle;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.ImageButton;
+import android.widget.TextView;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.data.enumeration.FuelDumpAmount;
+
+import java.util.ArrayList;
+
+public class DumpCounterAdapter extends RecyclerView.Adapter<DumpCounterAdapter.FuelDumpViewHolder> {
+
+    private ArrayList<FuelDumpAmount> fuelDumps;
+
+    public DumpCounterAdapter() {
+        fuelDumps = new ArrayList<>();
+    }
+
+    @Override
+    public FuelDumpViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        LayoutInflater inflater = LayoutInflater.from(parent.getContext());
+
+        View dataView = inflater.inflate(R.layout.dump_counter_view, parent, false);
+
+        return new FuelDumpViewHolder(dataView);
+    }
+
+    @Override
+    public void onBindViewHolder(FuelDumpViewHolder holder, int i) {
+        holder.bind();
+    }
+
+    @Override
+    public int getItemCount() {
+        return fuelDumps.size();
+    }
+
+    public void add(FuelDumpAmount s) {
+        fuelDumps.add(s);
+        notifyItemInserted(fuelDumps.size() - 1);
+    }
+
+    public ArrayList<FuelDumpAmount> get() {
+        return fuelDumps;
+    }
+
+    public void onSaveInstanceState(Bundle savedInstanceState) {
+        savedInstanceState.putSerializable("FuelDumps", fuelDumps);
+    }
+
+    public void onRestoreInstanceState(Bundle savedInstanceState) {
+        if (savedInstanceState == null
+                || !savedInstanceState.containsKey("FuelDumps")) {
+            return;
+        }
+
+        ArrayList<FuelDumpAmount> itemList = (ArrayList<FuelDumpAmount>) savedInstanceState.getSerializable("FuelDumps");
+        if (itemList == null) {
+            return;
+        }
+
+        fuelDumps = itemList;
+        notifyDataSetChanged();
+    }
+
+    public class FuelDumpViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
+
+        private Button plus;
+        private Button minus;
+        private ImageButton remove;
+
+        private TextView text;
+        private TextView numericValue;
+
+        public FuelDumpViewHolder(View itemView) {
+            super(itemView);
+
+            plus = (Button) itemView.findViewById(R.id.plus);
+            minus = (Button) itemView.findViewById(R.id.minus);
+            remove = (ImageButton) itemView.findViewById(R.id.remove);
+
+            text = (TextView) itemView.findViewById(R.id.value);
+            numericValue = (TextView) itemView.findViewById(R.id.numericalValue);
+        }
+
+        public void bind() {
+            plus.setOnClickListener(this);
+            minus.setOnClickListener(this);
+            remove.setOnClickListener(this);
+
+            FuelDumpAmount value = fuelDumps.get(getLayoutPosition());
+
+            text.setText(value.toString());
+            numericValue.setText(value.getMinimumAmount() + " - " + value.getMaximumAmount());
+
+        }
+
+        public void onClick(View v) {
+            FuelDumpAmount value = fuelDumps.get(getLayoutPosition());
+
+            if (v.getId() == R.id.plus) {
+                int newOrdinal = value.ordinal() + 1;
+
+                if ((FuelDumpAmount.values().length - 1) < newOrdinal) {
+                    value = FuelDumpAmount.values()[FuelDumpAmount.values().length - 1];
+                } else {
+                    value = FuelDumpAmount.values()[newOrdinal];
+                }
+
+            } else if (v.getId() == R.id.minus) {
+                int newOrdinal = value.ordinal() - 1;
+
+                if (newOrdinal < 0) {
+                    value = FuelDumpAmount.values()[0];
+                } else {
+                    value = FuelDumpAmount.values()[newOrdinal];
+                }
+            } else if (v.getId() == R.id.remove) {
+                fuelDumps.remove(getLayoutPosition());
+                notifyItemRemoved(getLayoutPosition());
+                return;
+            }
+
+            fuelDumps.set(getLayoutPosition(), value); // :D
+
+            text.setText(value.toString());
+            numericValue.setText(value.getMinimumAmount() + " - " + value.getMaximumAmount());
+        }
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/match/TeleopFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/match/TeleopFragment.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/match/TeleopFragment.java	(revision )
@@ -0,0 +1,131 @@
+package com.team980.thunderscout.match;
+
+
+import android.content.Context;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.Button;
+import android.widget.Spinner;
+import android.widget.TextView;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.data.enumeration.ClimbingStats;
+import com.team980.thunderscout.data.enumeration.FuelDumpAmount;
+
+public class TeleopFragment extends Fragment implements View.OnClickListener, Spinner.OnItemSelectedListener {
+
+    private ScoutingFlowActivity scoutingFlowActivity;
+
+    private LinearLayoutManager layoutManager;
+    private DumpCounterAdapter adapter;
+    private TextView collecttv;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_teleop, container, false);
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+    }
+
+    @Override
+    public void onViewCreated(View view, Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        RecyclerView fuelDumps = (RecyclerView) view.findViewById(R.id.teleop_recyclerViewFuelDumps);
+
+        layoutManager = new LinearLayoutManager(getContext());
+        fuelDumps.setLayoutManager(layoutManager);
+
+        adapter = new DumpCounterAdapter();
+        fuelDumps.setAdapter(adapter);
+
+        if (savedInstanceState != null) {
+            layoutManager.onRestoreInstanceState(savedInstanceState.getParcelable("LayoutManager"));
+            adapter.onRestoreInstanceState(savedInstanceState);
+        }
+
+        Button addDumpButton = (Button) view.findViewById(R.id.teleop_buttonAddFuelDump);
+        addDumpButton.setOnClickListener(this);
+
+        Spinner climbingStats = (Spinner) view.findViewById(R.id.teleop_spinnerClimbingStats);
+        climbingStats.setOnItemSelectedListener(this);
+
+        Button startStopwatch = (Button) view.findViewById(R.id.startcollect);
+        startStopwatch.setOnClickListener(this);
+
+        collecttv = (TextView) view.findViewById(R.id.collectballstimereturn);
+
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle savedInstanceState) {
+        savedInstanceState.putParcelable("LayoutManager", layoutManager.onSaveInstanceState());
+        adapter.onSaveInstanceState(savedInstanceState);
+        Log.d("InstanceRedux", "Saved");
+
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+
+        scoutingFlowActivity = (ScoutingFlowActivity) getActivity();
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+    }
+
+    /**
+     * Click listener for RecyclerView button
+     */
+   // @Override
+  /*  public void onClick(View v) {
+        adapter.add(FuelDumpAmount.NONE);
+    }*/
+
+    /**
+     * Listener for ClimbingStats spinner
+     */
+    @Override
+    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
+        String itemSelected = (String) parent.getItemAtPosition(position);
+
+        ClimbingStats climbingStats = ClimbingStats.valueOf(itemSelected.toUpperCase().replace(' ', '_'));
+        scoutingFlowActivity.getData().setClimbingStats(climbingStats);
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+            case R.id.startcollect:
+                collecttv.setText("123");
+                break;
+            case R.id.pausecollect:
+                collecttv.setText("456");
+                break;
+        }
+    }
+
+    @Override
+    public void onNothingSelected(AdapterView<?> parent) {
+        //do nothing
+    }
+
+    public DumpCounterAdapter getFuelDumpAdapter() {
+        return adapter;
+    }
+
+}
Index: app/src/main/res/drawable/ic_shortcut_send.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_shortcut_send.xml	(revision )
+++ app/src/main/res/drawable/ic_shortcut_send.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:bottom="2.0dip"
+        android:left="2.0dip"
+        android:right="2.0dip"
+        android:top="2.0dip">
+        <shape android:shape="oval">
+            <size
+                android:width="48.0dip"
+                android:height="48.0dip" />
+            <solid android:color="#F5F5F5" />
+        </shape>
+    </item>
+    <item
+        android:gravity="center"
+        android:drawable="@drawable/ic_send_primary_24dp"/>
+</layer-list>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/info/statistics/FuelDumpAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/info/statistics/FuelDumpAdapter.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/info/statistics/FuelDumpAdapter.java	(revision )
@@ -0,0 +1,66 @@
+package com.team980.thunderscout.info.statistics;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.data.enumeration.FuelDumpAmount;
+
+import java.util.List;
+
+public class FuelDumpAdapter extends RecyclerView.Adapter<FuelDumpAdapter.FuelDumpViewHolder> {
+
+    private List<FuelDumpAmount> dumpList;
+
+    public FuelDumpAdapter(List<FuelDumpAmount> l) {
+        dumpList = l;
+    }
+
+    @Override
+    public FuelDumpViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        LayoutInflater inflater = LayoutInflater.from(parent.getContext());
+
+        View dataView = inflater.inflate(R.layout.fuel_dump_view, parent, false);
+
+        return new FuelDumpViewHolder(dataView);
+    }
+
+    @Override
+    public void onBindViewHolder(FuelDumpViewHolder holder, int i) {
+        FuelDumpAmount amount = dumpList.get(i);
+
+        holder.bind(amount);
+    }
+
+    @Override
+    public int getItemCount() {
+        return dumpList.size();
+    }
+
+    public void add(FuelDumpAmount s) {
+        dumpList.add(s);
+        notifyItemInserted(dumpList.size() - 1);
+    }
+
+    public class FuelDumpViewHolder extends RecyclerView.ViewHolder {
+
+        private TextView value;
+        private TextView numericalValue;
+
+        public FuelDumpViewHolder(View itemView) {
+            super(itemView);
+
+            value = (TextView) itemView.findViewById(R.id.value);
+            numericalValue = (TextView) itemView.findViewById(R.id.numericalValue);
+
+        }
+
+        public void bind(FuelDumpAmount amount) {
+            value.setText(amount.toString());
+            numericalValue.setText("(" + amount.getMinimumAmount() + " - " + amount.getMaximumAmount() + ")");
+        }
+    }
+}
Index: app/src/main/res/drawable/ic_expand_less_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_expand_less_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_expand_less_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M12,8l-6,6 1.41,1.41L12,10.83l4.59,4.58L18,14z"/>
+</vector>
Index: app/src/main/java/com/team980/thunderscout/integrations/sheets/task/SheetsUpdateTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/integrations/sheets/task/SheetsUpdateTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/integrations/sheets/task/SheetsUpdateTask.java	(revision )
@@ -0,0 +1,223 @@
+/*package com.team980.thunderscout.integrations.sheets.task;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.os.AsyncTask;
+import android.preference.PreferenceManager;
+import android.widget.Toast;
+
+import com.google.api.client.extensions.android.http.AndroidHttp;
+import com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential;
+import com.google.api.client.http.HttpTransport;
+import com.google.api.client.json.JsonFactory;
+import com.google.api.client.json.jackson2.JacksonFactory;
+import com.google.api.client.util.ExponentialBackOff;
+import com.google.api.services.sheets.v4.Sheets;
+import com.google.api.services.sheets.v4.SheetsScopes;
+import com.google.api.services.sheets.v4.model.AddSheetRequest;
+import com.google.api.services.sheets.v4.model.AppendValuesResponse;
+import com.google.api.services.sheets.v4.model.BatchUpdateSpreadsheetRequest;
+import com.google.api.services.sheets.v4.model.Request;
+import com.google.api.services.sheets.v4.model.Sheet;
+import com.google.api.services.sheets.v4.model.SheetProperties;
+import com.google.api.services.sheets.v4.model.Spreadsheet;
+import com.google.api.services.sheets.v4.model.ValueRange;
+import com.team980.thunderscout.data.ScoutData;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+public class SheetsUpdateTask extends AsyncTask<ScoutData, Void, AppendValuesResponse> {
+
+    private Context context;
+
+    private Sheets sheetsService = null;
+
+    private static final String[] ACCOUNT_SCOPES = {SheetsScopes.SPREADSHEETS, SheetsScopes.DRIVE};
+
+    private String spreadsheetId;
+
+    public SheetsUpdateTask(Context context) {
+        this.context = context;
+
+        GoogleAccountCredential credential = GoogleAccountCredential.usingOAuth2(
+                context, Arrays.asList(ACCOUNT_SCOPES))
+                .setBackOff(new ExponentialBackOff());
+
+        SharedPreferences settings =
+                PreferenceManager.getDefaultSharedPreferences(context);
+
+        credential.setSelectedAccountName(settings.getString("google_account_name", null));
+
+        HttpTransport transport = AndroidHttp.newCompatibleTransport();
+        JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
+        sheetsService = new Sheets.Builder(
+                transport, jsonFactory, credential)
+                .setApplicationName("ThunderScout")
+                .build();
+    }
+
+    @Override
+    protected void onPreExecute() {
+        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
+
+        spreadsheetId = preferences.getString("linked_spreadsheet_id", null);
+    }
+
+    @Override
+    protected AppendValuesResponse doInBackground(ScoutData... dataList) {
+        try {
+            ScoutData data = dataList[0];
+
+            Spreadsheet spreadsheet = sheetsService.spreadsheets().get(spreadsheetId).execute();
+
+            boolean needsInit = true;
+            for (Sheet sheet : spreadsheet.getSheets()) {
+                if (sheet.getProperties().getTitle().equalsIgnoreCase(data.getTeamNumber())) {
+                    needsInit = false;
+                }
+            }
+
+            String range = data.getTeamNumber(); //SheetName!A1:B2 - A1 notation...
+
+            if (needsInit) {
+                AddSheetRequest addSheetRequest = new AddSheetRequest();
+                addSheetRequest.setProperties(new SheetProperties().setTitle(data.getTeamNumber()));
+
+                Request request =  new Request();
+                request.setAddSheet(addSheetRequest);
+
+                ArrayList<Request> requests = new ArrayList<>();
+                requests.add(request);
+
+                sheetsService.spreadsheets().batchUpdate(spreadsheetId, new BatchUpdateSpreadsheetRequest().setRequests(requests)).execute();
+
+                ValueRange init = new ValueRange();
+                init.setMajorDimension("ROWS");
+                init.setRange(range);
+
+                List<List<Object>> initWrapper = new ArrayList<>();
+                initWrapper.add(initHeaderData());
+
+                init.setValues(initWrapper);
+
+                sheetsService.spreadsheets().values().append(spreadsheetId, range, init)
+                        .setValueInputOption("RAW") //TODO determine proper value
+                        .setInsertDataOption("INSERT_ROWS")
+                        .execute();
+            }
+
+            ValueRange content = new ValueRange();
+            content.setMajorDimension("ROWS");
+            content.setRange(range);
+
+            ArrayList<Object> columnData = new ArrayList<>(); //stores data of a column
+
+            initRowData(columnData, data);
+
+            ArrayList<List<Object>> wrappedData = new ArrayList<>(); //stores columns
+
+            wrappedData.add(columnData);
+
+            content.setValues(wrappedData);
+
+            return sheetsService.spreadsheets().values().append(spreadsheetId, range, content)
+                    .setValueInputOption("RAW") //TODO determine proper value
+                    .setInsertDataOption("INSERT_ROWS")
+                    .execute();
+
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    @Override
+    protected void onPostExecute(AppendValuesResponse response) {
+        Toast.makeText(context, "Updated spreadsheet: " + response.getSpreadsheetId(), Toast.LENGTH_LONG).show();
+    }
+
+    private ArrayList<Object> initHeaderData() {
+        ArrayList<Object> rowDataList = new ArrayList<>();
+
+        //rowDataList.add("Date Added"); //TODO format date correctly
+
+        rowDataList.add("Autonomous");
+
+        rowDataList.add("Defense Crossed");
+
+        rowDataList.add("High Goals");
+        rowDataList.add("Low Goals");
+        rowDataList.add("Missed");
+
+        rowDataList.add("Teleop");
+
+        for (Defense defense : Defense.values()) {
+            if (defense == Defense.NONE) {
+                continue;
+            }
+
+            rowDataList.add(defense.name());
+        }
+
+        rowDataList.add("High Goals");
+        rowDataList.add("Low Goals");
+        rowDataList.add("Missed");
+
+        rowDataList.add("Summary");
+
+        rowDataList.add("Scaling Stats");
+        rowDataList.add("Challenged Tower");
+
+        rowDataList.add("Trouble With");
+        rowDataList.add("Comments");
+
+        return rowDataList;
+    }
+
+    private void initRowData(ArrayList<Object> rowDataList, ScoutData data) {
+
+        //rowDataList.add(SimpleDateFormat.getInstance().format(data.getDateAdded()));
+
+        rowDataList.add(""); //Autonomous
+
+        rowDataList.add(data.getAutoDefenseCrossed().name());
+
+        rowDataList.add(data.getAutoHighGoals());
+        rowDataList.add(data.getAutoLowGoals());
+        rowDataList.add(data.getAutoMissedGoals());
+
+        rowDataList.add(""); //Teleop
+
+        for (Defense defense : Defense.values()) {
+            if (defense == Defense.NONE) {
+                continue;
+            }
+
+            int count;
+
+            if (!data.getTeleopDefenseCrossings().containsKey(defense)) {
+                count = 0;
+            } else {
+                count = data.getTeleopDefenseCrossings().get(defense);
+            }
+
+            rowDataList.add(count);
+        }
+
+        rowDataList.add(data.getTeleopHighGoals());
+        rowDataList.add(data.getTeleopLowGoals());
+        rowDataList.add(data.getTeleopMissedGoals());
+
+        rowDataList.add(""); //Summary
+
+        rowDataList.add(data.getScalingStats().name());
+        rowDataList.add(data.hasChallengedTower());
+
+        rowDataList.add(data.getTroubleWith());
+        rowDataList.add(data.getComments());
+
+    }
+}*/
Index: app/src/main/res/menu/menu_this_device.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_this_device.xml	(revision )
+++ app/src/main/res/menu/menu_this_device.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_sort"
+        android:icon="@drawable/ic_sort_white_24dp"
+        android:orderInCategory="2"
+        android:title="Sort"
+        app:showAsAction="always" />
+    <item
+        android:id="@+id/action_export_csv"
+        android:orderInCategory="3"
+        android:title="Export to CSV"
+        app:showAsAction="never" />
+    <item
+        android:id="@+id/action_delete_all"
+        android:orderInCategory="4"
+        android:title="Delete All"
+        app:showAsAction="never" />
+</menu>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    package="com.team980.thunderscout">
+
+    <uses-feature
+        android:name="android.hardware.bluetooth"
+        android:required="false" />
+
+    <uses-permission android:name="android.permission.BLUETOOTH" />
+    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
+
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <!--<uses-permission android:name="android.permission.GET_ACCOUNTS" />
+    <uses-permission android:name="android.permission.INTERNET" />-->
+
+    <application
+        android:name=".ThunderScout"
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:theme="@style/ThunderScout.BaseTheme"
+        tools:ignore="ManifestResource">
+        <activity
+            android:name=".MainActivity"
+            android:label="@string/app_name"
+            android:theme="@style/ThunderScout.BaseTheme.NavigationPane">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+            <meta-data
+                android:name="android.app.shortcuts"
+                android:resource="@xml/shortcuts" />
+        </activity>
+        <activity
+            android:name=".match.ScoutingFlowActivity"
+            android:label="Scout a match..."
+            android:parentActivityName=".MainActivity"
+            android:theme="@style/ThunderScout.BaseTheme" />
+        <activity
+            android:name=".info.statistics.MatchInfoActivity"
+            android:label="Match Info"
+            android:parentActivityName=".MainActivity"
+            android:theme="@style/ThunderScout.BaseTheme" />
+        <activity
+            android:name=".info.statistics.TeamInfoActivity"
+            android:label="Team Info"
+            android:parentActivityName=".MainActivity"
+            android:theme="@style/ThunderScout.BaseTheme" />
+        <activity
+            android:name=".preferences.SettingsActivity"
+            android:label="Settings"
+            android:parentActivityName=".MainActivity"
+            android:theme="@style/ThunderScout.BaseTheme.ActionBar">
+            <intent-filter>
+                <action android:name="android.service.quicksettings.action.QS_TILE_PREFERENCES" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".integrations.IntegrationsActivity"
+            android:label="Integrations"
+            android:parentActivityName=".MainActivity"
+            android:theme="@style/ThunderScout.BaseTheme.ActionBar" />
+        <!--<activity android:name=".sheets.GoogleAuthActivity"></activity>-->
+        <activity
+            android:name=".AboutActivity"
+            android:label="About"
+            android:parentActivityName=".preferences.SettingsActivity"
+            android:theme="@style/ThunderScout.BaseTheme.ActionBar" />
+
+        <service android:name=".bluetooth.BluetoothServerService" />
+        <service
+            android:name=".bluetooth.BluetoothQuickTileService"
+            android:icon="@drawable/ic_bluetooth_searching_white_24dp"
+            android:label="ThunderScout Bluetooth Server"
+            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
+            <intent-filter>
+                <action android:name="android.service.quicksettings.action.QS_TILE" />
+            </intent-filter>
+            <meta-data android:name="android.service.quicksettings.ACTIVE_TILE"
+                android:value="true" />
+        </service>
+
+        <provider
+            android:name="android.support.v4.content.FileProvider"
+            android:authorities="com.team980.thunderscout.provider"
+            android:exported="false"
+            android:grantUriPermissions="true">
+            <meta-data
+                android:name="android.support.FILE_PROVIDER_PATHS"
+                android:resource="@xml/provider_paths"/>
+        </provider>
+    </application>
+
+</manifest>
\ No newline at end of file
Index: app/src/main/res/layout/feed_operation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/feed_operation.xml	(revision )
+++ app/src/main/res/layout/feed_operation.xml	(revision )
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="72dp"
+    android:background="@color/background_floating">
+
+    <ImageView
+        android:id="@+id/operation_icon"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_gravity="center_vertical"
+        android:paddingLeft="16dp"
+        android:src="@drawable/ic_send_white_24dp"/>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:paddingLeft="72dp"
+        android:paddingRight="16dp">
+
+        <TextView
+            android:id="@+id/operation_type"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingTop="15dp"
+            android:text="Operation Type"
+            android:textColor="@android:color/white"
+            android:textSize="16sp" />
+
+        <TextView
+            android:id="@+id/operation_status"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/operation_type"
+            android:text="Operation Status"
+            android:textSize="14sp" />
+
+    </RelativeLayout>
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_info_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_info_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_info_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2L11,7h2v2z"/>
+</vector>
Index: app/src/main/res/layout/layout_info_scout_summary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_info_scout_summary.xml	(revision )
+++ app/src/main/res/layout/layout_info_scout_summary.xml	(revision )
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    android:elevation="2dp"
+    app:cardCornerRadius="2dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="16dp">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:text="Summary"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textSize="25sp" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:background="@color/background_floating_light"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:text="Trouble With"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                android:textSize="20sp" />
+
+            <TextView
+                android:id="@+id/info_match_summaryTroubleWith"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:text="Lorem ipsum..."
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="15sp" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:layout_marginTop="16dp"
+                android:text="Comments"
+                android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                android:textSize="20sp" />
+
+            <TextView
+                android:id="@+id/info_match_summaryComments"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:text="Lorem ipsum..."
+                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                android:textSize="15sp" />
+        </LinearLayout>
+
+    </LinearLayout>
+
+</android.support.v7.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/menu/menu_scouting_flow.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_scouting_flow.xml	(revision )
+++ app/src/main/res/menu/menu_scouting_flow.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_edit_details"
+        android:icon="@drawable/ic_create_white_24dp"
+        android:orderInCategory="2"
+        android:title="Edit"
+        app:showAsAction="always" />
+</menu>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/bluetooth/BluetoothQuickTileService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/bluetooth/BluetoothQuickTileService.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/bluetooth/BluetoothQuickTileService.java	(revision )
@@ -0,0 +1,64 @@
+package com.team980.thunderscout.bluetooth;
+
+import android.content.ComponentName;
+import android.content.SharedPreferences;
+import android.graphics.drawable.Icon;
+import android.os.Build;
+import android.preference.PreferenceManager;
+import android.service.quicksettings.Tile;
+import android.service.quicksettings.TileService;
+import android.support.annotation.RequiresApi;
+import android.util.Log;
+
+import com.team980.thunderscout.R;
+
+@RequiresApi(api = Build.VERSION_CODES.N)
+public class BluetoothQuickTileService extends TileService {
+    @Override
+    public void onTileAdded() {
+        TileService.requestListeningState(getApplicationContext(), new ComponentName(this, this.getClass()));
+        super.onTileAdded();
+    }
+
+    @Override
+    public void onTileRemoved() {
+        super.onTileRemoved();
+
+        //tile removed from menu - stop everything
+    }
+
+    @Override
+    public void onStartListening() {
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
+
+        Tile tile = getQsTile();
+
+        if (prefs.getBoolean("enable_bt_server", false)) { //TODO this isn't data from the server itself... it's just of the preference
+            //TODO this should reflect error states better...
+            tile.setIcon(Icon.createWithResource(this,
+                    R.drawable.ic_bluetooth_searching_white_24dp));
+            tile.setState(Tile.STATE_ACTIVE);
+        } else {
+            tile.setIcon(Icon.createWithResource(this,
+                    R.drawable.ic_bluetooth_disabled_white_24dp));
+            tile.setState(Tile.STATE_INACTIVE);
+        }
+
+        tile.updateTile();
+    }
+
+    @Override
+    public void onClick() {
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
+        Log.d("TILETRACE", "tile clicked");
+
+        if (prefs.getBoolean("enable_bt_server", false)) { //Toggles the bluetooth server state
+            Log.d("TILETRACE", "disabling BT server");
+            prefs.edit().putBoolean("enable_bt_server", false).apply();
+
+        } else {
+            prefs.edit().putBoolean("enable_bt_server", true).apply();
+            Log.d("TILETRACE", "enabling BT server");
+        }
+    }
+}
Index: app/src/main/res/xml/pref_headers.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/xml/pref_headers.xml	(revision )
+++ app/src/main/res/xml/pref_headers.xml	(revision )
@@ -0,0 +1,36 @@
+<preference-headers xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <!--<header
+        android:fragment="com.team980.thunderscout.preferences.SettingsActivity$GeneralPreferenceFragment"
+        android:icon="@drawable/ic_settings_white_24dp"
+        android:title="General" />-->
+
+    <header
+        android:fragment="com.team980.thunderscout.preferences.SettingsActivity$MatchScoutPreferenceFragment"
+        android:icon="@drawable/ic_send_white_24dp"
+        android:title="Match scouting" />
+
+    <header
+        android:fragment="com.team980.thunderscout.preferences.SettingsActivity$BluetoothServerPreferenceFragment"
+        android:icon="@drawable/ic_settings_bluetooth_white_24dp"
+        android:title="Bluetooth server" />
+
+    <header
+        android:icon="@drawable/ic_link_white_24dp"
+        android:title="Integrations">
+        <intent
+            android:targetClass="com.team980.thunderscout.integrations.IntegrationsActivity"
+            android:targetPackage="com.team980.thunderscout" />
+    </header>
+
+    <!--<header
+        android:fragment="com.team980.thunderscout.preferences.SettingsActivity$LinkedSheetsPreferenceFragment"
+        android:icon="@drawable/ic_cloud_white_24dp"
+        android:title="Linked spreadsheets" />-->
+
+    <!--<header
+    android:fragment="com.team980.thunderscout.preferences.SettingsActivity$LocalStoragePreferenceFragment"
+    android:icon="@drawable/ic_settings_bluetooth_white_24dp"
+    android:title="Local storage" />-->
+
+</preference-headers>
Index: app/src/main/java/com/team980/thunderscout/data/ScoutDataContract.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/ScoutDataContract.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/ScoutDataContract.java	(revision )
@@ -0,0 +1,42 @@
+package com.team980.thunderscout.data;
+
+import android.provider.BaseColumns;
+
+public final class ScoutDataContract {
+    // To prevent someone from accidentally instantiating the contract class,
+    // give it an empty constructor.
+    private ScoutDataContract() {
+    }
+
+    /* Inner class that defines the table contents */
+    public static abstract class ScoutDataTable implements BaseColumns {
+        public static final String TABLE_NAME = "scout_data";
+
+        // --- INIT ---
+        public static final String COLUMN_NAME_TEAM_NUMBER = "team";
+        public static final String COLUMN_NAME_MATCH_NUMBER = "match_number";
+        public static final String COLUMN_NAME_ALLIANCE_COLOR = "alliance_color";
+
+        public static final String COLUMN_NAME_DATE_ADDED = "date_added";
+        public static final String COLUMN_NAME_DATA_SOURCE = "data_source";
+
+        // --- AUTO ---
+        public static final String COLUMN_NAME_AUTO_GEARS_DELIVERED = "auto_gears_delivered";
+        public static final String COLUMN_NAME_AUTO_LOW_GOAL_DUMP_AMOUNT = "auto_low_goal_dump_amount";
+        public static final String COLUMN_NAME_AUTO_HIGH_GOALS = "auto_high_goals";
+        public static final String COLUMN_NAME_AUTO_MISSED_HIGH_GOALS = "auto_missed_high_goals";
+        public static final String COLUMN_NAME_AUTO_CROSSED_BASELINE = "auto_crossed_baseline";
+
+        // --- TELEOP ---
+        public static final String COLUMN_NAME_TELEOP_GEARS_DELIVERED = "teleop_gears_delivered";
+        public static final String COLUMN_NAME_TELEOP_LOW_GOAL_DUMPS = "teleop_low_goal_dumps";
+        public static final String COLUMN_NAME_TELEOP_HIGH_GOALS = "teleop_high_goals";
+        public static final String COLUMN_NAME_TELEOP_MISSED_HIGH_GOALS = "teleop_missed_high_goals";
+        public static final String COLUMN_NAME_CLIMBING_STATS = "climbing_stats";
+
+        // --- SUMMARY ---
+        public static final String COLUMN_NAME_TROUBLE_WITH = "trouble_with";
+        public static final String COLUMN_NAME_COMMENTS = "comments";
+    }
+}
+
Index: app/src/main/java/com/team980/thunderscout/info/TeamWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/info/TeamWrapper.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/info/TeamWrapper.java	(revision )
@@ -0,0 +1,245 @@
+package com.team980.thunderscout.info;
+
+
+import com.bignerdranch.expandablerecyclerview.Model.ParentListItem;
+import com.team980.thunderscout.data.AverageScoutData;
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.data.enumeration.ClimbingStats;
+
+import java.io.Serializable;
+import java.text.NumberFormat;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Comparator;
+import java.util.List;
+
+/**
+ * Container for ScoutData. Implements averaging, grouping methods by creating an instance of AverageScoutData.
+ */
+public class TeamWrapper implements ParentListItem, Serializable {
+
+    private String teamNumber;
+
+    private AverageScoutData averageData;
+    private List<ScoutData> childItems;
+
+    private NumberFormat formatter;
+
+    public TeamWrapper(String num) {
+        teamNumber = num;
+
+        childItems = new ArrayList<>();
+        averageData = new AverageScoutData(childItems);
+
+        formatter = NumberFormat.getNumberInstance();
+        formatter.setMinimumFractionDigits(0);
+        formatter.setMaximumFractionDigits(1);
+    }
+
+    public TeamWrapper(String num, ScoutData... dataToInsert) {
+        teamNumber = num;
+
+        childItems = new ArrayList<>();
+
+        for (ScoutData data : dataToInsert) {
+            childItems.add(data);
+        }
+
+        averageData = new AverageScoutData(childItems);
+
+        formatter = NumberFormat.getNumberInstance();
+        formatter.setMinimumFractionDigits(0);
+        formatter.setMaximumFractionDigits(1);
+    }
+
+    public String getTeamNumber() {
+        return teamNumber;
+    }
+
+    public int getNumberOfMatches() {
+        return childItems.size();
+    }
+
+    public String getDescriptor(TeamComparator sortMode) {
+        switch (sortMode) {
+            case SORT_LAST_UPDATED:
+                return "Last updated " + SimpleDateFormat.getDateTimeInstance().format(getAverageScoutData().getLastUpdated());
+            case SORT_AVERAGE_AUTO_GEARS_DELIVERED:
+                return formatter.format(getAverageScoutData().getAverageAutoGearsDelivered()) + " gears delivered";
+            case SORT_AVERAGE_AUTO_LOW_GOAL_DUMP_AMOUNT:
+                return getAverageScoutData().getAverageAutoLowGoalDumpAmount() + " amount of fuel dumped";
+            case SORT_AVERAGE_AUTO_HIGH_GOALS:
+                return formatter.format(getAverageScoutData().getAverageAutoHighGoals()) + " high goals";
+            case SORT_AVERAGE_AUTO_MISSED_HIGH_GOALS:
+                return formatter.format(getAverageScoutData().getAverageAutoHighGoals()) + " missed high goals";
+            case SORT_CROSSED_BASELINE_PERCENTAGE:
+                return "Crossed the baseline in " + formatter.format(getAverageScoutData().getCrossedBaselinePercentage()) + "% of matches";
+            case SORT_AVERAGE_TELEOP_GEARS_DELIVERED:
+                return formatter.format(getAverageScoutData().getAverageTeleopGearsDelivered()) + " gears delivered";
+            case SORT_AVERAGE_TELEOP_DUMP_FREQUENCY:
+                return formatter.format(getAverageScoutData().getAverageTeleopDumpFrequency()) + " dumps per match";
+            case SORT_AVERAGE_TELEOP_DUMP_AMOUNT:
+                return getAverageScoutData().getAverageTeleopLowGoalDumpAmount() + " amount of fuel dumped";
+            case SORT_AVERAGE_TELEOP_HIGH_GOALS:
+                return formatter.format(getAverageScoutData().getAverageTeleopHighGoals()) + " high goals";
+            case SORT_AVERAGE_TELEOP_MISSED_HIGH_GOALS:
+                return formatter.format(getAverageScoutData().getAverageTeleopHighGoals()) + " missed high goals";
+            //case SORT_CLIMBING_STATS_PERCENTAGE: TODO
+            default: //Team number, fallback
+                return getNumberOfMatches() + " matches"; //TODO make the layout change?
+        }
+    }
+
+    @Override
+    public List<ScoutData> getChildItemList() {
+        return childItems;
+    }
+
+    @Override
+    public boolean isInitiallyExpanded() {
+        return false;
+    }
+
+    public AverageScoutData getAverageScoutData() {
+        return averageData;
+    }
+
+    /**
+     * Ridiculously cool code
+     */
+    public enum TeamComparator implements Comparator<TeamWrapper> {
+        SORT_TEAM_NUMBER("Team number") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Integer.valueOf(o1.getTeamNumber())
+                        .compareTo(Integer.valueOf(o2.getTeamNumber()));
+            }
+        },
+
+        SORT_LAST_UPDATED("Time updated") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Long.valueOf(o1.getAverageScoutData().getLastUpdated())
+                        .compareTo(o2.getAverageScoutData().getLastUpdated());
+            }
+        },
+
+        SORT_AVERAGE_AUTO_GEARS_DELIVERED("Auto gears delivered") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Float.valueOf(o1.getAverageScoutData().getAverageAutoGearsDelivered())
+                        .compareTo(o2.getAverageScoutData().getAverageAutoGearsDelivered());
+            }
+        },
+
+        SORT_AVERAGE_AUTO_LOW_GOAL_DUMP_AMOUNT("Auto low goal dump amount") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return o1.getAverageScoutData().getAverageAutoLowGoalDumpAmount()
+                        .compareTo(o2.getAverageScoutData().getAverageAutoLowGoalDumpAmount());
+            }
+        },
+
+        SORT_AVERAGE_AUTO_HIGH_GOALS("Auto high goals") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Float.valueOf(o1.getAverageScoutData().getAverageAutoHighGoals())
+                        .compareTo(o2.getAverageScoutData().getAverageAutoHighGoals());
+            }
+        },
+
+        SORT_AVERAGE_AUTO_MISSED_HIGH_GOALS("Auto missed high goals") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Float.valueOf(o1.getAverageScoutData().getAverageAutoMissedHighGoals())
+                        .compareTo(o2.getAverageScoutData().getAverageAutoMissedHighGoals());
+            }
+        },
+
+        SORT_CROSSED_BASELINE_PERCENTAGE("Crossed baseline percentage") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Double.valueOf(o1.getAverageScoutData().getCrossedBaselinePercentage())
+                        .compareTo(o2.getAverageScoutData().getCrossedBaselinePercentage());
+            }
+        },
+
+        SORT_AVERAGE_TELEOP_GEARS_DELIVERED("Teleop gears delivered") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Float.valueOf(o1.getAverageScoutData().getAverageTeleopGearsDelivered())
+                        .compareTo(o2.getAverageScoutData().getAverageTeleopGearsDelivered());
+            }
+        },
+
+        SORT_AVERAGE_TELEOP_DUMP_FREQUENCY("Teleop dump frequency") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Float.valueOf(o1.getAverageScoutData().getAverageTeleopDumpFrequency())
+                        .compareTo(o2.getAverageScoutData().getAverageTeleopDumpFrequency());
+            }
+        },
+
+        SORT_AVERAGE_TELEOP_DUMP_AMOUNT("Teleop dump amount") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return o1.getAverageScoutData().getAverageTeleopLowGoalDumpAmount()
+                        .compareTo(o2.getAverageScoutData().getAverageTeleopLowGoalDumpAmount());
+            }
+        },
+
+        SORT_AVERAGE_TELEOP_HIGH_GOALS("Teleop high goals") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Float.valueOf(o1.getAverageScoutData().getAverageTeleopHighGoals())
+                        .compareTo(o2.getAverageScoutData().getAverageTeleopHighGoals());
+            }
+        },
+
+        SORT_AVERAGE_TELEOP_MISSED_HIGH_GOALS("Teleop missed high goals") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                return Float.valueOf(o1.getAverageScoutData().getAverageTeleopMissedHighGoals())
+                        .compareTo(o2.getAverageScoutData().getAverageTeleopMissedHighGoals());
+            }
+        },
+
+        SORT_CLIMBING_STATS_PERCENTAGE("Teleop climbing stats percentage") {
+            public int compare(TeamWrapper o1, TeamWrapper o2) {
+                int pressedTouchpad = Double.valueOf(o1.getAverageScoutData().getClimbingStatsPercentage(ClimbingStats.PRESSED_TOUCHPAD))
+                        .compareTo(o2.getAverageScoutData().getClimbingStatsPercentage(ClimbingStats.PRESSED_TOUCHPAD));
+
+                if (pressedTouchpad == 0) { //If it's the same...
+                    return Double.valueOf(o1.getAverageScoutData().getClimbingStatsPercentage(ClimbingStats.ATTEMPTED_CLIMB))
+                            .compareTo(o2.getAverageScoutData().getClimbingStatsPercentage(ClimbingStats.ATTEMPTED_CLIMB));
+                } else {
+                    return pressedTouchpad;
+                }
+            }
+        };
+
+        private String displayName;
+
+        TeamComparator(String par1) {
+            displayName = par1;
+        }
+
+        @Override
+        public String toString() {
+            return displayName;
+        }
+
+        public static Comparator<TeamWrapper> getComparator(final TeamComparator... multipleOptions) {
+            return new Comparator<TeamWrapper>() {
+                public int compare(TeamWrapper o1, TeamWrapper o2) {
+                    for (TeamComparator option : multipleOptions) {
+                        int result = option.compare(o1, o2);
+                        if (result != 0) {
+                            return result;
+                        }
+                    }
+                    return 0;
+                }
+            };
+        }
+
+        public static String[] getFormattedList() {
+            TeamComparator[] states = values();
+            String[] names = new String[states.length];
+
+            for (int i = 0; i < states.length; i++) {
+                names[i] = states[i].toString();
+            }
+
+            return names;
+        }
+    }
+}
Index: app/src/main/res/values/bools.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/bools.xml	(revision )
+++ app/src/main/res/values/bools.xml	(revision )
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <bool name="preferences_prefer_dual_pane">false</bool>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/info/statistics/TeamInfoActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/info/statistics/TeamInfoActivity.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/info/statistics/TeamInfoActivity.java	(revision )
@@ -0,0 +1,114 @@
+package com.team980.thunderscout.info.statistics;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.design.widget.TabLayout;
+import android.support.v4.view.ViewPager;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.Toolbar;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.data.AverageScoutData;
+import com.team980.thunderscout.data.enumeration.ClimbingStats;
+
+import java.text.NumberFormat;
+import java.text.SimpleDateFormat;
+
+public class TeamInfoActivity extends AppCompatActivity {
+
+    private AverageScoutData scoutData;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_info_team);
+
+        Intent launchIntent = getIntent();
+        scoutData = (AverageScoutData) launchIntent.getSerializableExtra("com.team980.thunderscout.INFO_AVERAGE_SCOUT");
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        toolbar.setTitle("Team Info: Team " + scoutData.getTeamNumber());
+        setSupportActionBar(toolbar);
+
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+
+        NumberFormat formatter = NumberFormat.getNumberInstance();
+        formatter.setMinimumFractionDigits(0);
+        formatter.setMaximumFractionDigits(1);
+
+        // --- Init ---
+        TextView lastUpdated = (TextView) findViewById(R.id.info_average_lastUpdated);
+        lastUpdated.setText("Last updated: " + SimpleDateFormat.getDateTimeInstance().format(scoutData.getLastUpdated()));
+
+        // --- Auto ---
+        TextView autoGearsDelivered = (TextView) findViewById(R.id.info_average_autoGearsDelivered);
+        autoGearsDelivered.setText(formatter.format(scoutData.getAverageAutoGearsDelivered()) + "");
+
+        TextView autoFuelDumpValue = (TextView) findViewById(R.id.info_average_autoLowGoalDumpAmount);
+        TextView autoFuelDumpNumericalValue = (TextView) findViewById(R.id.info_average_autoLowGoalNumericalDumpAmount);
+        autoFuelDumpValue.setText(scoutData.getAverageAutoLowGoalDumpAmount().toString());
+        autoFuelDumpNumericalValue.setText("(" + scoutData.getAverageAutoLowGoalDumpAmount().getMinimumAmount()
+                + " - " + scoutData.getAverageAutoLowGoalDumpAmount().getMaximumAmount() + ")");
+
+        TextView autoHighGoals = (TextView) findViewById(R.id.info_average_autoHighGoals);
+        autoHighGoals.setText(formatter.format(scoutData.getAverageAutoHighGoals()));
+
+        TextView autoMissedGoals = (TextView) findViewById(R.id.info_average_autoMissedHighGoals);
+        autoMissedGoals.setText(formatter.format(scoutData.getAverageAutoMissedHighGoals()));
+
+        TextView crossedBaselinePercentage = (TextView) findViewById(R.id.info_average_autoCrossedBaselinePercentage);
+        crossedBaselinePercentage.setText(formatter.format(scoutData.getCrossedBaselinePercentage()) + "%");
+
+        ProgressBar crossedBaselineProgressBar = (ProgressBar) findViewById(R.id.info_average_autoCrossedBaselineProgressBar);
+        crossedBaselineProgressBar.setProgress((int) scoutData.getCrossedBaselinePercentage());
+
+        // --- Teleop ---
+        TextView teleopGearsDelivered = (TextView) findViewById(R.id.info_average_teleopGearsDelivered);
+        teleopGearsDelivered.setText(formatter.format(scoutData.getAverageTeleopGearsDelivered()) + "");
+
+        TextView teleopDumpFrequency = (TextView) findViewById(R.id.info_average_teleopFuelDumps);
+        teleopDumpFrequency.setText(formatter.format(scoutData.getAverageTeleopDumpFrequency()) + "");
+
+        TextView teleopFuelDumpValue = (TextView) findViewById(R.id.info_average_teleopLowGoalDumpAmount);
+        TextView teleopFuelDumpNumericalValue = (TextView) findViewById(R.id.info_average_teleopLowGoalNumericalDumpAmount);
+        teleopFuelDumpValue.setText(scoutData.getAverageTeleopLowGoalDumpAmount().toString());
+        teleopFuelDumpNumericalValue.setText("(" + scoutData.getAverageTeleopLowGoalDumpAmount().getMinimumAmount()
+                + " - " + scoutData.getAverageTeleopLowGoalDumpAmount().getMaximumAmount() + ")");
+
+        TextView teleopHighGoals = (TextView) findViewById(R.id.info_average_teleopHighGoals);
+        teleopHighGoals.setText(formatter.format(scoutData.getAverageTeleopHighGoals()));
+
+        TextView teleopMissedGoals = (TextView) findViewById(R.id.info_average_teleopMissedHighGoals);
+        teleopMissedGoals.setText(formatter.format(scoutData.getAverageTeleopMissedHighGoals()));
+
+        TextView attemptedClimbPercentage = (TextView) findViewById(R.id.info_average_teleopAttemptedClimbPercentage);
+        attemptedClimbPercentage.setText(formatter.format(scoutData.getClimbingStatsPercentage(ClimbingStats.ATTEMPTED_CLIMB)) + "%");
+
+        ProgressBar attemptedClimbProgressBar = (ProgressBar) findViewById(R.id.info_average_teleopAttemptedClimbProgressBar);
+        attemptedClimbProgressBar.setProgress((int) scoutData.getClimbingStatsPercentage(ClimbingStats.ATTEMPTED_CLIMB));
+
+        TextView pressedTouchpadPercentage = (TextView) findViewById(R.id.info_average_teleopPressedTouchpadPercentage);
+        pressedTouchpadPercentage.setText(formatter.format(scoutData.getClimbingStatsPercentage(ClimbingStats.PRESSED_TOUCHPAD)) + "%");
+
+        ProgressBar pressedTouchpadProgressBar = (ProgressBar) findViewById(R.id.info_average_teleopPressedTouchpadProgressBar);
+        pressedTouchpadProgressBar.setProgress((int) scoutData.getClimbingStatsPercentage(ClimbingStats.PRESSED_TOUCHPAD));
+
+        // --- Summary ---
+
+        RecyclerView troubleWith = (RecyclerView) findViewById(R.id.info_average_summaryTroubleWith);
+
+        troubleWith.setLayoutManager(new LinearLayoutManager(this));
+        troubleWith.setAdapter(new CommentsAdapter(scoutData.getTroublesList()));
+
+        RecyclerView comments = (RecyclerView) findViewById(R.id.info_average_summaryComments);
+
+        comments.setLayoutManager(new LinearLayoutManager(this));
+        comments.setAdapter(new CommentsAdapter(scoutData.getCommentsList()));
+    }
+
+}
+
Index: app/src/androidTest/java/com/team980/thunderscout/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/team980/thunderscout/ApplicationTest.java	(revision )
+++ app/src/androidTest/java/com/team980/thunderscout/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package com.team980.thunderscout;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/menu/drawer_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/drawer_menu.xml	(revision )
+++ app/src/main/res/menu/drawer_menu.xml	(revision )
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <group android:id="@+id/group_top"
+        android:checkableBehavior="single">
+        <item
+            android:id="@+id/nav_match_scout"
+            android:icon="@drawable/ic_send_white_24dp"
+            android:title="Home" />
+        <item
+            android:id="@+id/nav_local_storage"
+            android:icon="@drawable/ic_filter_list_white_24dp"
+            android:title="This device" />
+    </group>
+
+
+    <group android:id="@+id/group_bottom">
+        <item
+            android:id="@+id/nav_settings"
+            android:icon="@drawable/ic_settings_white_24dp"
+            android:title="Settings" />
+        <item
+            android:id="@+id/nav_about"
+            android:icon="@drawable/ic_info_white_24dp"
+            android:title="About" />
+    </group>
+</menu>
Index: app/src/main/java/com/team980/thunderscout/info/statistics/MatchInfoActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/info/statistics/MatchInfoActivity.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/info/statistics/MatchInfoActivity.java	(revision )
@@ -0,0 +1,135 @@
+package com.team980.thunderscout.info.statistics;
+
+import android.content.Intent;
+import android.graphics.drawable.ColorDrawable;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.data.enumeration.ClimbingStats;
+
+import java.text.SimpleDateFormat;
+
+public class MatchInfoActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_info_match);
+
+        Intent launchIntent = getIntent();
+        ScoutData data = (ScoutData) launchIntent.getSerializableExtra("com.team980.thunderscout.INFO_SCOUT");
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        getSupportActionBar().setTitle("Match Info: Team " + data.getTeamNumber());
+        getSupportActionBar().setSubtitle("Qualification Match " + data.getMatchNumber());
+
+        toolbar.setBackground(new ColorDrawable(getResources().getColor(data.getAllianceColor().getColorPrimary())));
+        findViewById(R.id.app_bar_layout).setBackground(new ColorDrawable(getResources().getColor(data.getAllianceColor().getColorPrimary())));
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            getWindow().setStatusBarColor(getResources().getColor(data.getAllianceColor().getColorPrimaryDark()));
+        }
+
+        // --- Init ---
+        TextView dateAdded = (TextView) findViewById(R.id.info_match_dateAdded);
+        dateAdded.setText(SimpleDateFormat.getDateTimeInstance().format(data.getDateAdded()));
+
+        TextView dataSource = (TextView) findViewById(R.id.info_match_dataSource);
+        dataSource.setText("Source: " + data.getDataSource());
+
+        // --- Auto ---
+
+        //TODO use @strings with inputs as Spannables for in-view styling
+
+        TextView autoGearsDelivered = (TextView) findViewById(R.id.info_match_autoGearsDelivered);
+        autoGearsDelivered.setText(data.getAutoGearsDelivered() + "");
+
+        TextView autoFuelDumpAmount = (TextView) findViewById(R.id.info_match_autoLowGoalDumpAmount);
+        autoFuelDumpAmount.setText(data.getAutoLowGoalDumpAmount().toString());
+
+        TextView autoFuelNumericalDumpAmount = (TextView) findViewById(R.id.info_match_autoLowGoalNumericalDumpAmount);
+        autoFuelNumericalDumpAmount.setText("(" + data.getAutoLowGoalDumpAmount().getMinimumAmount() + " - " +
+                data.getAutoLowGoalDumpAmount().getMaximumAmount() + ")");
+
+        TextView autoHighGoals = (TextView) findViewById(R.id.info_match_autoHighGoals);
+        autoHighGoals.setText(data.getAutoHighGoals() + "");
+
+        TextView autoMissedGoals = (TextView) findViewById(R.id.info_match_autoMissedHighGoals);
+        autoMissedGoals.setText(data.getAutoMissedHighGoals() + "");
+
+        TextView crossedBaseline = (TextView) findViewById(R.id.info_match_autoCrossedBaseline);
+        TextView crossedBaselineAction = (TextView) findViewById(R.id.info_match_autoCrossedBaselineAction);
+
+        if (data.hasCrossedBaseline()) {
+            crossedBaseline.setText("CROSSED ");
+            crossedBaselineAction.setText("the baseline");
+        } else {
+            crossedBaseline.setVisibility(View.GONE);
+            crossedBaselineAction.setText("Did not cross the baseline");
+        }
+
+        // --- Teleop ---
+        TextView teleopGearsDelivered = (TextView) findViewById(R.id.info_match_teleopGearsDelivered);
+        teleopGearsDelivered.setText(data.getTeleopGearsDelivered() + "");
+
+        TextView teleopFuelDumpAmount = (TextView) findViewById(R.id.info_match_teleopNumberOfLowGoalFuelDumps);
+        teleopFuelDumpAmount.setText(data.getTeleopLowGoalDumps().size() + "");
+
+        RecyclerView listFuelDumps = (RecyclerView) findViewById(R.id.info_match_teleopListFuelDumps);
+
+        RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(this);
+        listFuelDumps.setLayoutManager(mLayoutManager);
+
+        FuelDumpAdapter listDumpsAdapter = new FuelDumpAdapter(data.getTeleopLowGoalDumps());
+        listFuelDumps.setAdapter(listDumpsAdapter);
+
+        TextView teleopHighGoals = (TextView) findViewById(R.id.info_match_teleopHighGoals);
+        teleopHighGoals.setText(data.getAutoHighGoals() + "");
+
+        TextView teleopMissedGoals = (TextView) findViewById(R.id.info_match_teleopMissedHighGoals);
+        teleopMissedGoals.setText(data.getAutoMissedHighGoals() + "");
+
+        TextView climbingStats = (TextView) findViewById(R.id.info_match_teleopClimbingStats);
+        TextView climbingStatsAction = (TextView) findViewById(R.id.info_match_teleopClimbingStatsAction);
+
+        if (data.getClimbingStats() == ClimbingStats.PRESSED_TOUCHPAD) {
+            climbingStats.setText("PRESSED ");
+            climbingStatsAction.setText("the touchpad");
+        } else if (data.getClimbingStats() == ClimbingStats.ATTEMPTED_CLIMB) {
+            climbingStats.setText("ATTEMPTED TO CLIMB ");
+            climbingStatsAction.setText("the airship");
+        } else {
+            climbingStats.setVisibility(View.GONE);
+            climbingStatsAction.setText("Did not climb the airship");
+        }
+
+        // --- Summary ---
+        TextView troubleWith = (TextView) findViewById(R.id.info_match_summaryTroubleWith);
+        if (data.getTroubleWith() != null) {
+            troubleWith.setText(data.getTroubleWith());
+        } else {
+            troubleWith.setText("None");
+        }
+
+        TextView comments = (TextView) findViewById(R.id.info_match_summaryComments);
+        if (data.getComments() != null) {
+            comments.setText(data.getComments());
+        } else {
+            comments.setText("None");
+        }
+    }
+}
+
Index: app/src/main/java/com/team980/thunderscout/feed/FeedDataContract.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/feed/FeedDataContract.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/feed/FeedDataContract.java	(revision )
@@ -0,0 +1,20 @@
+package com.team980.thunderscout.feed;
+
+import android.provider.BaseColumns;
+
+public final class FeedDataContract {
+    // To prevent someone from accidentally instantiating the contract class,
+    // give it an empty constructor.
+    private FeedDataContract() {
+    }
+
+    /* Inner class that defines the table contents */
+    public static abstract class FeedDataTable implements BaseColumns {
+        public static final String TABLE_NAME = "feed_data";
+
+        public static final String COLUMN_NAME_ENTRY_TYPE = "entry_type";
+        public static final String COLUMN_NAME_ENTRY_DATE = "entry_date";
+        public static final String COLUMN_NAME_ENTRY_OPERATIONS = "entry_operations";
+    }
+}
+
Index: app/src/main/res/layout/activity_integrations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_integrations.xml	(revision )
+++ app/src/main/res/layout/activity_integrations.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <!--- TODO add Google Sheets integration -->
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/xml/pref_linked_sheets.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/xml/pref_linked_sheets.xml	(revision )
+++ app/src/main/res/xml/pref_linked_sheets.xml	(revision )
@@ -0,0 +1,43 @@
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <SwitchPreference
+        android:defaultValue="false"
+        android:key="enable_linked_sheets"
+        android:summary="Link with a spreadhseet for cloud storage"
+        android:title="Enable Google Sheets integration" />
+    <Preference
+        android:key="googleAccountAuth"
+        android:dependency="enable_linked_sheets"
+        android:title="Sign in to your Google account">
+        <intent
+            android:action="android.intent.action.VIEW"
+            android:targetPackage="com.team980.thunderscout"
+            android:targetClass="com.team980.thunderscout.sheets.GoogleAuthActivity" />
+    </Preference>
+
+    <!-- These are examples from the tutorial -->
+    <!-- NOTE: EditTextPreference accepts EditText attributes. -->
+    <!-- NOTE: EditTextPreference's summary should be set to its value by the activity code. -->
+    <!--<EditTextPreference
+        android:capitalize="words"
+        android:defaultValue="@string/pref_default_display_name"
+        android:inputType="textCapWords"
+        android:key="example_text"
+        android:maxLines="1"
+        android:selectAllOnFocus="true"
+        android:singleLine="true"
+        android:title="@string/pref_title_display_name" />-->
+
+    <!-- NOTE: Hide buttons to simplify the UI. Users can touch outside the dialog to
+         dismiss it. -->
+    <!-- NOTE: ListPreference's summary should be set to its value by the activity code. -->
+    <!--<ListPreference
+        android:defaultValue="-1"
+        android:entries="@array/pref_example_list_titles"
+        android:entryValues="@array/pref_example_list_values"
+        android:key="example_list"
+        android:negativeButtonText="@null"
+        android:positiveButtonText="@null"
+        android:title="@string/pref_title_add_friends_to_messages" />-->
+
+</PreferenceScreen>
Index: app/src/main/java/com/team980/thunderscout/feed/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/feed/HomeFragment.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/feed/HomeFragment.java	(revision )
@@ -0,0 +1,188 @@
+package com.team980.thunderscout.feed;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.support.design.widget.FloatingActionButton;
+import android.support.v4.app.Fragment;
+import android.support.v4.content.LocalBroadcastManager;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v4.widget.SwipeRefreshLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.widget.DividerItemDecoration;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.LinearLayout;
+
+import com.team980.thunderscout.MainActivity;
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.feed.task.FeedDataClearTask;
+import com.team980.thunderscout.feed.task.FeedDataReadTask;
+import com.team980.thunderscout.match.ScoutingFlowActivity;
+
+import java.util.ArrayList;
+
+public class HomeFragment extends Fragment implements View.OnClickListener, SwipeRefreshLayout.OnRefreshListener, DialogInterface.OnClickListener {
+
+    private RecyclerView feed;
+    private ActivityFeedAdapter adapter;
+
+    private SwipeRefreshLayout swipeContainer;
+
+    private BroadcastReceiver refreshReceiver;
+
+    public static final String ACTION_REFRESH_VIEW_PAGER = "com.team980.thunderscout.feed.REFRESH_VIEW_PAGER"; //conveniently different from the other one
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_home, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        MainActivity activity = (MainActivity) getActivity();
+
+        Toolbar toolbar = (Toolbar) view.findViewById(R.id.toolbar);
+        toolbar.setTitle("ThunderScout");
+        activity.setSupportActionBar(toolbar);
+
+        setHasOptionsMenu(true);
+
+        DrawerLayout drawer = (DrawerLayout) getActivity().findViewById(R.id.drawer_layout);
+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
+                activity, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+        drawer.addDrawerListener(toggle);
+        toggle.syncState();
+
+        feed = (RecyclerView) view.findViewById(R.id.feed);
+
+        // use a linear layout manager
+        RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(getContext());
+        feed.setLayoutManager(mLayoutManager);
+
+        DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(getContext(),
+                LinearLayout.VERTICAL);
+        feed.addItemDecoration(dividerItemDecoration);
+
+        // specify an adapter (see also next example)
+        adapter = new ActivityFeedAdapter(new ArrayList<FeedEntry>());
+        feed.setAdapter(adapter);
+
+        swipeContainer = (SwipeRefreshLayout) view.findViewById(R.id.swipeContainer);
+
+        swipeContainer.setOnRefreshListener(this);
+
+        swipeContainer.setColorSchemeResources(R.color.accent);
+        swipeContainer.setProgressBackgroundColorSchemeResource(R.color.cardview_dark_background);
+
+        FeedDataReadTask query = new FeedDataReadTask(adapter, getContext(), swipeContainer);
+        query.execute();
+
+        refreshReceiver = new BroadcastReceiver() {
+            @Override
+            public void onReceive(Context context, Intent intent) {
+                Log.d("PINGTEST", "I hear you");
+
+                FeedDataReadTask query = new FeedDataReadTask(adapter, getContext(), swipeContainer);
+                query.execute();
+            }
+        };
+
+        FloatingActionButton b = (FloatingActionButton) view.findViewById(R.id.fab_scout);
+        b.setOnClickListener(this);
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+
+        Log.d("PINGTEST", "unregister");
+        LocalBroadcastManager.getInstance(getContext()).unregisterReceiver(refreshReceiver);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+
+        Log.d("PINGTEST", "register");
+        LocalBroadcastManager.getInstance(getContext()).registerReceiver(refreshReceiver, new IntentFilter(ACTION_REFRESH_VIEW_PAGER));
+    }
+
+    @Override
+    public void onClick(View view) {
+        if (view.getId() == R.id.fab_scout) {
+            SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getContext());
+
+            if (!prefs.getBoolean("enable_match_scout", true)) { //Saving locally
+                return; //TODO hide the button
+            }
+
+            Intent scoutIntent = new Intent(getContext(), ScoutingFlowActivity.class);
+            startActivity(scoutIntent);
+        }
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.menu_home, menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        int id = item.getItemId();
+
+        if (id == R.id.action_clear && adapter.getItemCount() > 0) {
+            new AlertDialog.Builder(getContext())
+                    .setTitle("Clear activity and history feed?")
+                    .setPositiveButton("Clear", this)
+                    .setNegativeButton("Dismiss", null).show();
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    /**
+     * SwipeRefreshLayout
+     */
+    @Override
+    public void onRefresh() {
+        FeedDataReadTask query = new FeedDataReadTask(adapter, getContext(), swipeContainer);
+        query.execute();
+    }
+
+    /**
+     * Alert dialog shown for deletion prompts
+     */
+    @Override
+    public void onClick(DialogInterface dialog, int whichButton) {
+        FeedDataClearTask clearTask = new FeedDataClearTask(adapter, getContext());
+        clearTask.execute();
+
+    }
+}
Index: app/src/main/res/layout/fragment_auto.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_auto.xml	(revision )
+++ app/src/main/res/layout/fragment_auto.xml	(revision )
@@ -0,0 +1,183 @@
+<android.support.v4.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/auto_scrollView"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    app:layout_behavior="android.support.design.widget.AppBarLayout$ScrollingViewBehavior"
+    tools:context=".match.ScoutingFlowActivity">
+
+    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:padding="20dp">
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginBottom="10dp"
+            android:layout_marginTop="10dp"
+            android:orientation="horizontal">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginRight="5dp"
+                android:text="Gears Delivered"
+                android:textSize="18sp" />
+
+            <CheckBox
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content" />
+
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginBottom="8dp"
+            android:layout_marginTop="16dp"
+            android:orientation="vertical">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginBottom="10dp"
+                android:text="Fuel Dumped in Low Goal"
+                android:textSize="18sp" />
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:orientation="horizontal">
+
+                <Button
+                    android:id="@+id/auto_buttonFuelMinus"
+                    style="?android:attr/buttonStyleSmall"
+                    android:layout_width="56dp"
+                    android:layout_height="56dp"
+                    android:background="?attr/selectableItemBackground"
+                    android:text="-"
+                    android:textColor="@color/accent"
+                    android:textSize="20sp" />
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/auto_textViewFuelValue"
+                        android:layout_width="128dp"
+                        android:layout_height="wrap_content"
+                        android:layout_marginBottom="4dp"
+                        android:gravity="center"
+                        android:text="State"
+                        android:textAppearance="?android:attr/textAppearanceMedium" />
+
+                    <TextView
+                        android:id="@+id/auto_textViewFuelNumericalValue"
+                        android:layout_width="128dp"
+                        android:layout_height="wrap_content"
+                        android:layout_marginBottom="4dp"
+                        android:gravity="center"
+                        android:text="0 - 0"
+                        android:textAppearance="?android:attr/textAppearanceSmall" />
+                </LinearLayout>
+
+                <Button
+                    android:id="@+id/auto_buttonFuelPlus"
+                    style="?android:attr/buttonStyleSmall"
+                    android:layout_width="56dp"
+                    android:layout_height="56dp"
+                    android:background="?attr/selectableItemBackground"
+                    android:text="+"
+                    android:textColor="@color/accent"
+                    android:textSize="20sp" />
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginBottom="8dp"
+            android:layout_marginTop="16dp"
+            android:orientation="horizontal">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:orientation="vertical">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center"
+                    android:text="High Goals"
+                    android:textSize="18sp" />
+
+                <com.team980.thunderscout.util.CounterCompoundView
+                    android:id="@+id/auto_counterHighGoals"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:orientation="vertical">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center"
+                    android:text="Missed High Goals"
+                    android:textSize="18sp" />
+
+                <com.team980.thunderscout.util.CounterCompoundView
+                    android:id="@+id/auto_counterMissedHighGoals"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginBottom="0dp"
+            android:layout_marginTop="8dp"
+            android:orientation="horizontal">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginRight="8dp"
+                android:text="Crossed Baseline?"
+                android:textSize="18sp" />
+
+            <CheckBox
+                android:id="@+id/auto_checkBoxCrossedBaseline"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="5dp" />
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+</android.support.v4.widget.NestedScrollView>
Index: app/src/main/java/com/team980/thunderscout/preferences/SettingsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/preferences/SettingsActivity.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/preferences/SettingsActivity.java	(revision )
@@ -0,0 +1,282 @@
+package com.team980.thunderscout.preferences;
+
+import android.annotation.TargetApi;
+import android.os.Build;
+import android.os.Bundle;
+import android.preference.ListPreference;
+import android.preference.Preference;
+import android.preference.PreferenceActivity;
+import android.preference.PreferenceFragment;
+import android.preference.PreferenceManager;
+import android.support.v4.app.NavUtils;
+import android.support.v7.app.ActionBar;
+import android.view.MenuItem;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.util.AppCompatPreferenceActivity;
+
+import java.util.List;
+
+/**
+ * A {@link PreferenceActivity} that presents a set of application settings. On
+ * handset devices, settings are presented as a single list. On tablets,
+ * settings are split by category, with category headers shown to the left of
+ * the list of settings.
+ * <p>
+ * See <a href="http://developer.android.com/design/patterns/settings.html">
+ * Android Design: Settings</a> for design guidelines and the <a
+ * href="http://developer.android.com/guide/topics/ui/settings.html">Settings
+ * API Guide</a> for more information on developing a Settings UI.
+ */
+public class SettingsActivity extends AppCompatPreferenceActivity {
+
+    //PreferenceChange listener now in ThunderScout.java
+
+    /**
+     * A preference value change listener that updates the preference's summary
+     * to reflect its new value.
+     */
+    private static Preference.OnPreferenceChangeListener sBindPreferenceSummaryToValueListener = new Preference.OnPreferenceChangeListener() {
+        @Override
+        public boolean onPreferenceChange(Preference preference, Object value) {
+            String stringValue = value.toString();
+
+            if (preference instanceof ListPreference) { //This also handles BluetoothDevicePreference! ;D
+                // For list preferences, look up the correct display value in
+                // the preference's 'entries' list.
+                ListPreference listPreference = (ListPreference) preference;
+                int index = listPreference.findIndexOfValue(stringValue);
+
+                // Set the summary to reflect the new value.
+                preference.setSummary(
+                        index >= 0
+                                ? listPreference.getEntries()[index]
+                                : null);
+
+            } else {
+                // For all other preferences, set the summary to the value's
+                // simple string representation.
+                preference.setSummary(stringValue);
+            }
+            return true;
+        }
+    };
+
+    /**
+     * Binds a preference's summary to its value. More specifically, when the
+     * preference's value is changed, its summary (line of text below the
+     * preference title) is updated to reflect the value. The summary is also
+     * immediately updated upon calling this method. The exact display format is
+     * dependent on the type of preference.
+     *
+     * @see #sBindPreferenceSummaryToValueListener
+     */
+    private static void bindPreferenceSummaryToValue(Preference preference) {
+        // Set the listener to watch for value changes.
+        preference.setOnPreferenceChangeListener(sBindPreferenceSummaryToValueListener);
+
+        // Trigger the listener immediately with the preference's
+        // current value.
+        sBindPreferenceSummaryToValueListener.onPreferenceChange(preference,
+                PreferenceManager
+                        .getDefaultSharedPreferences(preference.getContext())
+                        .getString(preference.getKey(), ""));
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setupActionBar();
+
+        if (hasHeaders()) {
+            //Button button = new Button(this);
+            //button.setText("Some action");
+            //setListFooter(button);
+        }
+    }
+
+    /**
+     * Set up the {@link android.app.ActionBar}, if the API is available.
+     */
+    private void setupActionBar() {
+        ActionBar actionBar = getSupportActionBar();
+        if (actionBar != null) {
+            // Show the Up button in the action bar.
+            actionBar.setHomeButtonEnabled(true);
+            actionBar.setDisplayHomeAsUpEnabled(true);
+        }
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case android.R.id.home:
+                onBackPressed();
+                return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    @Override
+    public void onBackPressed() {
+        if (getFragmentManager().getBackStackEntryCount() > 0) {
+            getFragmentManager().popBackStackImmediate();
+            //If the last fragment was removed then reset the title of main
+            // fragment (if so the previous popBackStack made entries = 0).
+            if (getFragmentManager().getBackStackEntryCount() == 0) {
+                getSupportActionBar()
+                        .setTitle("Settings");
+            }
+        } else {
+            super.onBackPressed();
+        }
+    }
+
+    @Override
+    public boolean onMenuItemSelected(int featureId, MenuItem item) {
+        int id = item.getItemId();
+        if (id == android.R.id.home) {
+            if (!super.onMenuItemSelected(featureId, item)) {
+                NavUtils.navigateUpFromSameTask(this);
+            }
+            return true;
+        }
+        return super.onMenuItemSelected(featureId, item);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public boolean onIsMultiPane() {
+        return getResources().getBoolean(R.bool.preferences_prefer_dual_pane);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public void onBuildHeaders(List<PreferenceActivity.Header> target) {
+        loadHeadersFromResource(R.xml.pref_headers, target);
+    }
+
+    /**
+     * This method stops fragment injection in malicious applications.
+     * Make sure to deny any unknown fragments here.
+     */
+    protected boolean isValidFragment(String fragmentName) {
+        return PreferenceFragment.class.getName().equals(fragmentName)
+                || GeneralPreferenceFragment.class.getName().equals(fragmentName)
+                || MatchScoutPreferenceFragment.class.getName().equals(fragmentName)
+                || BluetoothServerPreferenceFragment.class.getName().equals(fragmentName)
+                || LinkedSheetsPreferenceFragment.class.getName().equals(fragmentName);
+    }
+
+    /**
+     * This fragment shows general preferences only. It is used when the
+     * activity is showing a two-pane settings UI.
+     */
+    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
+    public static class GeneralPreferenceFragment extends PreferenceFragment {
+        @Override
+        public void onCreate(Bundle savedInstanceState) {
+            super.onCreate(savedInstanceState);
+            addPreferencesFromResource(R.xml.pref_general);
+            //setHasOptionsMenu(true);
+
+            if (!getResources().getBoolean(R.bool.preferences_prefer_dual_pane)) {
+                SettingsActivity activity = (SettingsActivity) getActivity();
+
+                activity.getSupportActionBar().setTitle("General");
+            }
+
+            // Bind the summaries of EditText/List/Dialog/Ringtone preferences
+            // to their values. When their values change, their summaries are
+            // updated to reflect the new value, per the Android Design
+            // guidelines.
+        }
+
+        /*@Override
+        public boolean onOptionsItemSelected(MenuItem item) {
+            int id = item.getItemId();
+            if (id == android.R.id.home) {
+                startActivity(new Intent(getActivity(), SettingsActivity.class));
+                return true;
+            }
+            return super.onOptionsItemSelected(item);
+        }*/
+    }
+
+    /**
+     * This fragment shows general preferences only. It is used when the
+     * activity is showing a two-pane settings UI.
+     */
+    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
+    public static class MatchScoutPreferenceFragment extends PreferenceFragment {
+        @Override
+        public void onCreate(Bundle savedInstanceState) {
+            super.onCreate(savedInstanceState);
+            addPreferencesFromResource(R.xml.pref_match_scout);
+
+            if (!getResources().getBoolean(R.bool.preferences_prefer_dual_pane)) {
+                SettingsActivity activity = (SettingsActivity) getActivity();
+
+                activity.getSupportActionBar().setTitle("Match scouting");
+            }
+
+            // Bind the summaries of EditText/List/Dialog/Ringtone preferences
+            // to their values. When their values change, their summaries are
+            // updated to reflect the new value, per the Android Design
+            // guidelines.
+            bindPreferenceSummaryToValue(findPreference("ms_bt_server_device"));
+        }
+    }
+
+    /**
+     * This fragment shows general preferences only. It is used when the
+     * activity is showing a two-pane settings UI.
+     */
+    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
+    public static class BluetoothServerPreferenceFragment extends PreferenceFragment {
+        @Override
+        public void onCreate(Bundle savedInstanceState) {
+            super.onCreate(savedInstanceState);
+            addPreferencesFromResource(R.xml.pref_bt_server);
+
+            if (!getResources().getBoolean(R.bool.preferences_prefer_dual_pane)) {
+                SettingsActivity activity = (SettingsActivity) getActivity();
+
+                activity.getSupportActionBar().setTitle("Bluetooth server");
+            }
+
+            // Bind the summaries of EditText/List/Dialog/Ringtone preferences
+            // to their values. When their values change, their summaries are
+            // updated to reflect the new value, per the Android Design
+            // guidelines.
+        }
+    }
+
+    /**
+     * This fragment shows general preferences only. It is used when the
+     * activity is showing a two-pane settings UI.
+     */
+    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
+    public static class LinkedSheetsPreferenceFragment extends PreferenceFragment {
+        @Override
+        public void onCreate(Bundle savedInstanceState) {
+            super.onCreate(savedInstanceState);
+            addPreferencesFromResource(R.xml.pref_linked_sheets);
+
+            if (!getResources().getBoolean(R.bool.preferences_prefer_dual_pane)) {
+                SettingsActivity activity = (SettingsActivity) getActivity();
+
+                activity.getSupportActionBar().setTitle("Linked spreadsheets");
+            }
+
+            // Bind the summaries of EditText/List/Dialog/Ringtone preferences
+            // to their values. When their values change, their summaries are
+            // updated to reflect the new value, per the Android Design
+            // guidelines.
+
+        }
+    }
+}
Index: app/src/main/res/xml/pref_bt_server.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/xml/pref_bt_server.xml	(revision )
+++ app/src/main/res/xml/pref_bt_server.xml	(revision )
@@ -0,0 +1,53 @@
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <SwitchPreference
+        android:defaultValue="false"
+        android:key="enable_bt_server"
+        android:summary="Enable receiving scouting data from other devices via Bluetooth"
+        android:title="Enable Bluetooth Server" />
+
+    <PreferenceCategory android:title="Storage options" android:dependency="enable_bt_server">
+
+        <CheckBoxPreference
+            android:defaultValue="true"
+            android:key="bt_send_to_local_storage"
+            android:title="Save to this device" />
+
+        <!--<CheckBoxPreference
+            android:defaultValue="false"
+            android:key="bt_send_to_bt_server"
+            android:title="Send to Bluetooth server" />-->
+
+        <!--<CheckBoxPreference
+            android:defaultValue="false"
+            android:key="bt_send_to_linked_sheet"
+            android:title="Send to linked spreadsheet" />-->
+
+    </PreferenceCategory>
+
+    <!-- These are examples from the tutorial -->
+    <!-- NOTE: EditTextPreference accepts EditText attributes. -->
+    <!-- NOTE: EditTextPreference's summary should be set to its value by the activity code. -->
+    <!--<EditTextPreference
+        android:capitalize="words"
+        android:defaultValue="@string/pref_default_display_name"
+        android:inputType="textCapWords"
+        android:key="example_text"
+        android:maxLines="1"
+        android:selectAllOnFocus="true"
+        android:singleLine="true"
+        android:title="@string/pref_title_display_name" />-->
+
+    <!-- NOTE: Hide buttons to simplify the UI. Users can touch outside the dialog to
+         dismiss it. -->
+    <!-- NOTE: ListPreference's summary should be set to its value by the activity code. -->
+    <!--<ListPreference
+        android:defaultValue="-1"
+        android:entries="@array/pref_example_list_titles"
+        android:entryValues="@array/pref_example_list_values"
+        android:key="example_list"
+        android:negativeButtonText="@null"
+        android:positiveButtonText="@null"
+        android:title="@string/pref_title_add_friends_to_messages" />-->
+
+</PreferenceScreen>
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision )
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:openDrawer="start">
+
+    <FrameLayout
+        android:id="@+id/fragment"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/nav_header"
+        app:itemIconTint="@color/drawer_icon"
+        app:itemTextColor="@color/drawer_text"
+        app:menu="@menu/drawer_menu" />
+
+</android.support.v4.widget.DrawerLayout>
Index: app/src/main/res/layout/nav_header.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/nav_header.xml	(revision )
+++ app/src/main/res/layout/nav_header.xml	(revision )
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="@dimen/nav_header_height"
+    android:background="@drawable/header_gradient"
+    android:gravity="bottom"
+    android:orientation="vertical"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark">
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:src="@mipmap/ic_launcher" />
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:text="@string/app_name"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+        android:id="@+id/textView" />
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginRight="4dp"
+            android:text="@string/app_version"
+            android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="4dp"
+            android:text="@string/build_variant" />
+
+    </LinearLayout>
+
+</LinearLayout>
Index: app/src/main/res/layout/team_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/team_view.xml	(revision )
+++ app/src/main/res/layout/team_view.xml	(revision )
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="72dp"
+    android:background="?attr/selectableItemBackground">
+
+    <ImageView
+        android:id="@+id/team_icon"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_gravity="center_vertical"
+        android:paddingLeft="16dp"
+        android:src="@drawable/ic_people_white_24dp"/>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:paddingLeft="72dp"
+        android:paddingRight="16dp">
+
+        <TextView
+            android:id="@+id/team_teamNumber"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingTop="15dp"
+            android:text="Team 980"
+            android:textColor="@android:color/white"
+            android:textSize="16sp" />
+
+        <TextView
+            android:id="@+id/team_descriptor"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/team_teamNumber"
+            android:text="Description"
+            android:textSize="14sp" />
+
+    </RelativeLayout>
+
+    <ImageButton
+        android:id="@+id/team_expandButton"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_gravity="right|center_vertical"
+        android:paddingRight="16dp"
+        android:background="#00000000"
+        android:src="@drawable/ic_expand_more_white_24dp" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/match/SummaryFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/match/SummaryFragment.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/match/SummaryFragment.java	(revision )
@@ -0,0 +1,42 @@
+package com.team980.thunderscout.match;
+
+
+import android.content.Context;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.CheckBox;
+import android.widget.Spinner;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.data.enumeration.ClimbingStats;
+
+public class SummaryFragment extends Fragment {
+
+    private ScoutingFlowActivity scoutingFlowActivity;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_summary, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+
+        scoutingFlowActivity = (ScoutingFlowActivity) getActivity();
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+    }
+}
Index: app/src/main/res/drawable/header_gradient.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/header_gradient.xml	(revision )
+++ app/src/main/res/drawable/header_gradient.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <gradient
+        android:angle="-45"
+        android:startColor="@color/primary"
+        android:endColor="@color/primary_dark" />
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/bluetooth/ServerConnectionTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/bluetooth/ServerConnectionTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/bluetooth/ServerConnectionTask.java	(revision )
@@ -0,0 +1,129 @@
+package com.team980.thunderscout.bluetooth;
+
+import android.bluetooth.BluetoothSocket;
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.os.AsyncTask;
+import android.preference.PreferenceManager;
+import android.util.Log;
+import android.widget.Toast;
+
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.data.task.ScoutDataWriteTask;
+import com.team980.thunderscout.feed.EntryOperationWrapper;
+import com.team980.thunderscout.feed.EntryOperationWrapper.EntryOperationStatus;
+import com.team980.thunderscout.feed.EntryOperationWrapper.EntryOperationType;
+import com.team980.thunderscout.feed.FeedEntry;
+import com.team980.thunderscout.feed.task.FeedDataWriteTask;
+import com.team980.thunderscout.util.TSNotificationBuilder;
+
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+
+public class ServerConnectionTask extends AsyncTask<Void, Integer, ScoutData> {
+
+    private final BluetoothSocket mmSocket;
+
+    private Context context;
+
+    private TSNotificationBuilder notificationManager;
+
+    public ServerConnectionTask(BluetoothSocket socket, Context context) {
+        mmSocket = socket;
+
+        this.context = context;
+
+        notificationManager = TSNotificationBuilder.getInstance(context);
+    }
+
+    @Override
+    protected void onPreExecute() {
+        //Runs on UI thread before execution
+        super.onPreExecute();
+    }
+
+    @Override
+    protected ScoutData doInBackground(Void[] params) {
+        int notificationId = notificationManager.showBtTransferInProgress(mmSocket.getRemoteDevice().getName(), true);
+
+        ObjectInputStream fromScoutStream;
+        ObjectOutputStream toScoutStream;
+
+        try {
+            toScoutStream = new ObjectOutputStream(mmSocket.getOutputStream());
+            toScoutStream.flush();
+            fromScoutStream = new ObjectInputStream(mmSocket.getInputStream());
+        } catch (IOException e) {
+            e.printStackTrace();
+            notificationManager.showBtTransferError(mmSocket.getRemoteDevice().getName(),
+                    notificationId);
+            return null;
+        }
+
+        //TODO version check
+        ScoutData data = null;
+        try {
+            data = (ScoutData) fromScoutStream.readObject();
+
+        } catch (IOException | ClassNotFoundException e) {
+            e.printStackTrace();
+            notificationManager.showBtTransferError(mmSocket.getRemoteDevice().getName(),
+                    notificationId);
+            return null;
+        }
+
+        try {
+            fromScoutStream.close();
+            toScoutStream.close();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+        notificationManager.showBtTransferFinished(notificationId);
+        return data;
+    }
+
+    @Override
+    protected void onProgressUpdate(Integer[] values) {
+        //Runs on UI thread when publishProgress() is called
+        super.onProgressUpdate(values);
+
+        Toast.makeText(context, "Inserted into DB: Row " + values[0], Toast.LENGTH_LONG).show();
+    }
+
+    @Override
+    protected void onPostExecute(ScoutData o) {
+        super.onPostExecute(o);
+
+        if (o != null) {
+            SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+
+            FeedEntry feedEntry = new FeedEntry(FeedEntry.EntryType.SERVER_RECEIVED_MATCH, System.currentTimeMillis());
+
+            if (prefs.getBoolean("bt_send_to_local_storage", true)) {
+                //Put the fetched ScoutData in the local database
+                ScoutDataWriteTask writeTask = new ScoutDataWriteTask(o, context);
+                writeTask.execute();
+
+                feedEntry.addOperation(new EntryOperationWrapper(EntryOperationType.SAVED_TO_LOCAL_STORAGE,
+                        EntryOperationStatus.OPERATION_SUCCESSFUL)); //TODO determine this based on callback?
+            }
+
+            if (prefs.getBoolean("bt_send_to_bt_server", false)) {
+                //TODO is this a really good idea??
+            }
+
+            /*if (prefs.getBoolean("bt_send_to_linked_sheet", false)) {
+                SheetsUpdateTask task = new SheetsUpdateTask(context);
+                task.execute(o);
+            }*/
+
+            FeedDataWriteTask feedDataWriteTask = new FeedDataWriteTask(feedEntry, context);
+            feedDataWriteTask.execute();
+        } else {
+            Log.d("ServerConnectionTask", "Failed to start FeedDataWriteTask!");
+        }
+    }
+
+}
Index: app/src/main/res/color/drawer_icon.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/color/drawer_icon.xml	(revision )
+++ app/src/main/res/color/drawer_icon.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@color/accent" android:state_checked="true" />
+    <item android:color="#a0ffffff" />
+</selector>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/feed/task/FeedDataWriteTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/feed/task/FeedDataWriteTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/feed/task/FeedDataWriteTask.java	(revision )
@@ -0,0 +1,76 @@
+package com.team980.thunderscout.feed.task;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.Intent;
+import android.database.sqlite.SQLiteDatabase;
+import android.os.AsyncTask;
+import android.support.v4.content.LocalBroadcastManager;
+import android.util.Log;
+
+import com.team980.thunderscout.ThunderScout;
+import com.team980.thunderscout.feed.FeedDataContract;
+import com.team980.thunderscout.feed.FeedDataDbHelper;
+import com.team980.thunderscout.feed.FeedEntry;
+import com.team980.thunderscout.feed.HomeFragment;
+
+public class FeedDataWriteTask extends AsyncTask<Void, Integer, Void> {
+
+    private final FeedEntry entry;
+    private Context context;
+
+    private LocalBroadcastManager localBroadcastManager;
+
+    public FeedDataWriteTask(FeedEntry entry, Context context) {
+        this.entry = entry;
+
+        this.context = context;
+
+        localBroadcastManager = LocalBroadcastManager.getInstance(context);
+    }
+
+    @Override
+    protected void onPreExecute() {
+        //Runs on UI thread before execution
+        super.onPreExecute();
+    }
+
+    @Override
+    protected Void doInBackground(Void[] params) {
+
+        // Gets the data repository in write mode
+        SQLiteDatabase db = new FeedDataDbHelper(context).getWritableDatabase();
+
+        // Create a new map of values, where column names are the keys
+        ContentValues values = new ContentValues();
+
+        values.put(FeedDataContract.FeedDataTable.COLUMN_NAME_ENTRY_TYPE, entry.getType().name());
+        values.put(FeedDataContract.FeedDataTable.COLUMN_NAME_ENTRY_DATE, entry.getTimestamp().getTime());
+
+        byte[] operations = ThunderScout.serializeObject(entry.getChildItemList());
+        values.put(FeedDataContract.FeedDataTable.COLUMN_NAME_ENTRY_OPERATIONS, operations);
+
+        try {
+            // Insert the new row
+            db.insertOrThrow(
+                    FeedDataContract.FeedDataTable.TABLE_NAME,
+                    null,
+                    values);
+        } catch (final Exception e) {
+            e.printStackTrace();
+        }
+
+        db.close();
+        return null;
+    }
+
+    @Override
+    protected void onPostExecute(Void o) {
+        //Runs on UI thread after execution
+        super.onPostExecute(o);
+
+        Intent intent = new Intent(HomeFragment.ACTION_REFRESH_VIEW_PAGER);
+        Log.d("PINGTEST", "intent");
+        localBroadcastManager.sendBroadcast(intent); //notify the UI thread so we can refresh the ViewPager automatically :D
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/preferences/BluetoothDevicePreference.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/preferences/BluetoothDevicePreference.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/preferences/BluetoothDevicePreference.java	(revision )
@@ -0,0 +1,35 @@
+package com.team980.thunderscout.preferences;
+
+import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.BluetoothDevice;
+import android.content.Context;
+import android.preference.ListPreference;
+import android.util.AttributeSet;
+
+import java.util.Set;
+
+@Deprecated
+public class BluetoothDevicePreference extends ListPreference {
+
+    public BluetoothDevicePreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+
+        BluetoothAdapter bta = BluetoothAdapter.getDefaultAdapter();
+        Set<BluetoothDevice> pairedDevices = bta.getBondedDevices();
+        CharSequence[] entries = new CharSequence[pairedDevices.size()];
+        CharSequence[] entryValues = new CharSequence[pairedDevices.size()];
+        int i = 0;
+        for (BluetoothDevice dev : pairedDevices) {
+            entries[i] = dev.getName();
+            entryValues[i] = dev.getAddress();
+            i++;
+        }
+        setEntries(entries);
+        setEntryValues(entryValues);
+    }
+
+    public BluetoothDevicePreference(Context context) {
+        this(context, null);
+    }
+
+}
Index: app/src/main/java/com/team980/thunderscout/ThunderScout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/ThunderScout.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/ThunderScout.java	(revision )
@@ -0,0 +1,125 @@
+package com.team980.thunderscout;
+
+import android.app.Application;
+import android.content.ComponentName;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Build;
+import android.preference.PreferenceManager;
+import android.service.quicksettings.TileService;
+import android.support.annotation.WorkerThread;
+import android.util.Log;
+
+import com.team980.thunderscout.bluetooth.BluetoothQuickTileService;
+import com.team980.thunderscout.bluetooth.BluetoothServerService;
+
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutput;
+import java.io.ObjectOutputStream;
+
+public class ThunderScout extends Application implements SharedPreferences.OnSharedPreferenceChangeListener {
+
+    @WorkerThread
+    public static byte[] serializeObject(Object o) {
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+
+        try {
+            ObjectOutput out = new ObjectOutputStream(bos);
+            out.writeObject(o);
+            out.close();
+
+            // Get the bytes of the serialized object
+            byte[] buf = bos.toByteArray();
+
+            return buf;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    @WorkerThread
+    public static Object deserializeObject(byte[] b) {
+        try {
+            ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(b));
+            Object object = in.readObject();
+            in.close();
+
+            return object;
+        } catch (ClassNotFoundException | IOException e) {
+            e.printStackTrace();
+            return null;
+        }
+
+    }
+
+    public static boolean isInteger(String str) { //TODO use this for all the int checks
+        if (str == null) {
+            return false;
+        }
+        int length = str.length();
+        if (length == 0) {
+            return false;
+        }
+        int i = 0;
+        if (str.charAt(0) == '-') {
+            if (length == 1) {
+                return false;
+            }
+            i = 1;
+        }
+        for (; i < length; i++) {
+            char c = str.charAt(i);
+            if (c < '0' || c > '9') {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    @Override
+    public void onCreate() { //This isn't why loading is slow
+        super.onCreate();
+        Log.d("THUNDERSCOUT", "Application.onCreate");
+
+        Log.d("THUNDERSCOUT", "Fetching shared preferences");
+        SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);
+        boolean runServer = sharedPref.getBoolean("enable_bt_server", false);
+
+        if (runServer) { //TODO I must be launching multiple instances?
+            Log.d("THUNDERSCOUT", "Starting service...");
+            startService(new Intent(this, BluetoothServerService.class));
+        }
+
+        Log.d("THUNDERSCOUT", "Registering onPreferenceChangeListener");
+        sharedPref.registerOnSharedPreferenceChangeListener(this);
+
+        Log.d("THUNDERSCOUT", "Finished onCreate");
+
+    }
+
+    @Override
+    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
+        if (key.equals("enable_bt_server")) {
+            Boolean isServer = sharedPreferences.getBoolean("enable_bt_server", false);
+
+            Log.d("PREFLISTEN", "Server preference changed");
+
+            if (isServer) {
+                Log.d("PREFLISTEN", "enabling BT server");
+                startService(new Intent(this, BluetoothServerService.class));
+            } else {
+                Log.d("PREFLISTEN", "disabling BT server");
+                stopService(new Intent(this, BluetoothServerService.class));
+            }
+
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
+                Log.d("TILETRACE", "requesting tile listening state");
+                TileService.requestListeningState(this, new ComponentName(this, BluetoothQuickTileService.class));
+            }
+        }
+    }
+}
Index: app/src/main/res/drawable/ic_cloud_upload_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_cloud_upload_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_cloud_upload_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M19.35,10.04C18.67,6.59 15.64,4 12,4 9.11,4 6.6,5.64 5.35,8.04 2.34,8.36 0,10.91 0,14c0,3.31 2.69,6 6,6h13c2.76,0 5,-2.24 5,-5 0,-2.64 -2.05,-4.78 -4.65,-4.96zM14,13v4h-4v-4H7l5,-5 5,5h-3z"/>
+</vector>
Index: app/src/main/res/drawable/ic_settings_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_settings_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_settings_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M19.43,12.98c0.04,-0.32 0.07,-0.64 0.07,-0.98s-0.03,-0.66 -0.07,-0.98l2.11,-1.65c0.19,-0.15 0.24,-0.42 0.12,-0.64l-2,-3.46c-0.12,-0.22 -0.39,-0.3 -0.61,-0.22l-2.49,1c-0.52,-0.4 -1.08,-0.73 -1.69,-0.98l-0.38,-2.65C14.46,2.18 14.25,2 14,2h-4c-0.25,0 -0.46,0.18 -0.49,0.42l-0.38,2.65c-0.61,0.25 -1.17,0.59 -1.69,0.98l-2.49,-1c-0.23,-0.09 -0.49,0 -0.61,0.22l-2,3.46c-0.13,0.22 -0.07,0.49 0.12,0.64l2.11,1.65c-0.04,0.32 -0.07,0.65 -0.07,0.98s0.03,0.66 0.07,0.98l-2.11,1.65c-0.19,0.15 -0.24,0.42 -0.12,0.64l2,3.46c0.12,0.22 0.39,0.3 0.61,0.22l2.49,-1c0.52,0.4 1.08,0.73 1.69,0.98l0.38,2.65c0.03,0.24 0.24,0.42 0.49,0.42h4c0.25,0 0.46,-0.18 0.49,-0.42l0.38,-2.65c0.61,-0.25 1.17,-0.59 1.69,-0.98l2.49,1c0.23,0.09 0.49,0 0.61,-0.22l2,-3.46c0.12,-0.22 0.07,-0.49 -0.12,-0.64l-2.11,-1.65zM12,15.5c-1.93,0 -3.5,-1.57 -3.5,-3.5s1.57,-3.5 3.5,-3.5 3.5,1.57 3.5,3.5 -1.57,3.5 -3.5,3.5z"/>
+</vector>
Index: app/src/main/res/layout/layout_info_scout_auto.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_info_scout_auto.xml	(revision )
+++ app/src/main/res/layout/layout_info_scout_auto.xml	(revision )
@@ -0,0 +1,230 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    android:elevation="2dp"
+    app:cardCornerRadius="2dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="16dp">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:text="Auto"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textSize="25sp" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating_light"
+            android:orientation="vertical"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginBottom="10dp"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Delivered "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+
+                <TextView
+                    android:id="@+id/info_match_autoGearsDelivered"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="#"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="25sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=" gears"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating"
+            android:orientation="vertical"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginBottom="10dp"
+                android:orientation="vertical">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Fuel Dumped in Low Goal "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center">
+
+                    <TextView
+                        android:id="@+id/info_match_autoLowGoalDumpAmount"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="left|center_vertical"
+                        android:layout_marginRight="8dp"
+                        android:text="NONE"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                        android:textSize="25sp" />
+
+                    <TextView
+                        android:id="@+id/info_match_autoLowGoalNumericalDumpAmount"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="right|center_vertical"
+                        android:text="(0 - 0)"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                        android:textSize="20sp" />
+
+                </LinearLayout>
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:background="@color/background_floating_light"
+            android:orientation="horizontal"
+            android:paddingBottom="8dp"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <FrameLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:paddingLeft="40dp"
+                android:paddingRight="40dp">
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/info_match_autoHighGoals"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="#"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                        android:textSize="30sp" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="High Goals"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                        android:textSize="15sp" />
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="right"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/info_match_autoMissedHighGoals"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="#"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Display2"
+                        android:textSize="30sp" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="Missed Shots"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Display1"
+                        android:textSize="15sp" />
+
+                </LinearLayout>
+
+            </FrameLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating"
+            android:orientation="vertical"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginBottom="10dp"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="CROSSED "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:id="@+id/info_match_autoCrossedBaseline"
+                    android:textSize="25sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="the baseline"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:id="@+id/info_match_autoCrossedBaselineAction"
+                    android:textSize="20sp" />
+            </LinearLayout>
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+</android.support.v7.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/layout/feed_entry.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/feed_entry.xml	(revision )
+++ app/src/main/res/layout/feed_entry.xml	(revision )
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="72dp"
+    android:background="?attr/selectableItemBackground">
+
+    <ImageView
+        android:id="@+id/entry_icon"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_gravity="center_vertical"
+        android:paddingLeft="16dp"
+        android:src="@drawable/ic_send_white_24dp"/>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:paddingLeft="72dp"
+        android:paddingRight="16dp">
+
+        <TextView
+            android:id="@+id/entry_type"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingTop="15dp"
+            android:text="Entry Type"
+            android:textColor="@android:color/white"
+            android:textSize="16sp" />
+
+        <TextView
+            android:id="@+id/entry_timestamp"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/entry_type"
+            android:text="Timestamp"
+            android:textSize="14sp" />
+
+    </RelativeLayout>
+
+    <ImageButton
+        android:id="@+id/entry_expandButton"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_gravity="right|center_vertical"
+        android:paddingRight="16dp"
+        android:background="#00000000"
+        android:src="@drawable/ic_expand_more_white_24dp" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/feed/EntryOperationWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/feed/EntryOperationWrapper.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/feed/EntryOperationWrapper.java	(revision )
@@ -0,0 +1,89 @@
+package com.team980.thunderscout.feed;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.match.ScoutingFlowActivity;
+
+import java.io.Serializable;
+
+/**
+ * A wrapper for an operation
+ * Required for ExpandableRecyclerView ;/
+ */
+public class EntryOperationWrapper implements Serializable {
+    private EntryOperationType type;
+    private EntryOperationStatus status;
+
+    /**
+     * Serialization UID
+     */
+    private static final long serialVersionUID = 1; //should never need to change this
+
+    public EntryOperationWrapper(EntryOperationType t, EntryOperationStatus s) {
+        type = t;
+        status = s;
+    }
+
+    public EntryOperationType getType() {
+        return type;
+    }
+
+    public EntryOperationStatus getStatus() {
+        return status;
+    }
+
+    /**
+     * The type of an operation contained in an entry
+     */
+    public enum EntryOperationType {
+        SAVED_TO_LOCAL_STORAGE("Data saved to local storage", R.drawable.ic_save_white_24dp), //saved to local storage
+        SENT_TO_BLUETOOTH_SERVER("Data sent to Bluetooth server", R.drawable.ic_bluetooth_searching_white_24dp); //sent via Bluetooth server
+
+        private String name;
+        private int icon;
+
+        EntryOperationType(String s, int i) {
+            name = s;
+            icon = i;
+        }
+
+        @Override
+        public String toString() {
+            return name;
+        }
+
+        public static EntryOperationType fromOperationId(String operationId) {
+            switch (operationId) {
+                case ScoutingFlowActivity.OPERATION_SAVE_THIS_DEVICE:
+                    return EntryOperationType.SAVED_TO_LOCAL_STORAGE;
+                case ScoutingFlowActivity.OPERATION_SEND_BLUETOOTH:
+                    return EntryOperationType.SENT_TO_BLUETOOTH_SERVER;
+                default:
+                    return null;
+            }
+        }
+
+        public int getIcon() {
+            return icon;
+        }
+    }
+
+    /**
+     * The status of an operation contained in an entry
+     */
+    public enum EntryOperationStatus {
+        OPERATION_SUCCESSFUL("Operation successful"), //success
+        OPERATION_FAILED("Operation failed"), //fail
+        OPERATION_ABORTED("Operation failed and aborted by user"); //user cancelled operation after failure
+
+        private String name;
+
+        EntryOperationStatus(String s) {
+            name = s;
+        }
+
+        @Override
+        public String toString() {
+            return name;
+        }
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/data/ScoutData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/ScoutData.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/ScoutData.java	(revision )
@@ -0,0 +1,261 @@
+package com.team980.thunderscout.data;
+
+import com.team980.thunderscout.data.enumeration.AllianceColor;
+import com.team980.thunderscout.data.enumeration.ClimbingStats;
+import com.team980.thunderscout.data.enumeration.FuelDumpAmount;
+
+import java.io.Serializable;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+
+/**
+ * Implements data for one team from one match.
+ */
+public class ScoutData implements Serializable {
+
+    /**
+     * ScoutData Version 2017-2
+     *
+     * 2017-2: Serializable ArrayList for dumps in teleop
+     * 2017-1: First 2017 spec
+     */
+    private static final long serialVersionUID = 4;
+
+    public static final String SOURCE_LOCAL_DEVICE = "This device";
+
+    // INIT
+    private String teamNumber;
+    private int matchNumber;
+    private AllianceColor allianceColor;
+
+    private long dateAdded;
+    private String dataSource;
+
+    // AUTO
+    private int autoGearsDelivered;
+    private FuelDumpAmount autoLowGoalDumpAmount;
+    private int autoHighGoals;
+    private int autoMissedHighGoals;
+    private boolean crossedBaseline;
+
+    // TELEOP
+    private int teleopGearsDelivered;
+    private ArrayList<FuelDumpAmount> teleopLowGoalDumps; //average # of fuel
+    private int teleopHighGoals;
+    private int teleopMissedHighGoals;
+    private ClimbingStats climbingStats;
+
+    // SUMMARY
+    private String troubleWith;
+    private String comments;
+
+    public ScoutData() {
+        //default values
+        autoLowGoalDumpAmount = FuelDumpAmount.NONE;
+        teleopLowGoalDumps = new ArrayList<>();
+        climbingStats = ClimbingStats.DID_NOT_CLIMB;
+    }
+
+    /**
+     * Copy constructor
+     */
+    public ScoutData(ScoutData other) {
+        //Init
+        setTeamNumber(other.getTeamNumber());
+        setMatchNumber(other.getMatchNumber());
+        setAllianceColor(other.getAllianceColor());
+        setDateAdded(other.getDateAdded());
+        setDataSource(other.getDataSource());
+
+        //Auto
+        setAutoGearsDelivered(other.getAutoGearsDelivered());
+        setAutoLowGoalDumpAmount(other.getAutoLowGoalDumpAmount());
+        setAutoHighGoals(other.getAutoHighGoals());
+        setAutoMissedHighGoals(other.getAutoMissedHighGoals());
+        setCrossedBaseline(other.hasCrossedBaseline());
+
+        //Teleop
+        setTeleopGearsDelivered(other.getTeleopGearsDelivered());
+        teleopLowGoalDumps = other.getTeleopLowGoalDumps();
+        setTeleopHighGoals(other.getTeleopHighGoals());
+        setTeleopMissedHighGoals(other.getTeleopMissedHighGoals());
+        setClimbingStats(other.getClimbingStats());
+
+        //Summary
+        setTroubleWith(other.getTroubleWith());
+        setComments(other.getComments());
+    }
+
+    // --- INIT ---
+
+    public String getTeamNumber() {
+        return teamNumber;
+    }
+
+    public void setTeamNumber(String teamNumber) {
+        this.teamNumber = teamNumber;
+    }
+
+    public int getMatchNumber() {
+        return matchNumber;
+    }
+
+    public void setMatchNumber(int matchNumber) {
+        this.matchNumber = matchNumber;
+    }
+
+    public AllianceColor getAllianceColor() {
+        return allianceColor;
+    }
+
+    public void setAllianceColor(AllianceColor allianceColor) {
+        this.allianceColor = allianceColor;
+    }
+
+    public long getDateAdded() {
+        return dateAdded;
+    }
+
+    public void setDateAdded(long d) {
+        dateAdded = d;
+    }
+
+    public String getDataSource() {
+        return dataSource;
+    }
+
+    public void setDataSource(String d) {
+        dataSource = d;
+    }
+
+    // --- AUTO ---
+
+    public int getAutoGearsDelivered() {
+        return autoGearsDelivered;
+    }
+
+    public void setAutoGearsDelivered(int autoGearsDelivered) {
+        this.autoGearsDelivered = autoGearsDelivered;
+    }
+
+    public FuelDumpAmount getAutoLowGoalDumpAmount() {
+        return autoLowGoalDumpAmount;
+    }
+
+    public void setAutoLowGoalDumpAmount(FuelDumpAmount autoLowGoalDumpAmount) {
+        this.autoLowGoalDumpAmount = autoLowGoalDumpAmount;
+    }
+
+    public int getAutoHighGoals() {
+        return autoHighGoals;
+    }
+
+    public void setAutoHighGoals(int autoHighGoals) {
+        this.autoHighGoals = autoHighGoals;
+    }
+
+    public int getAutoMissedHighGoals() {
+        return autoMissedHighGoals;
+    }
+
+    public void setAutoMissedHighGoals(int autoMissedHighGoals) {
+        this.autoMissedHighGoals = autoMissedHighGoals;
+    }
+
+    public boolean hasCrossedBaseline() {
+        return crossedBaseline;
+    }
+
+    public void setCrossedBaseline(boolean crossedBaseline) {
+        this.crossedBaseline = crossedBaseline;
+    }
+
+    // --- TELEOP ---
+
+    public int getTeleopGearsDelivered() {
+        return teleopGearsDelivered;
+    }
+
+    public void setTeleopGearsDelivered(int teleopGearsDelivered) {
+        this.teleopGearsDelivered = teleopGearsDelivered;
+    }
+
+    public ArrayList<FuelDumpAmount> getTeleopLowGoalDumps() {
+        return teleopLowGoalDumps;
+    }
+
+    public int getTeleopHighGoals() {
+        return teleopHighGoals;
+    }
+
+    public void setTeleopHighGoals(int teleopHighGoals) {
+        this.teleopHighGoals = teleopHighGoals;
+    }
+
+    public int getTeleopMissedHighGoals() {
+        return teleopMissedHighGoals;
+    }
+
+    public void setTeleopMissedHighGoals(int teleopMissedHighGoals) {
+        this.teleopMissedHighGoals = teleopMissedHighGoals;
+    }
+
+    public ClimbingStats getClimbingStats() {
+        return climbingStats;
+    }
+
+    public void setClimbingStats(ClimbingStats climbingStats) {
+        this.climbingStats = climbingStats;
+    }
+
+    // --- SUMMARY ---
+
+    public String getTroubleWith() {
+        return troubleWith;
+    }
+
+    public void setTroubleWith(String troubleWith) {
+        this.troubleWith = troubleWith;
+    }
+
+    public String getComments() {
+        return comments;
+    }
+
+    public void setComments(String comments) {
+        this.comments = comments;
+    }
+
+    // --- OTHER METHODS ---
+
+    public String[] toStringArray() {
+        ArrayList<String> fieldList = new ArrayList<>();
+
+        //Init
+        fieldList.add(getTeamNumber());
+        fieldList.add(String.valueOf(getMatchNumber()));
+        fieldList.add(getAllianceColor().name());
+        fieldList.add(String.valueOf(getDateAdded()));
+        fieldList.add(getDataSource());
+
+        //Auto
+        fieldList.add(String.valueOf(getAutoGearsDelivered()));
+        fieldList.add(getAutoLowGoalDumpAmount().name());
+        fieldList.add(String.valueOf(getAutoHighGoals()));
+        fieldList.add(String.valueOf(getAutoMissedHighGoals()));
+        fieldList.add(String.valueOf(hasCrossedBaseline()));
+
+        //Teleop
+        fieldList.add(String.valueOf(getTeleopGearsDelivered()));
+        fieldList.add(getTeleopLowGoalDumps().toString());
+        fieldList.add(String.valueOf(getTeleopHighGoals()));
+        fieldList.add(String.valueOf(getTeleopMissedHighGoals()));
+        fieldList.add(getClimbingStats().name());
+
+        //Summary
+        fieldList.add(getTroubleWith());
+        fieldList.add(getComments());
+
+        return (String[]) fieldList.toArray(new String[fieldList.size()]);
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/util/CounterCompoundView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/util/CounterCompoundView.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/util/CounterCompoundView.java	(revision )
@@ -0,0 +1,169 @@
+package com.team980.thunderscout.util;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.util.AttributeSet;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.FrameLayout;
+import android.widget.TextView;
+
+import com.team980.thunderscout.R;
+
+public class CounterCompoundView extends FrameLayout implements View.OnClickListener {
+
+    protected LayoutInflater inflater;
+    protected float max;
+    protected float min;
+    protected float count;
+    float value;
+
+    public CounterCompoundView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+
+        inflater = (LayoutInflater) context.getSystemService
+                (Context.LAYOUT_INFLATER_SERVICE);
+
+        inflater.inflate(R.layout.view_counter, this);
+
+        findViewById(R.id.plus).setOnClickListener(this);
+        findViewById(R.id.minus).setOnClickListener(this);
+
+        TypedArray a = context.obtainStyledAttributes(attrs,
+                R.styleable.CounterCompoundView, 0, 0);
+        max = a.getFloat(R.styleable.CounterCompoundView_max, 100); //Default max: 100
+        min = a.getFloat(R.styleable.CounterCompoundView_min, 0);
+        count = a.getFloat(R.styleable.CounterCompoundView_count, 1);
+
+        a.recycle();
+
+        String text;
+
+        if (Float.compare(value, Math.round(value)) != 0) {
+            text = Float.toString(value);
+        } else {
+            text = Integer.toString((int) value);
+        }
+
+        ((TextView) findViewById(R.id.value)).setText(text);
+    }
+
+
+    @Override
+    public void onClick(View v) {
+
+        if (v.getId() == R.id.plus) {
+
+            value += count;
+
+            if (value > max)
+                value = max;
+
+        } else if (v.getId() == R.id.minus) {
+
+            value -= count;
+
+            if (value < min)
+                value = min;
+        }
+
+        String text;
+
+        if (Float.compare(value, Math.round(value)) != 0) {
+            text = Float.toString(value);
+        } else {
+            text = Integer.toString((int) value);
+        }
+
+        ((TextView) findViewById(R.id.value)).setText(text);
+    }
+
+    public float getValue() {
+        return value;
+    }
+
+    @Override
+    public Parcelable onSaveInstanceState() {
+        //begin boilerplate code that allows parent classes to save state
+        Parcelable superState = super.onSaveInstanceState();
+
+        SavedState ss = new SavedState(superState);
+        //end
+
+        ss.max = this.max;
+        ss.min = this.min;
+        ss.count = this.count;
+        ss.value = this.value;
+
+        return ss;
+    }
+
+    @Override
+    public void onRestoreInstanceState(Parcelable state) {
+        //begin boilerplate code so parent classes can restore state
+        if(!(state instanceof SavedState)) {
+            super.onRestoreInstanceState(state);
+            return;
+        }
+
+        SavedState ss = (SavedState)state;
+        super.onRestoreInstanceState(ss.getSuperState());
+        //end
+
+        this.max = ss.max;
+        this.min = ss.min;
+        this.count = ss.count;
+        this.value = ss.value;
+
+        String text;
+
+        if (Float.compare(value, Math.round(value)) != 0) {
+            text = Float.toString(value);
+        } else {
+            text = Integer.toString((int) value);
+        }
+
+        ((TextView) findViewById(R.id.value)).setText(text);
+    }
+
+    static class SavedState extends BaseSavedState {
+        float max;
+        float min;
+        float count;
+        float value;
+
+        SavedState(Parcelable superState) {
+            super(superState);
+        }
+
+        private SavedState(Parcel in) {
+            super(in);
+            this.max = in.readFloat();
+            this.min = in.readFloat();
+            this.count = in.readFloat();
+            this.value = in.readFloat();
+        }
+
+        @Override
+        public void writeToParcel(Parcel out, int flags) {
+            super.writeToParcel(out, flags);
+            out.writeFloat(this.max);
+            out.writeFloat(this.min);
+            out.writeFloat(this.count);
+            out.writeFloat(this.value);
+        }
+
+        //required field that makes Parcelables from a Parcel
+        public static final Parcelable.Creator<SavedState> CREATOR =
+                new Parcelable.Creator<SavedState>() {
+                    public SavedState createFromParcel(Parcel in) {
+                        return new SavedState(in);
+                    }
+                    public SavedState[] newArray(int size) {
+                        return new SavedState[size];
+                    }
+                };
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/ic_assignment_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_assignment_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_assignment_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M19,3h-4.18C14.4,1.84 13.3,1 12,1c-1.3,0 -2.4,0.84 -2.82,2L5,3c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2L21,5c0,-1.1 -0.9,-2 -2,-2zM12,3c0.55,0 1,0.45 1,1s-0.45,1 -1,1 -1,-0.45 -1,-1 0.45,-1 1,-1zM14,17L7,17v-2h7v2zM17,13L7,13v-2h10v2zM17,9L7,9L7,7h10v2z"/>
+</vector>
Index: app/src/main/res/layout/layout_info_scout_teleop.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_info_scout_teleop.xml	(revision )
+++ app/src/main/res/layout/layout_info_scout_teleop.xml	(revision )
@@ -0,0 +1,223 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    android:elevation="2dp"
+    app:cardCornerRadius="2dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="16dp">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:text="Teleop"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textSize="25sp" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating_light"
+            android:orientation="vertical"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginBottom="10dp"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Delivered "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+
+                <TextView
+                    android:id="@+id/info_match_teleopGearsDelivered"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="#"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="25sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=" gears"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating"
+            android:orientation="vertical"
+            android:paddingBottom="8dp"
+            android:paddingTop="8dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Made "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+
+                <TextView
+                    android:id="@+id/info_match_teleopNumberOfLowGoalFuelDumps"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="#"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:textSize="25sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text=" fuel dumps"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+            </LinearLayout>
+
+            <android.support.v7.widget.RecyclerView
+                android:id="@+id/info_match_teleopListFuelDumps"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"/>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:background="@color/background_floating_light"
+            android:orientation="horizontal"
+            android:paddingBottom="8dp"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <FrameLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:paddingLeft="40dp"
+                android:paddingRight="40dp">
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/info_match_teleopHighGoals"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="#"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                        android:textSize="30sp" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="High Goals"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                        android:textSize="15sp" />
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="right"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/info_match_teleopMissedHighGoals"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="#"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Display2"
+                        android:textSize="30sp" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center"
+                        android:text="Missed Shots"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Display1"
+                        android:textSize="15sp" />
+
+                </LinearLayout>
+
+            </FrameLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/background_floating"
+            android:orientation="vertical"
+            android:paddingLeft="24dp"
+            android:paddingRight="24dp"
+            android:paddingTop="8dp">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginBottom="10dp"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="PRESSED "
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+                    android:id="@+id/info_match_teleopClimbingStats"
+                    android:textSize="25sp" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="the touchpad"
+                    android:id="@+id/info_match_teleopClimbingStatsAction"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                    android:textSize="20sp" />
+            </LinearLayout>
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+</android.support.v7.widget.CardView>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/feed/ActivityFeedAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/feed/ActivityFeedAdapter.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/feed/ActivityFeedAdapter.java	(revision )
@@ -0,0 +1,163 @@
+package com.team980.thunderscout.feed;
+
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffColorFilter;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageButton;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.bignerdranch.expandablerecyclerview.Adapter.ExpandableRecyclerAdapter;
+import com.bignerdranch.expandablerecyclerview.Model.ParentListItem;
+import com.bignerdranch.expandablerecyclerview.ViewHolder.ChildViewHolder;
+import com.bignerdranch.expandablerecyclerview.ViewHolder.ParentViewHolder;
+import com.team980.thunderscout.R;
+
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Collections;
+
+public class ActivityFeedAdapter extends ExpandableRecyclerAdapter<ActivityFeedAdapter.FeedEntryViewHolder, ActivityFeedAdapter.OperationViewHolder> {
+
+    private ArrayList<FeedEntry> feedEntries;
+
+    public ActivityFeedAdapter(ArrayList<FeedEntry> parentItemList) {
+        super(parentItemList);
+
+        feedEntries = parentItemList;
+    }
+
+    // onCreate ...
+    @Override
+    public FeedEntryViewHolder onCreateParentViewHolder(ViewGroup parent) {
+        View entryView = LayoutInflater.from(parent.getContext()).inflate(R.layout.feed_entry, parent, false);
+        return new FeedEntryViewHolder(entryView);
+    }
+
+    @Override
+    public OperationViewHolder onCreateChildViewHolder(ViewGroup child) {
+        View operationView = LayoutInflater.from(child.getContext()).inflate(R.layout.feed_operation, child, false);
+        return new OperationViewHolder(operationView);
+    }
+
+    // onBind ...
+    @Override
+    public void onBindParentViewHolder(FeedEntryViewHolder holder, int position, ParentListItem parentListItem) {
+        FeedEntry entry = (FeedEntry) parentListItem;
+        holder.bind(entry);
+    }
+
+    @Override
+    public void onBindChildViewHolder(OperationViewHolder holder, int position, Object childListItem) {
+        EntryOperationWrapper wrapper = (EntryOperationWrapper) childListItem;
+        holder.bind(wrapper);
+    }
+
+    @Override
+    public int getItemCount() {
+        return super.getItemCount();
+    }
+
+    public void addFeedEntry(FeedEntry entryToAdd) {
+        feedEntries.add(entryToAdd);
+        notifyParentItemInserted(feedEntries.lastIndexOf(entryToAdd)); //This makes sense
+
+        Collections.sort(feedEntries); //sort by date
+    }
+
+    /**
+     * Removes all the entries from the list.
+     * Called when we delete things.
+     */
+    public void clearEntries() {
+        if (feedEntries.size() == 0) {
+            //list is empty
+            return;
+        }
+
+        notifyParentItemRangeRemoved(0, feedEntries.size());
+        getParentItemList().removeAll(feedEntries);
+    }
+
+    public class FeedEntryViewHolder extends ParentViewHolder {
+
+        private ImageView icon;
+        private TextView type;
+        private TextView timestamp;
+
+        private ImageButton expandButton;
+
+        public FeedEntryViewHolder(View itemView) {
+            super(itemView);
+
+            icon = (ImageView) itemView.findViewById(R.id.entry_icon);
+            type = (TextView) itemView.findViewById(R.id.entry_type);
+            timestamp = (TextView) itemView.findViewById(R.id.entry_timestamp);
+
+            expandButton = (ImageButton) itemView.findViewById(R.id.entry_expandButton);
+        }
+
+        public void bind(FeedEntry entry) {
+            icon.setImageResource(entry.getType().getIcon());
+            type.setText(entry.getType().toString());
+            timestamp.setText(SimpleDateFormat.getDateTimeInstance().format(entry.getTimestamp()));
+
+            itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    if (isExpanded()) {
+                        collapseView();
+                        expandButton.setImageResource(R.drawable.ic_expand_more_white_24dp);
+                    } else {
+                        expandView();
+                        expandButton.setImageResource(R.drawable.ic_expand_less_white_24dp);
+                    }
+                }
+            });
+
+            expandButton.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    if (isExpanded()) {
+                        collapseView();
+                        expandButton.setImageResource(R.drawable.ic_expand_more_white_24dp);
+                    } else {
+                        expandView();
+                        expandButton.setImageResource(R.drawable.ic_expand_less_white_24dp);
+                    }
+                }
+            });
+
+            if (entry.containsFailure()) {
+                itemView.setBackgroundColor(itemView.getResources().getColor(R.color.error));
+            }
+        }
+    }
+
+    public class OperationViewHolder extends ChildViewHolder {
+
+        private ImageView icon;
+        private TextView operationType;
+        private TextView operationStatus;
+
+        public OperationViewHolder(View itemView) {
+            super(itemView);
+
+            icon = (ImageView) itemView.findViewById(R.id.operation_icon);
+            operationType = (TextView) itemView.findViewById(R.id.operation_type);
+            operationStatus = (TextView) itemView.findViewById(R.id.operation_status);
+        }
+
+        public void bind(EntryOperationWrapper wrapper) {
+            icon.setImageResource(wrapper.getType().getIcon());
+            operationType.setText(wrapper.getType().toString());
+            operationStatus.setText(wrapper.getStatus().toString());
+
+            if (wrapper.getStatus() != EntryOperationWrapper.EntryOperationStatus.OPERATION_SUCCESSFUL) {
+                icon.setColorFilter(new PorterDuffColorFilter(itemView.getResources().getColor(R.color.error), PorterDuff.Mode.MULTIPLY));
+            }
+        }
+    }
+}
Index: app/src/main/res/layout/activity_info_match.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_info_match.xml	(revision )
+++ app/src/main/res/layout/activity_info_match.xml	(revision )
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.design.widget.AppBarLayout
+        android:id="@+id/app_bar_layout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:layout_collapseMode="pin"
+            app:popupTheme="@style/ThemeOverlay.AppCompat.Dark" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <android.support.v4.widget.NestedScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="android.support.design.widget.AppBarLayout$ScrollingViewBehavior">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:padding="16dp">
+
+                <TextView
+                    android:id="@+id/info_match_dateAdded"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginBottom="8dp"
+                    android:text="Date Added"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Subhead"
+                    android:textSize="20sp" />
+
+                <TextView
+                    android:id="@+id/info_match_dataSource"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Source: This device"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Subhead"
+                    android:textSize="20sp" />
+
+            </LinearLayout>
+
+            <include layout="@layout/layout_info_scout_auto" />
+
+            <include layout="@layout/layout_info_scout_teleop" />
+
+            <include layout="@layout/layout_info_scout_summary" />
+
+        </LinearLayout>
+
+    </android.support.v4.widget.NestedScrollView>
+
+</android.support.design.widget.CoordinatorLayout>
+
Index: app/src/main/res/layout/view_counter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/view_counter.xml	(revision )
+++ app/src/main/res/layout/view_counter.xml	(revision )
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <LinearLayout
+        android:id="@+id/controls"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentRight="true">
+
+        <Button
+            android:id="@+id/minus"
+            style="?android:attr/buttonStyleSmall"
+            android:layout_width="56dp"
+            android:layout_height="56dp"
+            android:background="?attr/selectableItemBackground"
+            android:text="-"
+            android:textColor="@color/accent"
+            android:textSize="20sp" />
+
+        <TextView
+            android:id="@+id/value"
+            android:layout_width="48dp"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="0"
+            android:textAppearance="?android:attr/textAppearanceMedium" />
+
+
+        <Button
+            android:id="@+id/plus"
+            style="?android:attr/buttonStyleSmall"
+            android:layout_width="56dp"
+            android:layout_height="56dp"
+            android:background="?attr/selectableItemBackground"
+            android:text="+"
+            android:textColor="@color/accent"
+            android:textSize="20sp" />
+    </LinearLayout>
+
+</merge>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/match/ScoutingFlowActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/match/ScoutingFlowActivity.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/match/ScoutingFlowActivity.java	(revision )
@@ -0,0 +1,402 @@
+package com.team980.thunderscout.match;
+
+import android.app.ProgressDialog;
+import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.BluetoothDevice;
+import android.content.DialogInterface;
+import android.content.SharedPreferences;
+import android.graphics.drawable.ColorDrawable;
+import android.graphics.drawable.Drawable;
+import android.os.Build;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.TabLayout;
+import android.support.v4.view.ViewPager;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.CheckBox;
+import android.widget.EditText;
+
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.bluetooth.ClientConnectionThread;
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.data.task.ScoutDataWriteTask;
+import com.team980.thunderscout.feed.EntryOperationWrapper;
+import com.team980.thunderscout.feed.EntryOperationWrapper.EntryOperationStatus;
+import com.team980.thunderscout.feed.EntryOperationWrapper.EntryOperationType;
+import com.team980.thunderscout.feed.FeedEntry;
+import com.team980.thunderscout.feed.task.FeedDataWriteTask;
+import com.team980.thunderscout.util.CounterCompoundView;
+import com.team980.thunderscout.util.TransitionUtils;
+
+import java.util.EnumMap;
+
+public class ScoutingFlowActivity extends AppCompatActivity implements ViewPager.OnPageChangeListener, View.OnClickListener, ScoutingFlowDialogFragment.ScoutingFlowDialogFragmentListener {
+
+    private ScoutingFlowViewPagerAdapter viewPagerAdapter;
+
+    private ScoutData scoutData;
+    private FeedEntry feedEntry;
+
+    private FloatingActionButton fab;
+
+    // IDs for callback
+    public static final String OPERATION_SAVE_THIS_DEVICE = "SAVE_THIS_DEVICE";
+    public static final String OPERATION_SEND_BLUETOOTH = "SEND_BLUETOOTH";
+
+    private Bundle operationStates; //used for task loop
+
+    private ProgressDialog operationStateDialog;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        if (savedInstanceState != null) {
+            scoutData = (ScoutData) savedInstanceState.getSerializable("ScoutData");
+        } else {
+            scoutData = new ScoutData();
+
+            ScoutingFlowDialogFragment dialogFragment = new ScoutingFlowDialogFragment();
+            dialogFragment.show(getSupportFragmentManager(), "ScoutingFlowDialogFragment");
+        }
+
+        setContentView(R.layout.activity_scouting_flow);
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_clear_white_24dp);
+
+        ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
+
+        viewPagerAdapter = new ScoutingFlowViewPagerAdapter(getSupportFragmentManager());
+        viewPager.setAdapter(viewPagerAdapter);
+        viewPager.setOffscreenPageLimit(2);
+        viewPager.addOnPageChangeListener(this);
+
+        TabLayout tabLayout = (TabLayout) findViewById(R.id.tab_layout);
+        tabLayout.setupWithViewPager(viewPager);
+
+        fab = (FloatingActionButton) findViewById(R.id.fab);
+        fab.setOnClickListener(this);
+
+        if (scoutData.getTeamNumber() != null) { //Generate header based on presence of team number
+            getSupportActionBar().setTitle("Scout: Team " + scoutData.getTeamNumber());
+            getSupportActionBar().setSubtitle("Qualification Match " + scoutData.getMatchNumber());
+
+            toolbar.setBackground(new ColorDrawable(getResources().getColor(scoutData.getAllianceColor().getColorPrimary())));
+            tabLayout.setBackground(new ColorDrawable(getResources().getColor(scoutData.getAllianceColor().getColorPrimary())));
+            findViewById(R.id.app_bar_layout).setBackground(new ColorDrawable(getResources().getColor(scoutData.getAllianceColor().getColorPrimary())));
+
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+                getWindow().setStatusBarColor(getResources().getColor(scoutData.getAllianceColor().getColorPrimaryDark()));
+            }
+        } else {
+            getSupportActionBar().setTitle("Scout a match...");
+        }
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.menu_scouting_flow, menu);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        int id = item.getItemId();
+
+        if (id == android.R.id.home) {
+            onBackPressed();
+            return true;
+        }
+
+        if (id == R.id.action_edit_details) {
+            ScoutingFlowDialogFragment dialogFragment = new ScoutingFlowDialogFragment();
+
+            Bundle args = new Bundle();
+            args.putSerializable(ScoutingFlowDialogFragment.EXTRA_DEFAULT_DATA, scoutData);
+            dialogFragment.setArguments(args);
+
+            dialogFragment.show(getSupportFragmentManager(), "ScoutingFlowDialogFragment");
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    @Override
+    protected void onSaveInstanceState(Bundle savedInstanceState) {
+        super.onSaveInstanceState(savedInstanceState);
+        savedInstanceState.putSerializable("ScoutData", scoutData);
+    }
+
+    @Override
+    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+        //do nothing
+    }
+
+    @Override
+    public void onPageSelected(int position) {
+        switch (position) {
+            case 2: //SUMMARY tab
+                fab.show();
+                fab.setClickable(true);
+                break;
+
+            default: //Other tabs
+
+                fab.hide();
+                fab.setClickable(false);
+                break;
+        }
+    }
+
+    @Override
+    public void onPageScrollStateChanged(int state) {
+        //Do nothing
+    }
+
+
+    @Override
+    public void onBackPressed() {
+        new AlertDialog.Builder(this)
+                .setTitle("Are you sure you want to exit?")
+                .setMessage("The data currently in the scouting form will be lost!")
+                .setIcon(R.drawable.ic_warning_white_24dp)
+                .setNegativeButton("Cancel", null)
+                .setPositiveButton("Exit", new DialogInterface.OnClickListener() {
+
+                    public void onClick(DialogInterface arg0, int arg1) {
+                        ScoutingFlowActivity.super.onBackPressed();
+                    }
+                }).create().show();
+    }
+
+    @Override
+    public void onClick(View v) {
+        if (v.getId() == R.id.fab) {
+            initScoutData();
+
+            Log.d("SCOUTLOOP", "here we go again");
+
+            SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
+
+            boolean saveToThisDevice = prefs.getBoolean("ms_send_to_local_storage", true);
+            boolean sendToBluetoothServer = prefs.getBoolean("ms_send_to_bt_server", false);
+
+            operationStates = new Bundle();
+            operationStates.putBoolean(OPERATION_SAVE_THIS_DEVICE, saveToThisDevice);
+            operationStates.putBoolean(OPERATION_SEND_BLUETOOTH, sendToBluetoothServer);
+
+            operationStateDialog = new ProgressDialog(this);
+            operationStateDialog.setIndeterminate(true); //TODO can we use values too?
+            operationStateDialog.setCancelable(false);
+            operationStateDialog.setTitle("Storing data...");
+
+            feedEntry = new FeedEntry(FeedEntry.EntryType.MATCH_SCOUTED, System.currentTimeMillis());
+
+            dataOutputLoop();
+
+            /*if (prefs.getBoolean("ms_send_to_linked_sheet", false)) { //Saving to Sheets
+                SheetsUpdateTask task = new SheetsUpdateTask(getApplicationContext()); //MEMORY LEAK PREVENTION
+                task.execute(scoutData);
+
+                Toast info = Toast.makeText(this, "Sending to Google Sheets...", Toast.LENGTH_LONG);
+                info.show();
+            }*/
+        }
+
+    }
+
+    @Override
+    public void onDialogPositiveClick(ScoutingFlowDialogFragment dialog) {
+        if (dialog.allFieldsComplete()) {
+            dialog.initScoutData(scoutData);
+
+            getSupportActionBar().setTitle("Scout: Team " + scoutData.getTeamNumber()); //TODO match number, Qualification
+            getSupportActionBar().setSubtitle("Qualification Match " + scoutData.getMatchNumber());
+
+            int toolbarColor = ((ColorDrawable) findViewById(R.id.toolbar).getBackground()).getColor();
+
+            int statusBarColor;
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+                statusBarColor = getWindow().getStatusBarColor();
+            } else {
+                statusBarColor = getResources().getColor(R.color.primary_dark);
+            }
+
+            TransitionUtils.toolbarAndStatusBarTransition(toolbarColor, statusBarColor,
+                    getResources().getColor(scoutData.getAllianceColor().getColorPrimary()),
+                    getResources().getColor(scoutData.getAllianceColor().getColorPrimaryDark()), this);
+
+            Log.d("AllianceColor", scoutData.getAllianceColor().toString());
+
+            dialog.dismiss();
+        } else {
+            //do not dismiss - TODO show error
+        }
+    }
+
+    @Override
+    public void onDialogNegativeClick(ScoutingFlowDialogFragment dialog) {
+        dialog.dismiss();
+
+        if (scoutData.getTeamNumber() == null) {
+            finish();
+        }
+    }
+
+    public ScoutData getData() {
+        return scoutData;
+    }
+
+    private void dataOutputLoop() {
+        Log.d("SCOUTLOOP", "ever get that feeling of deja vu?");
+        if (!operationStateDialog.isShowing()) {
+            operationStateDialog.show(); //Show it if it isn't already visible
+        }
+
+        if (operationStates.getBoolean(OPERATION_SAVE_THIS_DEVICE)) {
+            scoutData.setDataSource(ScoutData.SOURCE_LOCAL_DEVICE);
+
+            operationStateDialog.setMessage("Saving scout data to this device");
+
+            ScoutDataWriteTask task = new ScoutDataWriteTask(new ScoutData(scoutData), getApplicationContext(), this); //MEMORY LEAK PREVENTION
+            task.execute();
+
+        } else if (operationStates.getBoolean(OPERATION_SEND_BLUETOOTH)) {
+            SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
+
+            String address = prefs.getString("ms_bt_server_device", null);
+
+            BluetoothDevice device = BluetoothAdapter.getDefaultAdapter().getRemoteDevice(address);
+            scoutData.setDataSource(BluetoothAdapter.getDefaultAdapter().getName());
+
+            operationStateDialog.setMessage("Sending scout data to " + device.getName());
+
+            if (device.getName() == null) { //This should catch both the no device selected error and the bluetooth off error
+                dataOutputCallbackFail(ScoutingFlowActivity.OPERATION_SEND_BLUETOOTH, new NullPointerException("Error initializing Bluetooth!"));
+                return;
+            }
+
+            ClientConnectionThread connectThread = new ClientConnectionThread(device, scoutData, getApplicationContext(), this);
+            connectThread.start();
+
+        } else {
+            operationStateDialog.dismiss();
+            operationStateDialog = null;
+
+            finish();
+
+            PreferenceManager.getDefaultSharedPreferences(this).edit()
+                    .putInt("last_used_match_number", scoutData.getMatchNumber())
+                    .putString("last_used_alliance_color", scoutData.getAllianceColor().name())
+                    .apply();
+
+            FeedDataWriteTask feedDataWriteTask = new FeedDataWriteTask(feedEntry, this);
+            feedDataWriteTask.execute();
+        }
+    }
+
+    public void dataOutputCallbackSuccess(final String operationId) {
+        Log.d("SCOUTLOOP", "back into the fray");
+        operationStates.putBoolean(operationId, false); //we're done with that!
+
+        operationStateDialog.setMessage("");
+
+        EntryOperationWrapper operation = new EntryOperationWrapper(EntryOperationType.fromOperationId(operationId),
+                EntryOperationStatus.OPERATION_SUCCESSFUL);
+        feedEntry.addOperation(operation);
+
+        dataOutputLoop();
+    }
+
+    //TODO broadcast receiver?
+    public void dataOutputCallbackFail(final String operationId, Exception ex) {
+        Log.d("SCOUTLOOP", "back into the fray");
+
+        operationStateDialog.hide();
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setTitle("Error: " + ex.getClass().getName())
+                .setIcon(R.drawable.ic_warning_white_24dp)
+                .setMessage(ex.getLocalizedMessage() + "\n" + "\n" + "Would you like to reattempt the operation?")
+                .setCancelable(false)
+                .setPositiveButton("Retry", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface dialog, int id) {
+                        operationStates.putBoolean(operationId, true); //retry
+
+                        EntryOperationWrapper operation = new EntryOperationWrapper(EntryOperationType.fromOperationId(operationId),
+                                EntryOperationStatus.OPERATION_FAILED);
+                        feedEntry.addOperation(operation);
+
+                        dataOutputLoop();
+                    }
+                })
+                .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface dialog, int id) {
+                        operationStates.putBoolean(operationId, false); //do not retry
+
+                        EntryOperationWrapper operation = new EntryOperationWrapper(EntryOperationType.fromOperationId(operationId),
+                                EntryOperationStatus.OPERATION_ABORTED);
+                        feedEntry.addOperation(operation);
+
+                        dataOutputLoop();
+                    }
+                });
+        AlertDialog alert = builder.create();
+        alert.show();
+    }
+
+    private void initScoutData() {
+        // Init
+        scoutData.setDateAdded(System.currentTimeMillis());
+
+        // Auto
+        View autoView = viewPagerAdapter.getItem(0).getView();
+
+        CounterCompoundView autoHighGoals = (CounterCompoundView) autoView.findViewById(R.id.auto_counterHighGoals);
+
+        scoutData.setAutoHighGoals((int) autoHighGoals.getValue());
+
+        CounterCompoundView autoMissedHighGoals = (CounterCompoundView) autoView.findViewById(R.id.auto_counterMissedHighGoals);
+
+        scoutData.setAutoMissedHighGoals((int) autoMissedHighGoals.getValue());
+
+        // Teleop
+        View teleopView = viewPagerAdapter.getItem(1).getView();
+
+        //CounterCompoundView teleopGearsDelivered = (CounterCompoundView) teleopView.findViewById(R.id.teleop_counterGearsDelivered);
+
+        //scoutData.setTeleopGearsDelivered((int) teleopGearsDelivered.getValue());
+
+        scoutData.getTeleopLowGoalDumps().addAll(((TeleopFragment) viewPagerAdapter.getItem(1)).getFuelDumpAdapter().get());
+
+        CounterCompoundView teleopHighGoals = (CounterCompoundView) teleopView.findViewById(R.id.teleop_counterHighGoals);
+
+        scoutData.setTeleopHighGoals((int) teleopHighGoals.getValue());
+
+        CounterCompoundView teleopMissedHighGoals = (CounterCompoundView) teleopView.findViewById(R.id.teleop_counterMissedHighGoals);
+
+        scoutData.setTeleopMissedHighGoals((int) teleopMissedHighGoals.getValue());
+
+        // Summary
+        View summaryView = viewPagerAdapter.getItem(2).getView();
+
+        EditText troubleWith = (EditText) summaryView.findViewById(R.id.summary_edittextTroubleWith);
+
+        scoutData.setTroubleWith(troubleWith.getText().toString());
+
+        EditText comments = (EditText) summaryView.findViewById(R.id.summary_edittextComments);
+
+        scoutData.setComments(comments.getText().toString());
+    }
+}
Index: app/src/main/java/com/team980/thunderscout/data/ScoutDataDbHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/ScoutDataDbHelper.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/ScoutDataDbHelper.java	(revision )
@@ -0,0 +1,66 @@
+package com.team980.thunderscout.data;
+
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+
+import static com.team980.thunderscout.data.ScoutDataContract.ScoutDataTable;
+
+public class ScoutDataDbHelper extends SQLiteOpenHelper {
+    // If you change the database schema, you must increment the database version.
+    public static final int DATABASE_VERSION = 2;
+
+    public static final String DATABASE_NAME = "ThunderScout_SCOUT_DATA_2017.db"; //Store year in database name but DO NOT CHANGE FORMAT
+
+    private static final String TEXT_TYPE = " TEXT";
+    private static final String FLOAT_TYPE = " REAL";
+    private static final String INTEGER_TYPE = " INTEGER";
+    private static final String BLOB_TYPE = " BLOB";
+    private static final String COMMA_SEP = ",";
+    private static final String SQL_CREATE_ENTRIES =
+            "CREATE TABLE " + ScoutDataTable.TABLE_NAME + " (" +
+                    ScoutDataTable._ID + " INTEGER PRIMARY KEY," +
+                    ScoutDataTable.COLUMN_NAME_TEAM_NUMBER + TEXT_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_MATCH_NUMBER + INTEGER_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_ALLIANCE_COLOR + TEXT_TYPE + COMMA_SEP +
+
+                    ScoutDataTable.COLUMN_NAME_DATE_ADDED + INTEGER_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_DATA_SOURCE + TEXT_TYPE + COMMA_SEP +
+
+                    ScoutDataTable.COLUMN_NAME_AUTO_GEARS_DELIVERED + INTEGER_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_AUTO_LOW_GOAL_DUMP_AMOUNT + TEXT_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_AUTO_HIGH_GOALS + INTEGER_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_AUTO_MISSED_HIGH_GOALS + INTEGER_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_AUTO_CROSSED_BASELINE + INTEGER_TYPE + COMMA_SEP +
+
+                    ScoutDataTable.COLUMN_NAME_TELEOP_GEARS_DELIVERED + INTEGER_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_TELEOP_LOW_GOAL_DUMPS + BLOB_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_TELEOP_HIGH_GOALS + INTEGER_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_TELEOP_MISSED_HIGH_GOALS + INTEGER_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_CLIMBING_STATS + TEXT_TYPE + COMMA_SEP +
+
+                    ScoutDataTable.COLUMN_NAME_TROUBLE_WITH + TEXT_TYPE + COMMA_SEP +
+                    ScoutDataTable.COLUMN_NAME_COMMENTS + TEXT_TYPE + ")";
+
+    private static final String SQL_DELETE_ENTRIES =
+            "DROP TABLE IF EXISTS " + ScoutDataTable.TABLE_NAME;
+
+    public ScoutDataDbHelper(Context context) {
+        super(context, DATABASE_NAME, null, DATABASE_VERSION);
+    }
+
+    public void onCreate(SQLiteDatabase db) {
+        db.execSQL(SQL_CREATE_ENTRIES);
+    }
+
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        // This database is only a cache for event data, so its upgrade policy is
+        // to simply to discard the data and start over
+        db.execSQL(SQL_DELETE_ENTRIES);
+        onCreate(db);
+    }
+
+    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        onUpgrade(db, oldVersion, newVersion);
+    }
+}
Index: app/src/main/res/layout/fragment_variability_team_info.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_variability_team_info.xml	(revision )
+++ app/src/main/res/layout/fragment_variability_team_info.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_bluetooth_searching_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_bluetooth_searching_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_bluetooth_searching_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M14.24,12.01l2.32,2.32c0.28,-0.72 0.44,-1.51 0.44,-2.33 0,-0.82 -0.16,-1.59 -0.43,-2.31l-2.33,2.32zM19.53,6.71l-1.26,1.26c0.63,1.21 0.98,2.57 0.98,4.02s-0.36,2.82 -0.98,4.02l1.2,1.2c0.97,-1.54 1.54,-3.36 1.54,-5.31 -0.01,-1.89 -0.55,-3.67 -1.48,-5.19zM15.71,7.71L10,2L9,2v7.59L4.41,5 3,6.41 8.59,12 3,17.59 4.41,19 9,14.41L9,22h1l5.71,-5.71 -4.3,-4.29 4.3,-4.29zM11,5.83l1.88,1.88L11,9.59L11,5.83zM12.88,16.29L11,18.17v-3.76l1.88,1.88z"/>
+</vector>
Index: app/src/main/res/layout/comment_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/comment_view.xml	(revision )
+++ app/src/main/res/layout/comment_view.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="horizontal">
+
+    <TextView
+        android:id="@+id/comment"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical|left"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+        android:text="Comment"
+        android:textSize="15sp" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/util/AppCompatPreferenceActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/util/AppCompatPreferenceActivity.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/util/AppCompatPreferenceActivity.java	(revision )
@@ -0,0 +1,111 @@
+package com.team980.thunderscout.util;
+
+import android.content.res.Configuration;
+import android.os.Bundle;
+import android.preference.PreferenceActivity;
+import android.support.annotation.LayoutRes;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatDelegate;
+import android.support.v7.widget.Toolbar;
+import android.view.MenuInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+/**
+ * A {@link android.preference.PreferenceActivity} which implements and proxies the necessary calls
+ * to be used with AppCompat.
+ */
+public abstract class AppCompatPreferenceActivity extends PreferenceActivity {
+
+    private AppCompatDelegate mDelegate;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        getDelegate().installViewFactory();
+        getDelegate().onCreate(savedInstanceState);
+        super.onCreate(savedInstanceState);
+    }
+
+    @Override
+    protected void onPostCreate(Bundle savedInstanceState) {
+        super.onPostCreate(savedInstanceState);
+        getDelegate().onPostCreate(savedInstanceState);
+    }
+
+    public ActionBar getSupportActionBar() {
+        return getDelegate().getSupportActionBar();
+    }
+
+    public void setSupportActionBar(@Nullable Toolbar toolbar) {
+        getDelegate().setSupportActionBar(toolbar);
+    }
+
+    @NonNull
+    @Override
+    public MenuInflater getMenuInflater() {
+        return getDelegate().getMenuInflater();
+    }
+
+    @Override
+    public void setContentView(@LayoutRes int layoutResID) {
+        getDelegate().setContentView(layoutResID);
+    }
+
+    @Override
+    public void setContentView(View view) {
+        getDelegate().setContentView(view);
+    }
+
+    @Override
+    public void setContentView(View view, ViewGroup.LayoutParams params) {
+        getDelegate().setContentView(view, params);
+    }
+
+    @Override
+    public void addContentView(View view, ViewGroup.LayoutParams params) {
+        getDelegate().addContentView(view, params);
+    }
+
+    @Override
+    protected void onPostResume() {
+        super.onPostResume();
+        getDelegate().onPostResume();
+    }
+
+    @Override
+    protected void onTitleChanged(CharSequence title, int color) {
+        super.onTitleChanged(title, color);
+        getDelegate().setTitle(title);
+    }
+
+    @Override
+    public void onConfigurationChanged(Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
+        getDelegate().onConfigurationChanged(newConfig);
+    }
+
+    @Override
+    protected void onStop() {
+        super.onStop();
+        getDelegate().onStop();
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        getDelegate().onDestroy();
+    }
+
+    public void invalidateOptionsMenu() {
+        getDelegate().invalidateOptionsMenu();
+    }
+
+    protected AppCompatDelegate getDelegate() {
+        if (mDelegate == null) {
+            mDelegate = AppCompatDelegate.create(this, null);
+        }
+        return mDelegate;
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_home.xml	(revision )
+++ app/src/main/res/layout/fragment_home.xml	(revision )
@@ -0,0 +1,50 @@
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true">
+
+    <android.support.design.widget.AppBarLayout
+        android:id="@+id/app_bar_layout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            android:elevation="4dp"
+            app:popupTheme="@style/ThemeOverlay.AppCompat.Dark" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <android.support.v4.widget.SwipeRefreshLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:id="@+id/swipeContainer"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="android.support.design.widget.AppBarLayout$ScrollingViewBehavior">
+
+        <android.support.v7.widget.RecyclerView
+            android:id="@+id/feed"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:scrollbars="vertical" />
+    </android.support.v4.widget.SwipeRefreshLayout>
+
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab_scout"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_marginBottom="16dp"
+        android:layout_marginRight="16dp"
+        android:scaleType="center"
+        android:src="@drawable/ic_send_white_24dp"
+        app:fabSize="normal"
+        app:backgroundTint="@color/accent"
+        app:elevation="6dp"
+        app:pressedTranslationZ="12dp" />
+
+</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: app/src/main/res/xml/provider_paths.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/xml/provider_paths.xml	(revision )
+++ app/src/main/res/xml/provider_paths.xml	(revision )
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<paths xmlns:android="http://schemas.android.com/apk/res/android">
+    <external-path name="csv-exports" path="./ThunderScout"/>
+</paths>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/data/task/ScoutDataWriteTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/task/ScoutDataWriteTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/task/ScoutDataWriteTask.java	(revision )
@@ -0,0 +1,129 @@
+package com.team980.thunderscout.data.task;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.Intent;
+import android.database.sqlite.SQLiteDatabase;
+import android.os.AsyncTask;
+import android.os.Handler;
+import android.os.Looper;
+import android.support.v4.content.LocalBroadcastManager;
+
+import com.team980.thunderscout.ThunderScout;
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.data.ScoutDataContract;
+import com.team980.thunderscout.data.ScoutDataDbHelper;
+import com.team980.thunderscout.data.enumeration.ClimbingStats;
+import com.team980.thunderscout.info.ThisDeviceFragment;
+import com.team980.thunderscout.match.ScoutingFlowActivity;
+
+public class ScoutDataWriteTask extends AsyncTask<Void, Integer, Void> {
+
+    private final ScoutData data;
+    private Context context;
+
+    private LocalBroadcastManager localBroadcastManager;
+
+    private ScoutingFlowActivity activity;
+
+    public ScoutDataWriteTask(ScoutData data, Context context) {
+        this.data = data;
+
+        this.context = context;
+
+        localBroadcastManager = LocalBroadcastManager.getInstance(context);
+    }
+
+    public ScoutDataWriteTask(ScoutData data, Context context, ScoutingFlowActivity activity) {
+        this(data, context);
+
+        this.activity = activity;
+    }
+
+    @Override
+    protected void onPreExecute() {
+        //Runs on UI thread before execution
+        super.onPreExecute();
+    }
+
+    @Override
+    protected Void doInBackground(Void[] params) {
+
+        // Gets the data repository in write mode
+        SQLiteDatabase db = new ScoutDataDbHelper(context).getWritableDatabase();
+
+        // Create a new map of values, where column names are the keys
+        ContentValues values = new ContentValues();
+
+        // Init
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_TEAM_NUMBER, data.getTeamNumber());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_MATCH_NUMBER, data.getMatchNumber());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_ALLIANCE_COLOR, data.getAllianceColor().name());
+
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_DATE_ADDED, data.getDateAdded());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_DATA_SOURCE, data.getDataSource());
+
+        // Auto
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_AUTO_GEARS_DELIVERED, data.getAutoGearsDelivered());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_AUTO_LOW_GOAL_DUMP_AMOUNT, data.getAutoLowGoalDumpAmount().name());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_AUTO_HIGH_GOALS, data.getAutoHighGoals());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_AUTO_MISSED_HIGH_GOALS, data.getAutoMissedHighGoals());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_AUTO_CROSSED_BASELINE, data.hasCrossedBaseline());
+
+        // Teleop
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_TELEOP_GEARS_DELIVERED, data.getTeleopGearsDelivered());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_TELEOP_LOW_GOAL_DUMPS, ThunderScout.serializeObject(data.getTeleopLowGoalDumps()));
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_TELEOP_HIGH_GOALS, data.getTeleopHighGoals());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_TELEOP_MISSED_HIGH_GOALS, data.getTeleopMissedHighGoals());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_CLIMBING_STATS, data.getClimbingStats().name());
+
+        // Summary
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_TROUBLE_WITH, data.getTroubleWith());
+        values.put(ScoutDataContract.ScoutDataTable.COLUMN_NAME_COMMENTS, data.getComments());
+
+        try {
+            // Insert the new row
+            db.insertOrThrow(
+                    ScoutDataContract.ScoutDataTable.TABLE_NAME,
+                    null,
+                    values);
+        } catch (final Exception e) {
+            e.printStackTrace();
+            if (activity != null) {
+                Handler handler = new Handler(Looper.getMainLooper());
+
+                handler.post(new Runnable() {
+
+                    @Override
+                    public void run() {  //TODO broadcast reciever
+                        activity.dataOutputCallbackFail(ScoutingFlowActivity.OPERATION_SAVE_THIS_DEVICE, e);
+                    }
+                });
+            }
+        }
+
+        if (activity != null) {
+            Handler handler = new Handler(Looper.getMainLooper());
+
+            handler.post(new Runnable() {
+
+                @Override
+                public void run() {  //TODO broadcast reciever
+                    activity.dataOutputCallbackSuccess(ScoutingFlowActivity.OPERATION_SAVE_THIS_DEVICE);
+                }
+            });
+        }
+
+        db.close();
+        return null;
+    }
+
+    @Override
+    protected void onPostExecute(Void o) {
+        //Runs on UI thread after execution
+        super.onPostExecute(o);
+
+        Intent intent = new Intent(ThisDeviceFragment.ACTION_REFRESH_VIEW_PAGER);
+        localBroadcastManager.sendBroadcast(intent); //notify the UI thread so we can refresh the ViewPager automatically :D
+    }
+}
Index: app/src/debug/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/debug/res/values/strings.xml	(revision )
+++ app/src/debug/res/values/strings.xml	(revision )
@@ -0,0 +1,3 @@
+<resources>
+    <string name="build_variant">Debug</string>
+</resources>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_filter_list_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_filter_list_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_filter_list_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M10,18h4v-2h-4v2zM3,6v2h18L21,6L3,6zM6,13h12v-2L6,11v2z"/>
+</vector>
Index: app/src/main/java/com/team980/thunderscout/feed/FeedDataDbHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/feed/FeedDataDbHelper.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/feed/FeedDataDbHelper.java	(revision )
@@ -0,0 +1,51 @@
+package com.team980.thunderscout.feed;
+
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+
+import static com.team980.thunderscout.feed.FeedDataContract.FeedDataTable;
+
+public class FeedDataDbHelper extends SQLiteOpenHelper {
+    // If you change the database schema, you must increment the database version.
+    public static final int DATABASE_VERSION = 1; //Increment this whenever the feed database schema changes
+
+    /**
+     * Never, ever change this!
+     */
+    public static final String DATABASE_NAME = "ThunderScout_FEED.db";
+
+    private static final String TEXT_TYPE = " TEXT";
+    private static final String FLOAT_TYPE = " REAL";
+    private static final String INTEGER_TYPE = " INTEGER";
+    private static final String BLOB_TYPE = " BLOB";
+    private static final String COMMA_SEP = ",";
+    private static final String SQL_CREATE_ENTRIES =
+            "CREATE TABLE " + FeedDataTable.TABLE_NAME + " (" +
+                    FeedDataTable._ID + " INTEGER PRIMARY KEY," +
+                    FeedDataTable.COLUMN_NAME_ENTRY_TYPE + TEXT_TYPE + COMMA_SEP +
+                    FeedDataTable.COLUMN_NAME_ENTRY_DATE + FLOAT_TYPE + COMMA_SEP +
+                    FeedDataTable.COLUMN_NAME_ENTRY_OPERATIONS + BLOB_TYPE + ")";
+
+    private static final String SQL_DELETE_ENTRIES =
+            "DROP TABLE IF EXISTS " + FeedDataTable.TABLE_NAME;
+
+    public FeedDataDbHelper(Context context) {
+        super(context, DATABASE_NAME, null, DATABASE_VERSION);
+    }
+
+    public void onCreate(SQLiteDatabase db) {
+        db.execSQL(SQL_CREATE_ENTRIES);
+    }
+
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        // This database is only a cache for event data, so its upgrade policy is
+        // to simply to discard the data and start over
+        db.execSQL(SQL_DELETE_ENTRIES);
+        onCreate(db);
+    }
+
+    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        onUpgrade(db, oldVersion, newVersion);
+    }
+}
Index: app/src/main/res/layout/dialog_scouting_flow.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/dialog_scouting_flow.xml	(revision )
+++ app/src/main/res/layout/dialog_scouting_flow.xml	(revision )
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="@color/primary" />
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:padding="16dp">
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="left"
+            android:orientation="horizontal">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Team "
+                android:textSize="22sp" />
+
+            <EditText
+                android:id="@+id/dialog_editTextTeamNumber"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:ems="3"
+                android:hint="980"
+                android:inputType="number"
+                android:textSize="22sp" />
+
+            <android.support.v7.widget.AppCompatButton
+                android:id="@+id/dialog_allianceToggleButton"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:backgroundTint="@color/alliance_red_primary"
+                android:text="Red Alliance" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="left"
+            android:orientation="horizontal">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Qualification Match "
+                android:textSize="22sp" />
+
+            <EditText
+                android:id="@+id/dialog_editTextMatchNumber"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:ems="2"
+                android:hint="0"
+                android:inputType="number"
+                android:textSize="22sp" />
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/info/ThisDeviceFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/info/ThisDeviceFragment.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/info/ThisDeviceFragment.java	(revision )
@@ -0,0 +1,305 @@
+package com.team980.thunderscout.info;
+
+import android.Manifest;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.app.Fragment;
+import android.support.v4.content.LocalBroadcastManager;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v4.widget.SwipeRefreshLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.DividerItemDecoration;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.PopupMenu;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.LinearLayout;
+
+import com.team980.thunderscout.MainActivity;
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.data.task.CSVExportTask;
+import com.team980.thunderscout.data.task.ScoutDataClearTask;
+import com.team980.thunderscout.data.task.ScoutDataDeleteTask;
+import com.team980.thunderscout.data.task.ScoutDataReadTask;
+import com.team980.thunderscout.util.TransitionUtils;
+
+import java.util.ArrayList;
+
+import static com.team980.thunderscout.info.TeamWrapper.TeamComparator.SORT_TEAM_NUMBER;
+
+public class ThisDeviceFragment extends Fragment implements SwipeRefreshLayout.OnRefreshListener, DialogInterface.OnClickListener,
+        View.OnClickListener {
+
+    private RecyclerView dataView;
+    private LocalDataAdapter adapter;
+
+    private SwipeRefreshLayout swipeContainer;
+
+    private BroadcastReceiver refreshReceiver;
+
+    private DrawerLayout drawer;
+    private ActionBarDrawerToggle toggle;
+    private Toolbar toolbar;
+    private boolean selectionMode = false;
+
+    public static final String ACTION_REFRESH_VIEW_PAGER = "com.team980.thunderscout.info.REFRESH_VIEW_PAGER";
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_this_device, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        MainActivity activity = (MainActivity) getActivity();
+
+        toolbar = (Toolbar) view.findViewById(R.id.toolbar);
+        toolbar.setTitle("This device");
+        activity.setSupportActionBar(toolbar);
+
+        setHasOptionsMenu(true);
+
+        drawer = (DrawerLayout) getActivity().findViewById(R.id.drawer_layout);
+        toggle = new ActionBarDrawerToggle(
+                activity, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+        drawer.addDrawerListener(toggle);
+        toggle.syncState();
+
+        dataView = (RecyclerView) view.findViewById(R.id.dataView);
+
+        // use a linear layout manager
+        RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(getContext());
+        dataView.setLayoutManager(mLayoutManager);
+
+        DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(dataView.getContext(),
+                LinearLayout.VERTICAL);
+        dataView.addItemDecoration(dividerItemDecoration);
+
+        // specify an adapter (see also next example)
+        adapter = new LocalDataAdapter(getContext(), new ArrayList<TeamWrapper>(), this);
+        dataView.setAdapter(adapter);
+
+        swipeContainer = (SwipeRefreshLayout) view.findViewById(R.id.swipeContainer);
+
+        swipeContainer.setOnRefreshListener(this);
+
+        swipeContainer.setColorSchemeResources(R.color.accent);
+        swipeContainer.setProgressBackgroundColorSchemeResource(R.color.cardview_dark_background);
+
+        ScoutDataReadTask query = new ScoutDataReadTask(adapter, getContext(), swipeContainer);
+        query.execute();
+
+        refreshReceiver = new BroadcastReceiver() {
+            @Override
+            public void onReceive(Context context, Intent intent) {
+                ScoutDataReadTask query = new ScoutDataReadTask(adapter, getContext(), swipeContainer);
+                query.execute();
+            }
+        };
+    }
+
+    // TODO convert to method used by TeleopFragment
+    public void saveAdapterState(Bundle outState) { //
+        Log.d("FRAGSTATE", "saving adapter state");
+        adapter.onSaveInstanceState(outState);
+    }
+
+    public void restoreAdapterState(Bundle savedInstanceState) { //
+        Log.d("FRAGSTATE", "restoring adapter state");
+        adapter.onRestoreInstanceState(savedInstanceState);
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+
+        LocalBroadcastManager.getInstance(getContext()).unregisterReceiver(refreshReceiver);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+
+        LocalBroadcastManager.getInstance(getContext()).registerReceiver(refreshReceiver, new IntentFilter(ACTION_REFRESH_VIEW_PAGER));
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.menu_this_device, menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        int id = item.getItemId();
+
+        //Default mode
+        if (id == R.id.action_delete_all && adapter.getItemCount() > 0) {
+            new AlertDialog.Builder(getContext())
+                    .setTitle("Delete all scout data from local device?")
+                    .setMessage("This cannot be undone!")
+                    .setIcon(R.drawable.ic_warning_white_24dp)
+                    .setPositiveButton("Delete", this)
+                    .setNegativeButton("Cancel", null).show();
+        }
+
+        if (id == R.id.action_export_csv) {
+            if (ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.WRITE_EXTERNAL_STORAGE)
+                    == PackageManager.PERMISSION_GRANTED) {
+                CSVExportTask exportTask = new CSVExportTask(getContext());
+                exportTask.execute();
+            } else {
+                //Request permission
+                ActivityCompat.requestPermissions(
+                        getActivity(),
+                        new String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE },
+                        1
+                );
+                //TODO redo export
+            }
+        }
+
+        if (id == R.id.action_sort) {
+
+            final AlertDialog sortDialog;
+
+            // Creating and Building the Dialog
+            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
+            builder.setTitle("Sort teams by... (WIP)"); //TODO custom sorting dialog with asc/desc, spinners, ok/cancel flow
+
+            builder.setSingleChoiceItems(TeamWrapper.TeamComparator.getFormattedList(), -1,
+                    new DialogInterface.OnClickListener() {
+                        public void onClick(DialogInterface dialog, int item) {
+                            TeamWrapper.TeamComparator sortMode = TeamWrapper.TeamComparator.values()[item];
+
+                            adapter.sort(sortMode);
+                        }
+                    })
+                    .setPositiveButton("Ok", null);
+
+            sortDialog = builder.create();
+            sortDialog.show();
+        }
+
+        //Selection mode
+        if (id == R.id.action_delete_selection) {
+            new AlertDialog.Builder(getContext())
+                    .setTitle("Delete selected scout data from local device?")
+                    .setMessage("This cannot be undone!")
+                    .setIcon(R.drawable.ic_warning_white_24dp)
+                    .setPositiveButton("Delete", this)
+                    .setNegativeButton("Cancel", null).show();
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    /**
+     * Refresh for SwipeRefreshLayout
+     */
+    @Override
+    public void onRefresh() {
+        ScoutDataReadTask query = new ScoutDataReadTask(adapter, getContext(), swipeContainer);
+        query.execute();
+    }
+
+    /**
+     * Alert dialog shown for deletion prompts
+     */
+    @Override
+    public void onClick(DialogInterface dialog, int whichButton) {
+        if (selectionMode) {
+            ScoutDataDeleteTask deleteTask = new ScoutDataDeleteTask(adapter, getContext(), adapter.getSelectedItems());
+            deleteTask.execute();
+        } else {
+            ScoutDataClearTask clearTask = new ScoutDataClearTask(adapter, getContext());
+            clearTask.execute();
+        }
+    }
+
+    /**
+     * Listener for HOME button when in selection mode
+     */
+    @Override
+    public void onClick(View view) {
+        if (selectionMode) {
+            adapter.clearSelections();
+            setSelectionMode(false);
+        }
+    }
+
+    public boolean isInSelectionMode() {
+        return selectionMode;
+    }
+
+    public void setSelectionMode(boolean value) {
+        selectionMode = value;
+
+        if (selectionMode) {
+            toolbar.setTitle("1 match selected");
+            toolbar.getMenu().clear();
+            toolbar.inflateMenu(R.menu.menu_data_select);
+            TransitionUtils.toolbarAndStatusBarTransitionFromResources(R.color.primary, R.color.primary_dark,
+                    R.color.secondary, R.color.secondary_dark, (AppCompatActivity) getActivity());
+
+            drawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
+            toggle.onDrawerStateChanged(DrawerLayout.STATE_IDLE);
+            toggle.setDrawerIndicatorEnabled(false);
+            toggle.syncState();
+
+            MainActivity activity = (MainActivity) getActivity();
+            activity.getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+            activity.getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_clear_white_24dp);
+
+            toolbar.setNavigationOnClickListener(this);
+        } else {
+            toolbar.setTitle("This device");
+            toolbar.getMenu().clear();
+            toolbar.inflateMenu(R.menu.menu_this_device);
+            TransitionUtils.toolbarAndStatusBarTransitionFromResources(R.color.secondary, R.color.secondary_dark,
+                    R.color.primary, R.color.primary_dark, (AppCompatActivity) getActivity());
+
+            drawer.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED);
+            toggle = new ActionBarDrawerToggle(
+                    getActivity(), drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+            drawer.addDrawerListener(toggle);
+            toggle.syncState();
+        }
+    }
+
+    public void updateSelectionModeTitle(int numItems) {
+        if (selectionMode) {
+            if (numItems == 1) {
+                toolbar.setTitle("1 match selected");
+            } else {
+                toolbar.setTitle(numItems + " matches selected");
+            }
+        }
+    }
+}
Index: app/src/main/res/layout/match_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/match_view.xml	(revision )
+++ app/src/main/res/layout/match_view.xml	(revision )
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="72dp"
+    android:background="?attr/selectableItemBackground">
+
+    <ImageView
+        android:id="@+id/match_icon"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_gravity="center_vertical"
+        android:paddingLeft="16dp"
+        android:src="@drawable/ic_flag_white_24dp"/>
+
+    <CheckBox
+        android:id="@+id/match_checkBox"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:background="#00000000"
+        android:layout_marginLeft="16dp"
+        android:visibility="gone"/>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:paddingLeft="72dp"
+        android:paddingRight="16dp">
+
+        <TextView
+            android:id="@+id/match_matchNumber"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingTop="15dp"
+            android:text="Match Number"
+            android:textColor="@android:color/white"
+            android:textSize="16sp" />
+
+        <TextView
+            android:id="@+id/match_allianceColor"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/match_matchNumber"
+            android:text="Alliance Color"
+            android:textSize="14sp" />
+
+    </RelativeLayout>
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_send_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_send_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_send_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M2.01,21L23,12 2.01,3 2,10l15,2 -15,2z"/>
+</vector>
Index: app/src/main/res/drawable/ic_add_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_add_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_add_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
+</vector>
Index: app/src/main/java/com/team980/thunderscout/feed/task/FeedDataReadTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/feed/task/FeedDataReadTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/feed/task/FeedDataReadTask.java	(revision )
@@ -0,0 +1,149 @@
+package com.team980.thunderscout.feed.task;
+
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteException;
+import android.os.AsyncTask;
+import android.support.v4.widget.SwipeRefreshLayout;
+
+import com.team980.thunderscout.ThunderScout;
+import com.team980.thunderscout.feed.ActivityFeedAdapter;
+import com.team980.thunderscout.feed.EntryOperationWrapper;
+import com.team980.thunderscout.feed.FeedDataContract.FeedDataTable;
+import com.team980.thunderscout.feed.FeedDataDbHelper;
+import com.team980.thunderscout.feed.FeedEntry;
+
+import java.util.List;
+
+public class FeedDataReadTask extends AsyncTask<Void, FeedEntry, Void> {
+
+    private ActivityFeedAdapter viewAdapter;
+    private Context context;
+
+    private SwipeRefreshLayout swipeLayout;
+
+    public FeedDataReadTask(ActivityFeedAdapter adapter, Context context) {
+        viewAdapter = adapter;
+        this.context = context;
+    }
+
+    public FeedDataReadTask(ActivityFeedAdapter adapter, Context context, SwipeRefreshLayout refresh) {
+        viewAdapter = adapter;
+        this.context = context;
+
+        swipeLayout = refresh;
+    }
+
+    @Override
+    protected void onPreExecute() {
+        viewAdapter.clearEntries();
+
+        if (swipeLayout != null) {
+
+            swipeLayout.post(new Runnable() {
+                @Override
+                public void run() {
+                    swipeLayout.setRefreshing(true);
+                }
+            });
+        }
+
+        super.onPreExecute();
+    }
+
+    @Override
+    public Void doInBackground(Void... params) {
+
+        SQLiteDatabase db = new FeedDataDbHelper(context).getReadableDatabase();
+
+        // Define a projection that specifies which columns from the database
+        // you will actually use after this query.
+        String[] projection = {
+                FeedDataTable._ID,
+                FeedDataTable.COLUMN_NAME_ENTRY_TYPE,
+                FeedDataTable.COLUMN_NAME_ENTRY_DATE,
+                FeedDataTable.COLUMN_NAME_ENTRY_OPERATIONS
+        };
+
+        // How you want the results sorted in the resulting Cursor
+        String sortOrder =
+                FeedDataTable._ID + " DESC";
+
+        Cursor cursor;
+
+        try {
+            cursor = db.query(
+                    FeedDataTable.TABLE_NAME,  // The table to query
+                    projection,                               // The columns to return
+                    null,                                // The columns for the WHERE clause
+                    null,                            // The values for the WHERE clause
+                    null,                                     // don't group the rows
+                    null,                                     // don't filter by row groups
+                    sortOrder                                 // The sort order
+            );
+        } catch (SQLiteException e) {
+            e.printStackTrace();
+            return null;
+        }
+
+        if (cursor.moveToFirst()) {
+            initFeedEntry(cursor);
+        }
+
+        while (cursor.moveToNext()) {
+            initFeedEntry(cursor);
+        }
+
+        cursor.close();
+        db.close();
+        return null;
+    }
+
+    private void initFeedEntry(Cursor cursor) {
+        FeedEntry.EntryType entryType = FeedEntry.EntryType.valueOf(cursor.getString(
+                cursor.getColumnIndexOrThrow(FeedDataTable.COLUMN_NAME_ENTRY_TYPE)));
+
+        long timestamp = cursor.getLong(
+                cursor.getColumnIndexOrThrow(FeedDataTable.COLUMN_NAME_ENTRY_DATE));
+
+
+        FeedEntry entry = new FeedEntry(entryType, timestamp);
+
+        byte[] serializedList = cursor.getBlob(
+                cursor.getColumnIndexOrThrow(FeedDataTable.COLUMN_NAME_ENTRY_OPERATIONS));
+
+        List<EntryOperationWrapper> operations = (List<EntryOperationWrapper>) ThunderScout.deserializeObject(serializedList);
+
+        for (EntryOperationWrapper operation : operations) {
+            entry.addOperation(operation);
+        }
+
+        publishProgress(entry);
+    }
+
+    @Override
+    protected void onProgressUpdate(FeedEntry[] values) {
+        //Runs on UI thread when publishProgress() is called
+        viewAdapter.addFeedEntry(values[0]);
+
+        super.onProgressUpdate(values);
+    }
+
+    @Override
+    protected void onPostExecute(Void o) {
+        //Runs on UI thread after execution
+
+        if (swipeLayout != null) {
+            swipeLayout.post(new Runnable() {
+                @Override
+                public void run() {
+                    swipeLayout.setRefreshing(false);
+                }
+            });
+        }
+
+        super.onPostExecute(o);
+    }
+
+}
Index: app/src/main/java/com/team980/thunderscout/feed/task/FeedDataClearTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/feed/task/FeedDataClearTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/feed/task/FeedDataClearTask.java	(revision )
@@ -0,0 +1,63 @@
+package com.team980.thunderscout.feed.task;
+
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteException;
+import android.os.AsyncTask;
+import android.widget.Toast;
+
+import com.team980.thunderscout.feed.ActivityFeedAdapter;
+import com.team980.thunderscout.feed.FeedDataContract.FeedDataTable;
+import com.team980.thunderscout.feed.FeedDataDbHelper;
+
+public class FeedDataClearTask extends AsyncTask<Void, Integer, Void> {
+
+    private ActivityFeedAdapter viewAdapter;
+    private Context context;
+
+    public FeedDataClearTask(ActivityFeedAdapter adapter, Context context) {
+        viewAdapter = adapter;
+        this.context = context;
+    }
+
+    @Override
+    protected void onPreExecute() {
+        viewAdapter.clearEntries();
+    }
+
+    @Override
+    public Void doInBackground(Void... params) {
+
+        SQLiteDatabase db = new FeedDataDbHelper(context).getWritableDatabase();
+
+        int rowsDeleted;
+
+        try {
+            rowsDeleted = db.delete(FeedDataTable.TABLE_NAME, null, null);
+        } catch (SQLiteException e) {
+            e.printStackTrace();
+            return null;
+        }
+
+        publishProgress(rowsDeleted);
+
+        db.close();
+        return null;
+    }
+
+    @Override
+    protected void onProgressUpdate(Integer[] values) {
+        //Runs on UI thread when publishProgress() is called
+        Toast.makeText(context, values[0] + " rows deleted from DB", Toast.LENGTH_LONG).show();
+
+        super.onProgressUpdate(values);
+    }
+
+    @Override
+    protected void onPostExecute(Void o) {
+        //Runs on UI thread after execution
+
+        super.onPostExecute(o);
+    }
+
+}
Index: app/src/main/java/com/team980/thunderscout/data/task/ScoutDataClearTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/task/ScoutDataClearTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/task/ScoutDataClearTask.java	(revision )
@@ -0,0 +1,63 @@
+package com.team980.thunderscout.data.task;
+
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteException;
+import android.os.AsyncTask;
+import android.widget.Toast;
+
+import com.team980.thunderscout.data.ScoutDataContract.ScoutDataTable;
+import com.team980.thunderscout.data.ScoutDataDbHelper;
+import com.team980.thunderscout.info.LocalDataAdapter;
+
+public class ScoutDataClearTask extends AsyncTask<Void, Integer, Void> {
+
+    private LocalDataAdapter viewAdapter;
+    private Context context;
+
+    public ScoutDataClearTask(LocalDataAdapter adapter, Context context) {
+        viewAdapter = adapter;
+        this.context = context;
+    }
+
+    @Override
+    protected void onPreExecute() {
+        viewAdapter.clearData();
+    }
+
+    @Override
+    public Void doInBackground(Void... params) {
+
+        SQLiteDatabase db = new ScoutDataDbHelper(context).getWritableDatabase();
+
+        int rowsDeleted;
+
+        try {
+            rowsDeleted = db.delete(ScoutDataTable.TABLE_NAME, null, null);
+        } catch (SQLiteException e) {
+            e.printStackTrace();
+            return null;
+        }
+
+        publishProgress(rowsDeleted);
+
+        db.close();
+        return null;
+    }
+
+    @Override
+    protected void onProgressUpdate(Integer[] values) {
+        //Runs on UI thread when publishProgress() is called
+        Toast.makeText(context, values[0] + " rows deleted from DB", Toast.LENGTH_LONG).show();
+
+        super.onProgressUpdate(values);
+    }
+
+    @Override
+    protected void onPostExecute(Void o) {
+        //Runs on UI thread after execution
+
+        super.onPostExecute(o);
+    }
+
+}
Index: app/src/main/java/com/team980/thunderscout/info/LocalDataAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/info/LocalDataAdapter.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/info/LocalDataAdapter.java	(revision )
@@ -0,0 +1,374 @@
+package com.team980.thunderscout.info;
+
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffColorFilter;
+import android.support.annotation.NonNull;
+import android.util.Log;
+import android.util.SparseBooleanArray;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.CheckBox;
+import android.widget.ImageButton;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.bignerdranch.expandablerecyclerview.Adapter.ExpandableRecyclerAdapter;
+import com.bignerdranch.expandablerecyclerview.Model.ParentListItem;
+import com.bignerdranch.expandablerecyclerview.ViewHolder.ChildViewHolder;
+import com.bignerdranch.expandablerecyclerview.ViewHolder.ParentViewHolder;
+import com.team980.thunderscout.R;
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.info.statistics.MatchInfoActivity;
+import com.team980.thunderscout.info.statistics.TeamInfoActivity;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+import static com.team980.thunderscout.info.TeamWrapper.TeamComparator.SORT_TEAM_NUMBER;
+import static com.team980.thunderscout.info.TeamWrapper.TeamComparator.getComparator;
+
+public class LocalDataAdapter extends ExpandableRecyclerAdapter<LocalDataAdapter.TeamViewHolder, LocalDataAdapter.MatchViewHolder> {
+
+    private LayoutInflater mInflator;
+
+    private ArrayList<TeamWrapper> teams;
+
+    private Context context;
+
+    private TeamWrapper.TeamComparator sortMode = SORT_TEAM_NUMBER;
+
+    private SparseBooleanArray selectedItems;
+
+    private ThisDeviceFragment fragment;
+
+    public LocalDataAdapter(Context context, @NonNull List<? extends ParentListItem> parentItemList, ThisDeviceFragment f) {
+        super(parentItemList);
+
+        mInflator = LayoutInflater.from(context); //TODO move to ViewGroup.getContext()
+
+        teams = (ArrayList<TeamWrapper>) getParentItemList();
+
+        this.context = context;
+
+        selectedItems = new SparseBooleanArray();
+
+        fragment = f;
+    }
+
+    // onCreate ...
+    @Override
+    public TeamViewHolder onCreateParentViewHolder(ViewGroup parentViewGroup) {
+        View teamView = mInflator.inflate(R.layout.team_view, parentViewGroup, false);
+        return new TeamViewHolder(teamView);
+    }
+
+    @Override
+    public MatchViewHolder onCreateChildViewHolder(ViewGroup childViewGroup) {
+        View scoutView = mInflator.inflate(R.layout.match_view, childViewGroup, false);
+        return new MatchViewHolder(scoutView);
+    }
+
+    // onBind ...
+    @Override
+    public void onBindParentViewHolder(TeamViewHolder teamViewHolder, int position, ParentListItem parentListItem) {
+        TeamWrapper team = (TeamWrapper) parentListItem;
+        teamViewHolder.bind(team);
+    }
+
+    @Override
+    public void onBindChildViewHolder(MatchViewHolder matchViewHolder, int position, Object childListItem) {
+        ScoutData scoutData = (ScoutData) childListItem;
+        matchViewHolder.bind(scoutData);
+    }
+
+    @Override
+    public int getItemCount() {
+        return super.getItemCount();
+    }
+
+    /**
+     * Adds an entry to the view. Called by the database reader.
+     *
+     * @param data ScoutData to insert
+     */
+    public void addScoutData(ScoutData data) {
+        Log.d("Adding Data", "Fetching parent item list");
+
+        for (int i = 0; i < teams.size(); i++) {
+            TeamWrapper tw = teams.get(i);
+            Log.d("Adding Data", "Looping: " + i);
+
+            if (tw.getTeamNumber().equals(data.getTeamNumber())) {
+                //Pre-existing team
+                Log.d("Adding Data", "Pre existing team: " + data.getTeamNumber());
+
+                ArrayList<ScoutData> childList = (ArrayList<ScoutData>) tw.getChildItemList();
+
+                Log.d("Adding Data", "Fetching child item list");
+
+                for (ScoutData child : childList) {
+                    Log.d("Adding Data", "Looping child: " + child.getTeamNumber());
+                    if (child.getDateAdded() == (data.getDateAdded())) { //TODO verify this works
+                        //This child has already been added to the database
+                        Log.d("Adding Data", "Child already in DB");
+                        return;
+                    }
+                }
+
+                childList.add(data);
+                Log.d("Adding Data", "Adding new child to parent");
+                notifyChildItemInserted(i, childList.size() - 1); //TODO verify this
+                notifyParentItemChanged(i); //This forces the parent to update
+
+                sort(sortMode);
+                return;
+            }
+        }
+        //New team
+        Log.d("Adding Data", "Adding new parent to list");
+        teams.add(new TeamWrapper(data.getTeamNumber(), data));
+        notifyParentItemInserted(teams.size() - 1); //TODO verify this
+
+        sort(sortMode);
+    }
+
+    /**
+     * Removes all the data from the list.
+     * Called when we delete things.
+     */
+    public void clearData() {
+        if (teams.size() == 0) {
+            //list is empty
+            return;
+        }
+
+        notifyParentItemRangeRemoved(0, teams.size());
+        getParentItemList().removeAll(teams);
+    }
+
+    public void sort(TeamWrapper.TeamComparator mode) {
+        sortMode = mode;
+
+        Collections.sort(teams, getComparator(sortMode));
+        notifyParentItemRangeChanged(0, teams.size());
+    }
+
+    public void select(int pos) {
+        selectedItems.put(pos, true);
+
+        if (!fragment.isInSelectionMode()) {
+            //enter selection mode
+            fragment.setSelectionMode(true);
+            notifyDataSetChanged();
+        } else {
+
+            fragment.updateSelectionModeTitle(getSelectedItemCount());
+            notifyItemChanged(pos);
+        }
+    }
+
+    public void deselect(int pos) {
+        selectedItems.delete(pos);
+
+        if (getSelectedItemCount() == 0 && fragment.isInSelectionMode()) {
+            //exit selection mode
+            fragment.setSelectionMode(false);
+            notifyDataSetChanged();
+        } else {
+            fragment.updateSelectionModeTitle(getSelectedItemCount());
+
+            notifyItemChanged(pos);
+        }
+    }
+
+    public void clearSelections() {
+        selectedItems.clear();
+
+        if (fragment.isInSelectionMode()) {
+            //exit selection mode
+            fragment.setSelectionMode(false);
+        }
+
+        notifyDataSetChanged();
+    }
+
+    public int getSelectedItemCount() {
+        return selectedItems.size();
+    }
+
+    public List<ScoutData> getSelectedItems() {
+        List<ScoutData> items = new ArrayList<>(selectedItems.size());
+        for (int i = 0; i < selectedItems.size(); i++) {
+            items.add((ScoutData) mItemList.get(selectedItems.keyAt(i)));
+            Log.d("GetSelected", selectedItems.keyAt(i) + "");
+            Log.d("GetSelected2", ((ScoutData) mItemList.get(selectedItems.keyAt(i))).getDateAdded() + "");
+        }
+        return items;
+    }
+
+    public class TeamViewHolder extends ParentViewHolder {
+
+        private TextView teamNumber;
+        private TextView descriptor;
+
+        private ImageButton expandButton;
+
+        public TeamViewHolder(View itemView) {
+            super(itemView);
+
+            teamNumber = (TextView) itemView.findViewById(R.id.team_teamNumber);
+            descriptor = (TextView) itemView.findViewById(R.id.team_descriptor);
+
+            expandButton = (ImageButton) itemView.findViewById(R.id.team_expandButton);
+        }
+
+        public void bind(final TeamWrapper tw) {
+            teamNumber.setText("Team " + String.valueOf(tw.getTeamNumber()));
+            descriptor.setText(tw.getDescriptor(sortMode));
+
+            if (sortMode == TeamWrapper.TeamComparator.SORT_TEAM_NUMBER) {
+                descriptor.setText(tw.getNumberOfMatches() + " matches");
+            } else {
+                descriptor.setText(tw.getDescriptor(sortMode));
+            }
+
+            expandButton.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    if (isExpanded()) {
+                        collapseView();
+                        expandButton.setImageResource(R.drawable.ic_expand_more_white_24dp);
+                    } else {
+                        expandView();
+                        expandButton.setImageResource(R.drawable.ic_expand_less_white_24dp);
+                    }
+                }
+            });
+
+            itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    if (fragment.isInSelectionMode()) {
+                        //TODO selectable teams
+                        if (isExpanded()) {
+                            collapseView();
+                            expandButton.setImageResource(R.drawable.ic_expand_more_white_24dp);
+                        } else {
+                            expandView();
+                            expandButton.setImageResource(R.drawable.ic_expand_less_white_24dp);
+                        }
+                    } else {
+                        Intent launchInfoActivity = new Intent(context, TeamInfoActivity.class);
+                        launchInfoActivity.putExtra("com.team980.thunderscout.INFO_AVERAGE_SCOUT", tw.getAverageScoutData());
+                        context.startActivity(launchInfoActivity);
+                    }
+                }
+            });
+        }
+    }
+
+    public class MatchViewHolder extends ChildViewHolder {
+
+        private TextView matchNumber;
+        private TextView allianceColor;
+
+        private ImageView matchIcon;
+
+        private CheckBox checkBox;
+
+        public MatchViewHolder(View itemView) {
+            super(itemView);
+
+            matchNumber = (TextView) itemView.findViewById(R.id.match_matchNumber);
+            allianceColor = (TextView) itemView.findViewById(R.id.match_allianceColor);
+
+            matchIcon = (ImageView) itemView.findViewById(R.id.match_icon);
+
+            checkBox = (CheckBox) itemView.findViewById(R.id.match_checkBox);
+        }
+
+        public void bind(final ScoutData scoutData) {
+            matchNumber.setText("Match " + scoutData.getMatchNumber());
+            allianceColor.setText(scoutData.getAllianceColor().toString());
+
+            matchIcon.setColorFilter(new PorterDuffColorFilter(itemView.getResources().getColor(scoutData.getAllianceColor().getColorPrimary()), PorterDuff.Mode.MULTIPLY));
+
+            if (fragment.isInSelectionMode()) {
+                matchIcon.setVisibility(View.GONE);
+                checkBox.setVisibility(View.VISIBLE);
+
+                if (selectedItems.get(MatchViewHolder.super.getAdapterPosition())) {
+                    checkBox.setChecked(true);
+                } else {
+                    checkBox.setChecked(false);
+                }
+            } else {
+                matchIcon.setVisibility(View.VISIBLE);
+                checkBox.setVisibility(View.GONE);
+            }
+
+            itemView.setOnClickListener(new View.OnClickListener() {
+                public void onClick(View v) {
+                    if (fragment.isInSelectionMode()) {
+                        Log.d("ADAPT", MatchViewHolder.super.getAdapterPosition() + "");
+                        Log.d("ADAPT2", checkBox.isChecked() + "");
+                        Log.d("ADAPT3", selectedItems.get(MatchViewHolder.super.getAdapterPosition()) + "");
+                        if (selectedItems.get(MatchViewHolder.super.getAdapterPosition())) {
+                            deselect(MatchViewHolder.super.getAdapterPosition());
+                            checkBox.setChecked(false);
+                        } else {
+                            select(MatchViewHolder.super.getAdapterPosition());
+                            checkBox.setChecked(true);
+                        }
+                        Log.d("ADAPT4", selectedItems.toString());
+                    } else {
+                        Intent launchInfoActivity = new Intent(context, MatchInfoActivity.class);
+                        launchInfoActivity.putExtra("com.team980.thunderscout.INFO_SCOUT", scoutData);
+                        context.startActivity(launchInfoActivity);
+                    }
+                }
+            });
+
+            itemView.setOnLongClickListener(new View.OnLongClickListener() {
+                @Override
+                public boolean onLongClick(View view) {
+                    Log.d("ADAPT", MatchViewHolder.super.getAdapterPosition() + "");
+                    Log.d("ADAPT2", checkBox.isChecked() + "");
+                    Log.d("ADAPT3", selectedItems.get(MatchViewHolder.super.getAdapterPosition()) + "");
+                    if (selectedItems.get(MatchViewHolder.super.getAdapterPosition())) {
+                        deselect(MatchViewHolder.super.getAdapterPosition());
+                        checkBox.setChecked(false);
+                    } else {
+                        select(MatchViewHolder.super.getAdapterPosition());
+                        checkBox.setChecked(true);
+                    }
+                    Log.d("ADAPT4", selectedItems.toString());
+                    return true;
+                }
+            });
+
+            checkBox.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View view) {
+                    Log.d("ADAPT", MatchViewHolder.super.getAdapterPosition() + "");
+                    Log.d("ADAPT2", checkBox.isChecked() + "");
+                    Log.d("ADAPT3", selectedItems.get(MatchViewHolder.super.getAdapterPosition()) + "");
+                    if (selectedItems.get(MatchViewHolder.super.getAdapterPosition())) {
+                        deselect(MatchViewHolder.super.getAdapterPosition());
+                        checkBox.setChecked(false);
+                    } else {
+                        select(MatchViewHolder.super.getAdapterPosition());
+                        checkBox.setChecked(true);
+                    }
+                    Log.d("ADAPT4", selectedItems.toString());
+                }
+            });
+        }
+    }
+
+
+}
Index: app/src/main/res/anim/slide_out_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/anim/slide_out_up.xml	(revision )
+++ app/src/main/res/anim/slide_out_up.xml	(revision )
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromYDelta="0%p" android:toYDelta="-100%p"
+    android:duration="@android:integer/config_longAnimTime"/>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/data/task/ScoutDataDeleteTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/data/task/ScoutDataDeleteTask.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/data/task/ScoutDataDeleteTask.java	(revision )
@@ -0,0 +1,89 @@
+package com.team980.thunderscout.data.task;
+
+import android.content.Context;
+import android.content.Intent;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteException;
+import android.os.AsyncTask;
+import android.support.v4.content.LocalBroadcastManager;
+import android.widget.Toast;
+
+import com.team980.thunderscout.data.ScoutData;
+import com.team980.thunderscout.data.ScoutDataContract.ScoutDataTable;
+import com.team980.thunderscout.data.ScoutDataDbHelper;
+import com.team980.thunderscout.info.LocalDataAdapter;
+import com.team980.thunderscout.info.ThisDeviceFragment;
+
+import java.util.List;
+
+public class ScoutDataDeleteTask extends AsyncTask<Void, Integer, Void> {
+
+    private LocalDataAdapter viewAdapter;
+    private Context context;
+
+    private LocalBroadcastManager localBroadcastManager;
+
+    private List<ScoutData> dataToDelete;
+
+
+    public ScoutDataDeleteTask(LocalDataAdapter adapter, Context context, List<ScoutData> datas) {
+        viewAdapter = adapter;
+        this.context = context;
+
+        dataToDelete = datas;
+
+        localBroadcastManager = LocalBroadcastManager.getInstance(context);
+    }
+
+    @Override
+    protected void onPreExecute() {
+        viewAdapter.clearSelections();
+    }
+
+    @Override
+    public Void doInBackground(Void... params) {
+
+        SQLiteDatabase db = new ScoutDataDbHelper(context).getWritableDatabase();
+
+        StringBuilder where = new StringBuilder("date_added IN (");
+        for (ScoutData data : dataToDelete) {
+            where.append(data.getDateAdded()).append(",");
+        }
+        where.setLength(where.length() - 1); //no more comma
+        where.append(")");
+
+        int rowsDeleted;
+
+        try {
+            rowsDeleted = db.delete(ScoutDataTable.TABLE_NAME, where.toString(), null);
+        } catch (SQLiteException e) {
+            e.printStackTrace();
+            return null;
+        }
+
+        publishProgress(rowsDeleted);
+
+        db.close();
+        return null;
+    }
+
+    @Override
+    protected void onProgressUpdate(Integer[] values) {
+        //Runs on UI thread when publishProgress() is called
+        Toast.makeText(context, values[0] + " rows deleted from DB", Toast.LENGTH_LONG).show();
+
+        super.onProgressUpdate(values);
+    }
+
+    @Override
+    protected void onPostExecute(Void o) {
+        //Runs on UI thread after execution
+        viewAdapter.clearData();
+
+        Intent intent = new Intent(ThisDeviceFragment.ACTION_REFRESH_VIEW_PAGER);
+        localBroadcastManager.sendBroadcast(intent); //notify the UI thread so we can refresh the ViewPager automatically :D
+
+        super.onPostExecute(o);
+    }
+
+}
Index: app/src/main/res/drawable/ic_expand_more_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_expand_more_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_expand_more_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M16.59,8.59L12,13.17 7.41,8.59 6,10l6,6 6,-6z"/>
+</vector>
Index: app/src/main/res/drawable/ic_save_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_save_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_save_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M17,3L5,3c-1.11,0 -2,0.9 -2,2v14c0,1.1 0.89,2 2,2h14c1.1,0 2,-0.9 2,-2L21,7l-4,-4zM12,19c-1.66,0 -3,-1.34 -3,-3s1.34,-3 3,-3 3,1.34 3,3 -1.34,3 -3,3zM15,9L5,9L5,5h10v4z"/>
+</vector>
Index: app/src/main/res/drawable/ic_flag_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_flag_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_flag_white_24dp.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M14.4,6L14,4H5v17h2v-7h5.6l0.4,2h7V6z"/>
+</vector>
Index: app/src/main/res/layout/activity_info_team.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_info_team.xml	(revision )
+++ app/src/main/res/layout/activity_info_team.xml	(revision )
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.design.widget.AppBarLayout
+        android:id="@+id/app_bar_layout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:layout_gravity="top|center_horizontal"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/ThemeOverlay.AppCompat.Dark" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <android.support.v4.widget.NestedScrollView android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        app:layout_behavior="android.support.design.widget.AppBarLayout$ScrollingViewBehavior"
+        xmlns:android="http://schemas.android.com/apk/res/android">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:padding="16dp">
+
+                <TextView
+                    android:id="@+id/info_average_lastUpdated"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginBottom="8dp"
+                    android:text="Last Updated"
+                    android:textAppearance="@style/TextAppearance.AppCompat.Subhead"
+                    android:textSize="20sp" />
+
+            </LinearLayout>
+
+            <include layout="@layout/layout_info_average_auto" />
+
+            <include layout="@layout/layout_info_average_teleop" />
+
+            <include layout="@layout/layout_info_average_summary" />
+
+        </LinearLayout>
+
+    </android.support.v4.widget.NestedScrollView>
+
+</android.support.design.widget.CoordinatorLayout>
+
Index: app/src/main/res/layout/fragment_summary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_summary.xml	(revision )
+++ app/src/main/res/layout/fragment_summary.xml	(revision )
@@ -0,0 +1,105 @@
+<android.support.v4.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/summary_scrollView"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    app:layout_behavior="android.support.design.widget.AppBarLayout$ScrollingViewBehavior">
+
+    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:padding="20dp">
+
+        <CheckBox
+            android:text="Team's pilot is on airshift"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:id="@+id/pilot" />
+
+
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginRight="5dp"
+            android:text="Climbing Stats"
+            android:textSize="18sp" />
+
+        <Spinner
+            android:id="@+id/summary_spinnerClimbingStats"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginLeft="5dp"
+            android:entries="@array/climbing_stats_array" />
+
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginRight="5dp"
+            android:text="Shoot High Accuracy"
+            android:textSize="18sp" />
+
+        <Spinner
+            android:id="@+id/shoot_high_accuracy"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:dropDownWidth="wrap_content"
+            android:spinnerMode="dropdown" />
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_horizontal"
+            android:layout_marginBottom="10dp"
+            android:layout_marginTop="10dp"
+            android:orientation="horizontal">
+
+            <android.support.design.widget.TextInputLayout
+                android:id="@+id/summary_tilTroubleWith"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:hint="Trouble with?">
+
+                <android.support.v7.widget.AppCompatEditText
+                    android:id="@+id/summary_edittextTroubleWith"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:ems="20" />
+
+            </android.support.design.widget.TextInputLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_horizontal"
+            android:layout_marginBottom="10dp"
+            android:orientation="horizontal">
+
+            <android.support.design.widget.TextInputLayout
+                android:id="@+id/summary_tilComments"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:hint="Comments">
+
+                <android.support.v7.widget.AppCompatEditText
+                    android:id="@+id/summary_edittextComments"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:ems="20" />
+
+            </android.support.design.widget.TextInputLayout>
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+</android.support.v4.widget.NestedScrollView>
\ No newline at end of file
Index: app/src/main/java/com/team980/thunderscout/util/TSNotificationBuilder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/team980/thunderscout/util/TSNotificationBuilder.java	(revision )
+++ app/src/main/java/com/team980/thunderscout/util/TSNotificationBuilder.java	(revision )
@@ -0,0 +1,80 @@
+package com.team980.thunderscout.util;
+
+import android.app.NotificationManager;
+import android.content.Context;
+import android.support.v4.app.NotificationCompat;
+
+import com.team980.thunderscout.R;
+
+@Deprecated
+public class TSNotificationBuilder {
+
+    private static TSNotificationBuilder ourInstance; //TODO the existence of this class is a memory leak
+
+    private Context context;
+
+    private NotificationCompat.Builder btTransferInProgress;
+    private NotificationCompat.Builder btTransferError;
+    private int lastUsedId = 1;
+
+    private TSNotificationBuilder(Context context) { //TODO add click intents
+        this.context = context;
+
+        btTransferInProgress = new NotificationCompat.Builder(context)
+                .setSmallIcon(R.drawable.ic_bluetooth_searching_white_24dp) //TODO find icon
+                .setContentTitle("Transferring data to device")
+                .setProgress(100, 0, true)
+                .setOngoing(true)
+                .setColor(context.getResources().getColor(R.color.accent)) //TODO use nonyellow accent?
+                .setGroup("BT_TRANSFER_ONGOING");
+
+        btTransferError = new NotificationCompat.Builder(context)
+                .setSmallIcon(R.drawable.ic_bluetooth_searching_white_24dp) //TODO find icon
+                .setContentTitle("Data transfer failed")
+                .setContentText("Failed to receive data from device")
+                .setColor(context.getResources().getColor(R.color.error))
+                .setGroup("BT_TRANSFER_ERROR");
+    }
+
+    public static TSNotificationBuilder getInstance(Context context) {
+        if (ourInstance == null) {
+            ourInstance = new TSNotificationBuilder(context);
+        }
+
+        return ourInstance;
+    }
+
+    @Deprecated
+    public int showBtTransferInProgress(String deviceName, boolean isServer) {
+        NotificationManager mNotifyMgr = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+        lastUsedId++;
+
+        String message;
+        if (isServer) {
+            message = "Receiving data from ";
+        } else {
+            message = "Sending data to ";
+        }
+
+        btTransferInProgress.setContentTitle(message + deviceName);
+        btTransferInProgress.setWhen(System.currentTimeMillis());
+
+        mNotifyMgr.notify(lastUsedId, btTransferInProgress.build());
+        return lastUsedId;
+    }
+
+    @Deprecated
+    public void showBtTransferError(String deviceName, int id) {
+        NotificationManager mNotifyMgr = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+        btTransferError.setContentText("Failed to receive data from " + deviceName);
+        btTransferError.setWhen(System.currentTimeMillis());
+
+        mNotifyMgr.notify(id, btTransferError.build());
+    }
+
+    public void showBtTransferFinished(int id) {
+        NotificationManager mNotifyMgr = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+
+        mNotifyMgr.cancel(id);
+    }
+}
